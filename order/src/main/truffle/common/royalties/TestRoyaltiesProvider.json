{
  "contractName": "TestRoyaltiesProvider",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "token",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "getRoyalties",
      "outputs": [
        {
          "components": [
            {
              "internalType": "address payable",
              "name": "account",
              "type": "address"
            },
            {
              "internalType": "uint96",
              "name": "value",
              "type": "uint96"
            }
          ],
          "internalType": "struct LibPart.Part[]",
          "name": "",
          "type": "tuple[]"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.7.6+commit.7338295f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getRoyalties\",\"outputs\":[{\"components\":[{\"internalType\":\"address payable\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint96\",\"name\":\"value\",\"type\":\"uint96\"}],\"internalType\":\"struct LibPart.Part[]\",\"name\":\"\",\"type\":\"tuple[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"/home/quadro/Projects/tokenplace/interfaces/exchange-v2/contracts/exchange/v2/TestRoyaltiesProvider.sol\":\"TestRoyaltiesProvider\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"/home/quadro/Projects/tokenplace/interfaces/exchange-v2/contracts/exchange/v2/IRoyaltiesProvider.sol\":{\"keccak256\":\"0x6f661ad943e273c6782ef077113cddf584d19d62d6c9c96703d1b01ee9e35ead\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be7a4055866084d97ec538594c37851484e7fe95ae940c07ea343b1957902023\",\"dweb:/ipfs/QmTxZux5YLoFhzR6YgsRMVJ7gomsHcssFFMzmhVpRuPc7u\"]},\"/home/quadro/Projects/tokenplace/interfaces/exchange-v2/contracts/exchange/v2/TestRoyaltiesProvider.sol\":{\"keccak256\":\"0x20443cf82d413940177035387b6c43c672bb046c70a6862d05ef37b53e52f79f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://55402d9f1b46497cf6691b5f61a0c5d38204db95d1e841c45461524b3fce3e6a\",\"dweb:/ipfs/QmVjzfR63JCRCv7nxK6rkojD9gRxKLrewcWvysCrWXrrxi\"]},\"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":{\"keccak256\":\"0xb419e68addcb82ecda3ad3974b0d2db76435ce9b08435a04d5b119a0c5d45ea5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a85355cc4f2554f4a8d334336d66b48d616abf1d90ec3d6b602e825c6fe63f0c\",\"dweb:/ipfs/QmTJYtsKJjBy3ShAt4kEjvM6nfVS8ZAFQqE29fG16tUP8d\"]},\"@openzeppelin/contracts-upgradeable/introspection/IERC165Upgradeable.sol\":{\"keccak256\":\"0x4784c3f8a520a739dd25d76f514833a653990902d0e21601aed45bda44c87524\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://359411cc44a4499f37d46562ef3f348db443f9a699138c1797264d20b14697b7\",\"dweb:/ipfs/QmUmeQNUwve4MFCc1ace6zMnstqa8S9SZe1nXG9THcpQ5v\"]},\"@openzeppelin/contracts-upgradeable/proxy/Initializable.sol\":{\"keccak256\":\"0xd8e4eb08dcc1d1860fb347ba5ffd595242b9a1b66d49a47f2b4cb51c3f35017e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7dbc89479d30592e82442edc38053b380f611037a5e6ceafc7bf57a7aa1f0305\",\"dweb:/ipfs/QmcdYtt56WmjeYvsFjK69FnahnAriw88VzY3XRZwXkQKKN\"]},\"@openzeppelin/contracts-upgradeable/token/ERC721/IERC721Upgradeable.sol\":{\"keccak256\":\"0x3dab19bb4a63bcbda1ee153ca291694f92f9009fad28626126b15a8503b0e5ff\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ecc8ae8f1f85e11b6f749e147ac298d1d66879f3bfe3d4518b919f7b6151a73b\",\"dweb:/ipfs/QmYXZfcnCd1N1AaxUTfNQjNHJXAAfVGvae6Bte1SfTCKEz\"]},\"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":{\"keccak256\":\"0xfc5ea91fa9ceb1961023b2a6c978b902888c52b90847ac7813fe3b79524165f6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a6b81dcc816857a9d981386f6d8de49198420ee41cdc0ecade366ab412174d03\",\"dweb:/ipfs/QmV2vznMT6m9qo3pFMAWi3Nz3UDhwesgwFxeXe6Tod3v8A\"]},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0xbbf8a21b9a66c48d45ff771b8563c6df19ba451d63dfb8380a865c1e1f29d1a0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://062688aac76e27ab50157a9d645700cf92e3c0d51d3d860be1d2e1a0c04a87d0\",\"dweb:/ipfs/QmfXxppWAiSTeH8YNn2EtMPDgzrLeJ5rjRq8knEbje88mX\"]},\"@rarible/royalties/contracts/LibPart.sol\":{\"keccak256\":\"0xd0123f7411573a6a7e1527e0d3901913d7642e504ff240d5b7c5b76a28587def\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://447b449f7f986ecfdea10cbc96ae276877102866353b4f8410fec0bdb357d5ae\",\"dweb:/ipfs/QmatbYwMc1UXCGGH1D9fvgLbLPNdgzBVafYW84B1nJJiRr\"]},\"@rarible/royalties/contracts/LibRoyaltiesV1.sol\":{\"keccak256\":\"0xa69539ead11d93c9c53c97c66c01f2aa054bdc51dfc266c05c9ff59b9c648d0f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3bb1b575738f2ebb531b3156e86915d4222377e6b62968e911e92a82267222a0\",\"dweb:/ipfs/QmQtnjU8QNgPKspPwHR8bD8zY76ygcztEuQAaKWPUimN7e\"]},\"@rarible/royalties/contracts/LibRoyaltiesV2.sol\":{\"keccak256\":\"0x17a995a9bf12117cf5073630bed52eb0a46c7f541bf5bd0803ebc48b8dd1c243\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://de5b93d5b8b1eb521273d439c8bad57c35894b92c7b5b05cfc00a084f4b55d81\",\"dweb:/ipfs/QmWoSe6ZztCSuqcy55EPjBzbsiBFSD2xwPPBDmcVmCNJXB\"]},\"@rarible/royalties/contracts/RoyaltiesV1.sol\":{\"keccak256\":\"0x9dd5165b224ab2c9a5d8243b0ba296181d00470ea9d054d1afed86453a2337a8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://84d7a5e09f1e1232fbc526c8584e3e689072e2f731e4cb55edbfb92b5bc8b584\",\"dweb:/ipfs/QmbCTLg22HRW1fcJq9NLVF5DaPJVQFEGzPmCDmNjGTbC6i\"]},\"@rarible/royalties/contracts/RoyaltiesV2.sol\":{\"keccak256\":\"0x1f1baf0e9898eee3bee6beb15b8ff28535016f2006c21269ca9e5d4227275eae\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://11038edda665721955c108428e2c6a81b993c1f3a68f887eb4d786c100f73d1a\",\"dweb:/ipfs/QmNjNwvKSLAf4R3HwLFQjj2EXxZoMnaX62DLA6xrieTUWB\"]},\"@rarible/royalties/contracts/impl/AbstractRoyalties.sol\":{\"keccak256\":\"0xf76cd46ca0596169926ee37de4675ac447aee2824caa296b6c3c27fbe2e1b296\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://95e4cc802775eea56424b25f3c2660ceb83c4eea3195c5c961f73148b97e1f50\",\"dweb:/ipfs/Qmbm1kTFiQDJQsfqSLHKzru2hQuRAY23sXpBTxd7rtZrsj\"]},\"@rarible/royalties/contracts/impl/RoyaltiesV1Impl.sol\":{\"keccak256\":\"0xb4f8282ea3f609f7c6ca87ba4cec13544836134dc5a3524d7b890f8d7d467153\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5694f1b158a538b2d31572ad91d5259b5bab07e372c4afb66f589b84fc1ea1bd\",\"dweb:/ipfs/QmXq6A7BenPzqxE6vVr8ZqS6b4AvHgHa4PFkvjHNY3aFoU\"]},\"@rarible/royalties/contracts/impl/RoyaltiesV2Impl.sol\":{\"keccak256\":\"0xf9ec46ed70b33bc63fb3cde1be0576c8c0ccc3d05045d354752a6574e16a1293\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://daee5107e983b28e0a2b5da6fd9d0e9d7324db7790befccdc20a537967cfb14f\",\"dweb:/ipfs/QmaBXC5DvLzryWjYMZMHkF4dGdp42h32E81HJuBuCWKDhM\"]}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b5061017d806100206000396000f3fe608060405234801561001057600080fd5b506004361061002b5760003560e01c80639ca7dc7a14610030575b600080fd5b61004361003e3660046100ab565b610059565b60405161005091906100e1565b60405180910390f35b6040805160008082526020820190925260609161008c565b610079610094565b8152602001906001900390816100715790505b509392505050565b604080518082019091526000808252602082015290565b600080604083850312156100bd578182fd5b82356001600160a01b03811681146100d3578283fd5b946020939093013593505050565b602080825282518282018190526000919060409081850190868401855b8281101561013a57815180516001600160a01b031685528601516bffffffffffffffffffffffff168685015292840192908501906001016100fe565b509197965050505050505056fea2646970667358221220747fdf85c33063fca611bb784ec60014959c4b9c81d99ae611a0700000520d4764736f6c63430007060033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b506004361061002b5760003560e01c80639ca7dc7a14610030575b600080fd5b61004361003e3660046100ab565b610059565b60405161005091906100e1565b60405180910390f35b6040805160008082526020820190925260609161008c565b610079610094565b8152602001906001900390816100715790505b509392505050565b604080518082019091526000808252602082015290565b600080604083850312156100bd578182fd5b82356001600160a01b03811681146100d3578283fd5b946020939093013593505050565b602080825282518282018190526000919060409081850190868401855b8281101561013a57815180516001600160a01b031685528601516bffffffffffffffffffffffff168685015292840192908501906001016100fe565b509197965050505050505056fea2646970667358221220747fdf85c33063fca611bb784ec60014959c4b9c81d99ae611a0700000520d4764736f6c63430007060033",
  "immutableReferences": {},
  "generatedSources": [],
  "deployedGeneratedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:1239:58",
        "statements": [
          {
            "nodeType": "YulBlock",
            "src": "6:3:58",
            "statements": []
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "101:287:58",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "147:26:58",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "156:6:58"
                            },
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "164:6:58"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "149:6:58"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "149:22:58"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "149:22:58"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "122:7:58"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "131:9:58"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "118:3:58"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "118:23:58"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "143:2:58",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "114:3:58"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "114:32:58"
                  },
                  "nodeType": "YulIf",
                  "src": "111:2:58"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "182:36:58",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "208:9:58"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "195:12:58"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "195:23:58"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "186:5:58",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "281:26:58",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "290:6:58"
                            },
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "298:6:58"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "283:6:58"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "283:22:58"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "283:22:58"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "240:5:58"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "251:5:58"
                              },
                              {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "266:3:58",
                                        "type": "",
                                        "value": "160"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "271:1:58",
                                        "type": "",
                                        "value": "1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "shl",
                                      "nodeType": "YulIdentifier",
                                      "src": "262:3:58"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "262:11:58"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "275:1:58",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "sub",
                                  "nodeType": "YulIdentifier",
                                  "src": "258:3:58"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "258:19:58"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "247:3:58"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "247:31:58"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "237:2:58"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "237:42:58"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "230:6:58"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "230:50:58"
                  },
                  "nodeType": "YulIf",
                  "src": "227:2:58"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "316:15:58",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "326:5:58"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "316:6:58"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "340:42:58",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "367:9:58"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "378:2:58",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "363:3:58"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "363:18:58"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "350:12:58"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "350:32:58"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "340:6:58"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_addresst_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "59:9:58",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "70:7:58",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "82:6:58",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "90:6:58",
                "type": ""
              }
            ],
            "src": "14:374:58"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "588:649:58",
              "statements": [
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "598:12:58",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "608:2:58",
                    "type": "",
                    "value": "32"
                  },
                  "variables": [
                    {
                      "name": "_1",
                      "nodeType": "YulTypedName",
                      "src": "602:2:58",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "619:32:58",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "637:9:58"
                      },
                      {
                        "name": "_1",
                        "nodeType": "YulIdentifier",
                        "src": "648:2:58"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "633:3:58"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "633:18:58"
                  },
                  "variables": [
                    {
                      "name": "tail_1",
                      "nodeType": "YulTypedName",
                      "src": "623:6:58",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "667:9:58"
                      },
                      {
                        "name": "_1",
                        "nodeType": "YulIdentifier",
                        "src": "678:2:58"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "660:6:58"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "660:21:58"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "660:21:58"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "690:17:58",
                  "value": {
                    "name": "tail_1",
                    "nodeType": "YulIdentifier",
                    "src": "701:6:58"
                  },
                  "variables": [
                    {
                      "name": "pos",
                      "nodeType": "YulTypedName",
                      "src": "694:3:58",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "716:27:58",
                  "value": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "736:6:58"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "730:5:58"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "730:13:58"
                  },
                  "variables": [
                    {
                      "name": "length",
                      "nodeType": "YulTypedName",
                      "src": "720:6:58",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "tail_1",
                        "nodeType": "YulIdentifier",
                        "src": "759:6:58"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "767:6:58"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "752:6:58"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "752:22:58"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "752:22:58"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "783:12:58",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "793:2:58",
                    "type": "",
                    "value": "64"
                  },
                  "variables": [
                    {
                      "name": "_2",
                      "nodeType": "YulTypedName",
                      "src": "787:2:58",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "804:25:58",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "815:9:58"
                      },
                      {
                        "name": "_2",
                        "nodeType": "YulIdentifier",
                        "src": "826:2:58"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "811:3:58"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "811:18:58"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "804:3:58"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "838:29:58",
                  "value": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "856:6:58"
                      },
                      {
                        "name": "_1",
                        "nodeType": "YulIdentifier",
                        "src": "864:2:58"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "852:3:58"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "852:15:58"
                  },
                  "variables": [
                    {
                      "name": "srcPtr",
                      "nodeType": "YulTypedName",
                      "src": "842:6:58",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "876:13:58",
                  "value": {
                    "name": "tail",
                    "nodeType": "YulIdentifier",
                    "src": "885:4:58"
                  },
                  "variables": [
                    {
                      "name": "i",
                      "nodeType": "YulTypedName",
                      "src": "880:1:58",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "947:264:58",
                    "statements": [
                      {
                        "nodeType": "YulVariableDeclaration",
                        "src": "961:23:58",
                        "value": {
                          "arguments": [
                            {
                              "name": "srcPtr",
                              "nodeType": "YulIdentifier",
                              "src": "977:6:58"
                            }
                          ],
                          "functionName": {
                            "name": "mload",
                            "nodeType": "YulIdentifier",
                            "src": "971:5:58"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "971:13:58"
                        },
                        "variables": [
                          {
                            "name": "_3",
                            "nodeType": "YulTypedName",
                            "src": "965:2:58",
                            "type": ""
                          }
                        ]
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "pos",
                              "nodeType": "YulIdentifier",
                              "src": "1004:3:58"
                            },
                            {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "name": "_3",
                                      "nodeType": "YulIdentifier",
                                      "src": "1019:2:58"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "mload",
                                    "nodeType": "YulIdentifier",
                                    "src": "1013:5:58"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "1013:9:58"
                                },
                                {
                                  "arguments": [
                                    {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "1032:3:58",
                                          "type": "",
                                          "value": "160"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "1037:1:58",
                                          "type": "",
                                          "value": "1"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "shl",
                                        "nodeType": "YulIdentifier",
                                        "src": "1028:3:58"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "1028:11:58"
                                    },
                                    {
                                      "kind": "number",
                                      "nodeType": "YulLiteral",
                                      "src": "1041:1:58",
                                      "type": "",
                                      "value": "1"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "sub",
                                    "nodeType": "YulIdentifier",
                                    "src": "1024:3:58"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "1024:19:58"
                                }
                              ],
                              "functionName": {
                                "name": "and",
                                "nodeType": "YulIdentifier",
                                "src": "1009:3:58"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "1009:35:58"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "997:6:58"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "997:48:58"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "997:48:58"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "name": "pos",
                                  "nodeType": "YulIdentifier",
                                  "src": "1069:3:58"
                                },
                                {
                                  "name": "_1",
                                  "nodeType": "YulIdentifier",
                                  "src": "1074:2:58"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "1065:3:58"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "1065:12:58"
                            },
                            {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "arguments": [
                                        {
                                          "name": "_3",
                                          "nodeType": "YulIdentifier",
                                          "src": "1093:2:58"
                                        },
                                        {
                                          "name": "_1",
                                          "nodeType": "YulIdentifier",
                                          "src": "1097:2:58"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "add",
                                        "nodeType": "YulIdentifier",
                                        "src": "1089:3:58"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "1089:11:58"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "mload",
                                    "nodeType": "YulIdentifier",
                                    "src": "1083:5:58"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "1083:18:58"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "1103:26:58",
                                  "type": "",
                                  "value": "0xffffffffffffffffffffffff"
                                }
                              ],
                              "functionName": {
                                "name": "and",
                                "nodeType": "YulIdentifier",
                                "src": "1079:3:58"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "1079:51:58"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "1058:6:58"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1058:73:58"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1058:73:58"
                      },
                      {
                        "nodeType": "YulAssignment",
                        "src": "1144:19:58",
                        "value": {
                          "arguments": [
                            {
                              "name": "pos",
                              "nodeType": "YulIdentifier",
                              "src": "1155:3:58"
                            },
                            {
                              "name": "_2",
                              "nodeType": "YulIdentifier",
                              "src": "1160:2:58"
                            }
                          ],
                          "functionName": {
                            "name": "add",
                            "nodeType": "YulIdentifier",
                            "src": "1151:3:58"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1151:12:58"
                        },
                        "variableNames": [
                          {
                            "name": "pos",
                            "nodeType": "YulIdentifier",
                            "src": "1144:3:58"
                          }
                        ]
                      },
                      {
                        "nodeType": "YulAssignment",
                        "src": "1176:25:58",
                        "value": {
                          "arguments": [
                            {
                              "name": "srcPtr",
                              "nodeType": "YulIdentifier",
                              "src": "1190:6:58"
                            },
                            {
                              "name": "_1",
                              "nodeType": "YulIdentifier",
                              "src": "1198:2:58"
                            }
                          ],
                          "functionName": {
                            "name": "add",
                            "nodeType": "YulIdentifier",
                            "src": "1186:3:58"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1186:15:58"
                        },
                        "variableNames": [
                          {
                            "name": "srcPtr",
                            "nodeType": "YulIdentifier",
                            "src": "1176:6:58"
                          }
                        ]
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "i",
                        "nodeType": "YulIdentifier",
                        "src": "909:1:58"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "912:6:58"
                      }
                    ],
                    "functionName": {
                      "name": "lt",
                      "nodeType": "YulIdentifier",
                      "src": "906:2:58"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "906:13:58"
                  },
                  "nodeType": "YulForLoop",
                  "post": {
                    "nodeType": "YulBlock",
                    "src": "920:18:58",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "922:14:58",
                        "value": {
                          "arguments": [
                            {
                              "name": "i",
                              "nodeType": "YulIdentifier",
                              "src": "931:1:58"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "934:1:58",
                              "type": "",
                              "value": "1"
                            }
                          ],
                          "functionName": {
                            "name": "add",
                            "nodeType": "YulIdentifier",
                            "src": "927:3:58"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "927:9:58"
                        },
                        "variableNames": [
                          {
                            "name": "i",
                            "nodeType": "YulIdentifier",
                            "src": "922:1:58"
                          }
                        ]
                      }
                    ]
                  },
                  "pre": {
                    "nodeType": "YulBlock",
                    "src": "902:3:58",
                    "statements": []
                  },
                  "src": "898:313:58"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1220:11:58",
                  "value": {
                    "name": "pos",
                    "nodeType": "YulIdentifier",
                    "src": "1228:3:58"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "1220:4:58"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_array$_t_struct$_Part_$6132_memory_ptr_$dyn_memory_ptr__to_t_array$_t_struct$_Part_$6132_memory_ptr_$dyn_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "557:9:58",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "568:6:58",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "579:4:58",
                "type": ""
              }
            ],
            "src": "393:844:58"
          }
        ]
      },
      "contents": "{\n    { }\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(value0, value0) }\n        let value := calldataload(headStart)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(value0, value0) }\n        value0 := value\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_encode_tuple_t_array$_t_struct$_Part_$6132_memory_ptr_$dyn_memory_ptr__to_t_array$_t_struct$_Part_$6132_memory_ptr_$dyn_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        let _1 := 32\n        let tail_1 := add(headStart, _1)\n        mstore(headStart, _1)\n        let pos := tail_1\n        let length := mload(value0)\n        mstore(tail_1, length)\n        let _2 := 64\n        pos := add(headStart, _2)\n        let srcPtr := add(value0, _1)\n        let i := tail\n        for { } lt(i, length) { i := add(i, 1) }\n        {\n            let _3 := mload(srcPtr)\n            mstore(pos, and(mload(_3), sub(shl(160, 1), 1)))\n            mstore(add(pos, _1), and(mload(add(_3, _1)), 0xffffffffffffffffffffffff))\n            pos := add(pos, _2)\n            srcPtr := add(srcPtr, _1)\n        }\n        tail := pos\n    }\n}",
      "id": 58,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "sourceMap": "524:196:22:-:0;;;;;;;;;;;;;;;;;;;",
  "deployedSourceMap": "524:196:22:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;581:137;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;;693:21;;;712:1;693:21;;;;;;;;;659;;693;;;;;:::i;:::-;;;;;;;;;;;;;;;;-1:-1:-1;686:28:22;581:137;-1:-1:-1;;;581:137:22:o;-1:-1:-1:-;;;;;;;;;;;;;;;;;;;:::o;14:374:58:-;;;143:2;131:9;122:7;118:23;114:32;111:2;;;164:6;156;149:22;111:2;195:23;;-1:-1:-1;;;;;247:31:58;;237:42;;227:2;;298:6;290;283:22;227:2;326:5;378:2;363:18;;;;350:32;;-1:-1:-1;;;101:287:58:o;393:844::-;608:2;660:21;;;730:13;;633:18;;;752:22;;;393:844;;608:2;793;;811:18;;;;852:15;;;393:844;898:313;912:6;909:1;906:13;898:313;;;971:13;;1013:9;;-1:-1:-1;;;;;1009:35:58;997:48;;1089:11;;1083:18;1103:26;1079:51;1065:12;;;1058:73;1151:12;;;;1186:15;;;;1041:1;927:9;898:313;;;-1:-1:-1;1228:3:58;;588:649;-1:-1:-1;;;;;;;588:649:58:o",
  "source": "// SPDX-License-Identifier: MIT\n\npragma solidity >=0.6.2 <0.8.0;\npragma abicoder v2;\n\nimport \"./IRoyaltiesProvider.sol\";\nimport \"@rarible/royalties/contracts/LibRoyaltiesV2.sol\";\nimport \"@rarible/royalties/contracts/LibRoyaltiesV1.sol\";\nimport \"@rarible/royalties/contracts/impl/RoyaltiesV1Impl.sol\";\nimport \"@rarible/royalties/contracts/impl/RoyaltiesV2Impl.sol\";\nimport \"@openzeppelin/contracts-upgradeable/token/ERC721/IERC721Upgradeable.sol\";\nimport \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\";\n\ncontract TestRoyaltiesProvider is IRoyaltiesProvider {\n\n\tfunction getRoyalties(address token, uint tokenId) override external returns (LibPart.Part[] memory) {\n\t\treturn new LibPart.Part[](0);\n\t}\n}\n",
  "sourcePath": "/home/quadro/Projects/tokenplace/interfaces/exchange-v2/contracts/exchange/v2/TestRoyaltiesProvider.sol",
  "ast": {
    "absolutePath": "/home/quadro/Projects/tokenplace/interfaces/exchange-v2/contracts/exchange/v2/TestRoyaltiesProvider.sol",
    "exportedSymbols": {
      "AbstractRoyalties": [
        6338
      ],
      "AddressUpgradeable": [
        5749
      ],
      "ContextUpgradeable": [
        5794
      ],
      "IERC165Upgradeable": [
        4695
      ],
      "IERC721Upgradeable": [
        5505
      ],
      "IRoyaltiesProvider": [
        970
      ],
      "Initializable": [
        5189
      ],
      "LibPart": [
        6152
      ],
      "LibRoyaltiesV1": [
        6158
      ],
      "LibRoyaltiesV2": [
        6164
      ],
      "OwnableUpgradeable": [
        4407
      ],
      "RoyaltiesV1": [
        6193
      ],
      "RoyaltiesV1Impl": [
        6532
      ],
      "RoyaltiesV2": [
        6213
      ],
      "RoyaltiesV2Impl": [
        6571
      ],
      "TestRoyaltiesProvider": [
        3374
      ]
    },
    "id": 3375,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 3345,
        "literals": [
          "solidity",
          ">=",
          "0.6",
          ".2",
          "<",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "33:31:22"
      },
      {
        "id": 3346,
        "literals": [
          "abicoder",
          "v2"
        ],
        "nodeType": "PragmaDirective",
        "src": "65:19:22"
      },
      {
        "absolutePath": "/home/quadro/Projects/tokenplace/interfaces/exchange-v2/contracts/exchange/v2/IRoyaltiesProvider.sol",
        "file": "./IRoyaltiesProvider.sol",
        "id": 3347,
        "nodeType": "ImportDirective",
        "scope": 3375,
        "sourceUnit": 971,
        "src": "86:34:22",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@rarible/royalties/contracts/LibRoyaltiesV2.sol",
        "file": "@rarible/royalties/contracts/LibRoyaltiesV2.sol",
        "id": 3348,
        "nodeType": "ImportDirective",
        "scope": 3375,
        "sourceUnit": 6165,
        "src": "121:57:22",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@rarible/royalties/contracts/LibRoyaltiesV1.sol",
        "file": "@rarible/royalties/contracts/LibRoyaltiesV1.sol",
        "id": 3349,
        "nodeType": "ImportDirective",
        "scope": 3375,
        "sourceUnit": 6159,
        "src": "179:57:22",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@rarible/royalties/contracts/impl/RoyaltiesV1Impl.sol",
        "file": "@rarible/royalties/contracts/impl/RoyaltiesV1Impl.sol",
        "id": 3350,
        "nodeType": "ImportDirective",
        "scope": 3375,
        "sourceUnit": 6533,
        "src": "237:63:22",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@rarible/royalties/contracts/impl/RoyaltiesV2Impl.sol",
        "file": "@rarible/royalties/contracts/impl/RoyaltiesV2Impl.sol",
        "id": 3351,
        "nodeType": "ImportDirective",
        "scope": 3375,
        "sourceUnit": 6572,
        "src": "301:63:22",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts-upgradeable/token/ERC721/IERC721Upgradeable.sol",
        "file": "@openzeppelin/contracts-upgradeable/token/ERC721/IERC721Upgradeable.sol",
        "id": 3352,
        "nodeType": "ImportDirective",
        "scope": 3375,
        "sourceUnit": 5506,
        "src": "365:81:22",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol",
        "file": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol",
        "id": 3353,
        "nodeType": "ImportDirective",
        "scope": 3375,
        "sourceUnit": 4408,
        "src": "447:75:22",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 3354,
              "name": "IRoyaltiesProvider",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 970,
              "src": "558:18:22",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IRoyaltiesProvider_$970",
                "typeString": "contract IRoyaltiesProvider"
              }
            },
            "id": 3355,
            "nodeType": "InheritanceSpecifier",
            "src": "558:18:22"
          }
        ],
        "contractDependencies": [
          970
        ],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 3374,
        "linearizedBaseContracts": [
          3374,
          970
        ],
        "name": "TestRoyaltiesProvider",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "baseFunctions": [
              969
            ],
            "body": {
              "id": 3372,
              "nodeType": "Block",
              "src": "682:36:22",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "30",
                        "id": 3369,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "712:1:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        }
                      ],
                      "id": 3368,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
                      "src": "693:18:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_struct$_Part_$6132_memory_ptr_$dyn_memory_ptr_$",
                        "typeString": "function (uint256) pure returns (struct LibPart.Part memory[] memory)"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 3366,
                          "name": "LibPart.Part",
                          "nodeType": "UserDefinedTypeName",
                          "referencedDeclaration": 6132,
                          "src": "697:12:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Part_$6132_storage_ptr",
                            "typeString": "struct LibPart.Part"
                          }
                        },
                        "id": 3367,
                        "nodeType": "ArrayTypeName",
                        "src": "697:14:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_Part_$6132_storage_$dyn_storage_ptr",
                          "typeString": "struct LibPart.Part[]"
                        }
                      }
                    },
                    "id": 3370,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "693:21:22",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_Part_$6132_memory_ptr_$dyn_memory_ptr",
                      "typeString": "struct LibPart.Part memory[] memory"
                    }
                  },
                  "functionReturnParameters": 3365,
                  "id": 3371,
                  "nodeType": "Return",
                  "src": "686:28:22"
                }
              ]
            },
            "functionSelector": "9ca7dc7a",
            "id": 3373,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getRoyalties",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 3361,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "632:8:22"
            },
            "parameters": {
              "id": 3360,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3357,
                  "mutability": "mutable",
                  "name": "token",
                  "nodeType": "VariableDeclaration",
                  "scope": 3373,
                  "src": "603:13:22",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3356,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "603:7:22",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3359,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nodeType": "VariableDeclaration",
                  "scope": 3373,
                  "src": "618:12:22",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3358,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "618:4:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "602:29:22"
            },
            "returnParameters": {
              "id": 3365,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3364,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 3373,
                  "src": "659:21:22",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_struct$_Part_$6132_memory_ptr_$dyn_memory_ptr",
                    "typeString": "struct LibPart.Part[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 3362,
                      "name": "LibPart.Part",
                      "nodeType": "UserDefinedTypeName",
                      "referencedDeclaration": 6132,
                      "src": "659:12:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Part_$6132_storage_ptr",
                        "typeString": "struct LibPart.Part"
                      }
                    },
                    "id": 3363,
                    "nodeType": "ArrayTypeName",
                    "src": "659:14:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_Part_$6132_storage_$dyn_storage_ptr",
                      "typeString": "struct LibPart.Part[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "658:23:22"
            },
            "scope": 3374,
            "src": "581:137:22",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 3375,
        "src": "524:196:22"
      }
    ],
    "src": "33:688:22"
  },
  "legacyAST": {
    "attributes": {
      "absolutePath": "/home/quadro/Projects/tokenplace/interfaces/exchange-v2/contracts/exchange/v2/TestRoyaltiesProvider.sol",
      "exportedSymbols": {
        "AbstractRoyalties": [
          6338
        ],
        "AddressUpgradeable": [
          5749
        ],
        "ContextUpgradeable": [
          5794
        ],
        "IERC165Upgradeable": [
          4695
        ],
        "IERC721Upgradeable": [
          5505
        ],
        "IRoyaltiesProvider": [
          970
        ],
        "Initializable": [
          5189
        ],
        "LibPart": [
          6152
        ],
        "LibRoyaltiesV1": [
          6158
        ],
        "LibRoyaltiesV2": [
          6164
        ],
        "OwnableUpgradeable": [
          4407
        ],
        "RoyaltiesV1": [
          6193
        ],
        "RoyaltiesV1Impl": [
          6532
        ],
        "RoyaltiesV2": [
          6213
        ],
        "RoyaltiesV2Impl": [
          6571
        ],
        "TestRoyaltiesProvider": [
          3374
        ]
      },
      "license": "MIT"
    },
    "children": [
      {
        "attributes": {
          "literals": [
            "solidity",
            ">=",
            "0.6",
            ".2",
            "<",
            "0.8",
            ".0"
          ]
        },
        "id": 3345,
        "name": "PragmaDirective",
        "src": "33:31:22"
      },
      {
        "attributes": {
          "literals": [
            "abicoder",
            "v2"
          ]
        },
        "id": 3346,
        "name": "PragmaDirective",
        "src": "65:19:22"
      },
      {
        "attributes": {
          "SourceUnit": 971,
          "absolutePath": "/home/quadro/Projects/tokenplace/interfaces/exchange-v2/contracts/exchange/v2/IRoyaltiesProvider.sol",
          "file": "./IRoyaltiesProvider.sol",
          "scope": 3375,
          "symbolAliases": [
            null
          ],
          "unitAlias": ""
        },
        "id": 3347,
        "name": "ImportDirective",
        "src": "86:34:22"
      },
      {
        "attributes": {
          "SourceUnit": 6165,
          "absolutePath": "@rarible/royalties/contracts/LibRoyaltiesV2.sol",
          "file": "@rarible/royalties/contracts/LibRoyaltiesV2.sol",
          "scope": 3375,
          "symbolAliases": [
            null
          ],
          "unitAlias": ""
        },
        "id": 3348,
        "name": "ImportDirective",
        "src": "121:57:22"
      },
      {
        "attributes": {
          "SourceUnit": 6159,
          "absolutePath": "@rarible/royalties/contracts/LibRoyaltiesV1.sol",
          "file": "@rarible/royalties/contracts/LibRoyaltiesV1.sol",
          "scope": 3375,
          "symbolAliases": [
            null
          ],
          "unitAlias": ""
        },
        "id": 3349,
        "name": "ImportDirective",
        "src": "179:57:22"
      },
      {
        "attributes": {
          "SourceUnit": 6533,
          "absolutePath": "@rarible/royalties/contracts/impl/RoyaltiesV1Impl.sol",
          "file": "@rarible/royalties/contracts/impl/RoyaltiesV1Impl.sol",
          "scope": 3375,
          "symbolAliases": [
            null
          ],
          "unitAlias": ""
        },
        "id": 3350,
        "name": "ImportDirective",
        "src": "237:63:22"
      },
      {
        "attributes": {
          "SourceUnit": 6572,
          "absolutePath": "@rarible/royalties/contracts/impl/RoyaltiesV2Impl.sol",
          "file": "@rarible/royalties/contracts/impl/RoyaltiesV2Impl.sol",
          "scope": 3375,
          "symbolAliases": [
            null
          ],
          "unitAlias": ""
        },
        "id": 3351,
        "name": "ImportDirective",
        "src": "301:63:22"
      },
      {
        "attributes": {
          "SourceUnit": 5506,
          "absolutePath": "@openzeppelin/contracts-upgradeable/token/ERC721/IERC721Upgradeable.sol",
          "file": "@openzeppelin/contracts-upgradeable/token/ERC721/IERC721Upgradeable.sol",
          "scope": 3375,
          "symbolAliases": [
            null
          ],
          "unitAlias": ""
        },
        "id": 3352,
        "name": "ImportDirective",
        "src": "365:81:22"
      },
      {
        "attributes": {
          "SourceUnit": 4408,
          "absolutePath": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol",
          "file": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol",
          "scope": 3375,
          "symbolAliases": [
            null
          ],
          "unitAlias": ""
        },
        "id": 3353,
        "name": "ImportDirective",
        "src": "447:75:22"
      },
      {
        "attributes": {
          "abstract": false,
          "contractDependencies": [
            970
          ],
          "contractKind": "contract",
          "fullyImplemented": true,
          "linearizedBaseContracts": [
            3374,
            970
          ],
          "name": "TestRoyaltiesProvider",
          "scope": 3375
        },
        "children": [
          {
            "attributes": {},
            "children": [
              {
                "attributes": {
                  "name": "IRoyaltiesProvider",
                  "referencedDeclaration": 970,
                  "type": "contract IRoyaltiesProvider"
                },
                "id": 3354,
                "name": "UserDefinedTypeName",
                "src": "558:18:22"
              }
            ],
            "id": 3355,
            "name": "InheritanceSpecifier",
            "src": "558:18:22"
          },
          {
            "attributes": {
              "baseFunctions": [
                969
              ],
              "functionSelector": "9ca7dc7a",
              "implemented": true,
              "isConstructor": false,
              "kind": "function",
              "modifiers": [
                null
              ],
              "name": "getRoyalties",
              "scope": 3374,
              "stateMutability": "nonpayable",
              "virtual": false,
              "visibility": "external"
            },
            "children": [
              {
                "attributes": {
                  "overrides": [
                    null
                  ]
                },
                "id": 3361,
                "name": "OverrideSpecifier",
                "src": "632:8:22"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "token",
                      "scope": 3373,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "address",
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "address",
                          "stateMutability": "nonpayable",
                          "type": "address"
                        },
                        "id": 3356,
                        "name": "ElementaryTypeName",
                        "src": "603:7:22"
                      }
                    ],
                    "id": 3357,
                    "name": "VariableDeclaration",
                    "src": "603:13:22"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "tokenId",
                      "scope": 3373,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "uint256",
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "uint",
                          "type": "uint256"
                        },
                        "id": 3358,
                        "name": "ElementaryTypeName",
                        "src": "618:4:22"
                      }
                    ],
                    "id": 3359,
                    "name": "VariableDeclaration",
                    "src": "618:12:22"
                  }
                ],
                "id": 3360,
                "name": "ParameterList",
                "src": "602:29:22"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "",
                      "scope": 3373,
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "type": "struct LibPart.Part[]",
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "type": "struct LibPart.Part[]"
                        },
                        "children": [
                          {
                            "attributes": {
                              "name": "LibPart.Part",
                              "referencedDeclaration": 6132,
                              "type": "struct LibPart.Part"
                            },
                            "id": 3362,
                            "name": "UserDefinedTypeName",
                            "src": "659:12:22"
                          }
                        ],
                        "id": 3363,
                        "name": "ArrayTypeName",
                        "src": "659:14:22"
                      }
                    ],
                    "id": 3364,
                    "name": "VariableDeclaration",
                    "src": "659:21:22"
                  }
                ],
                "id": 3365,
                "name": "ParameterList",
                "src": "658:23:22"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "functionReturnParameters": 3365
                    },
                    "children": [
                      {
                        "attributes": {
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "tryCall": false,
                          "type": "struct LibPart.Part memory[] memory",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                }
                              ],
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "type": "function (uint256) pure returns (struct LibPart.Part memory[] memory)"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "type": "struct LibPart.Part[]"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "name": "LibPart.Part",
                                      "referencedDeclaration": 6132,
                                      "type": "struct LibPart.Part"
                                    },
                                    "id": 3366,
                                    "name": "UserDefinedTypeName",
                                    "src": "697:12:22"
                                  }
                                ],
                                "id": 3367,
                                "name": "ArrayTypeName",
                                "src": "697:14:22"
                              }
                            ],
                            "id": 3368,
                            "name": "NewExpression",
                            "src": "693:18:22"
                          },
                          {
                            "attributes": {
                              "hexvalue": "30",
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "token": "number",
                              "type": "int_const 0",
                              "value": "0"
                            },
                            "id": 3369,
                            "name": "Literal",
                            "src": "712:1:22"
                          }
                        ],
                        "id": 3370,
                        "name": "FunctionCall",
                        "src": "693:21:22"
                      }
                    ],
                    "id": 3371,
                    "name": "Return",
                    "src": "686:28:22"
                  }
                ],
                "id": 3372,
                "name": "Block",
                "src": "682:36:22"
              }
            ],
            "id": 3373,
            "name": "FunctionDefinition",
            "src": "581:137:22"
          }
        ],
        "id": 3374,
        "name": "ContractDefinition",
        "src": "524:196:22"
      }
    ],
    "id": 3375,
    "name": "SourceUnit",
    "src": "33:688:22"
  },
  "compiler": {
    "name": "solc",
    "version": "0.7.6+commit.7338295f.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.3.4",
  "updatedAt": "2021-04-09T12:06:35.276Z",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  }
}