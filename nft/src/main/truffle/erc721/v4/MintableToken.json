{
  "contractName": "MintableToken",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "name",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "symbol",
          "type": "string"
        },
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        },
        {
          "internalType": "string",
          "name": "contractURI",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "tokenURIPrefix",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "approved",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "approved",
          "type": "bool"
        }
      ],
      "name": "ApprovalForAll",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "address[]",
          "name": "recipients",
          "type": "address[]"
        },
        {
          "indexed": false,
          "internalType": "uint256[]",
          "name": "bps",
          "type": "uint256[]"
        }
      ],
      "name": "SecondarySaleFees",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "burn",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "contractURI",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "fees",
      "outputs": [
        {
          "internalType": "address payable",
          "name": "recipient",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "getApproved",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        }
      ],
      "name": "getFeeBps",
      "outputs": [
        {
          "internalType": "uint256[]",
          "name": "",
          "type": "uint256[]"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        }
      ],
      "name": "getFeeRecipients",
      "outputs": [
        {
          "internalType": "address payable[]",
          "name": "",
          "type": "address[]"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        }
      ],
      "name": "isApprovedForAll",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "isOwner",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "ownerOf",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "_data",
          "type": "bytes"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "approved",
          "type": "bool"
        }
      ],
      "name": "setApprovalForAll",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "bytes4",
          "name": "interfaceId",
          "type": "bytes4"
        }
      ],
      "name": "supportsInterface",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        }
      ],
      "name": "tokenByIndex",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        }
      ],
      "name": "tokenOfOwnerByIndex",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "tokenURI",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "tokenURIPrefix",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "internalType": "uint8",
          "name": "v",
          "type": "uint8"
        },
        {
          "internalType": "bytes32",
          "name": "r",
          "type": "bytes32"
        },
        {
          "internalType": "bytes32",
          "name": "s",
          "type": "bytes32"
        },
        {
          "components": [
            {
              "internalType": "address payable",
              "name": "recipient",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "value",
              "type": "uint256"
            }
          ],
          "internalType": "struct ERC721Base.Fee[]",
          "name": "_fees",
          "type": "tuple[]"
        },
        {
          "internalType": "string",
          "name": "tokenURI",
          "type": "string"
        }
      ],
      "name": "mint",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "string",
          "name": "tokenURIPrefix",
          "type": "string"
        }
      ],
      "name": "setTokenURIPrefix",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "string",
          "name": "contractURI",
          "type": "string"
        }
      ],
      "name": "setContractURI",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.5.17+commit.d19bba13\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"contractURI\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"tokenURIPrefix\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address[]\",\"name\":\"recipients\",\"type\":\"address[]\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"bps\",\"type\":\"uint256[]\"}],\"name\":\"SecondarySaleFees\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"contractURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"fees\",\"outputs\":[{\"internalType\":\"address payable\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"getFeeBps\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"getFeeRecipients\",\"outputs\":[{\"internalType\":\"address payable[]\",\"name\":\"\",\"type\":\"address[]\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"isOwner\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"},{\"components\":[{\"internalType\":\"address payable\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"internalType\":\"struct ERC721Base.Fee[]\",\"name\":\"_fees\",\"type\":\"tuple[]\"},{\"internalType\":\"string\",\"name\":\"tokenURI\",\"type\":\"string\"}],\"name\":\"mint\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"string\",\"name\":\"contractURI\",\"type\":\"string\"}],\"name\":\"setContractURI\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"string\",\"name\":\"tokenURIPrefix\",\"type\":\"string\"}],\"name\":\"setTokenURIPrefix\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"tokenByIndex\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"tokenOfOwnerByIndex\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"tokenURIPrefix\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"anyone can mint token.\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Approves another address to transfer the given token ID The zero address indicates there is no approved address. There can only be one approved address per token at a given time. Can only be called by the token owner or an approved operator.\",\"params\":{\"to\":\"address to be approved for the given token ID\",\"tokenId\":\"uint256 ID of the token to be approved\"}},\"balanceOf(address)\":{\"details\":\"Gets the balance of the specified address.\",\"params\":{\"owner\":\"address to query the balance of\"},\"return\":\"uint256 representing the amount owned by the passed address\"},\"burn(uint256)\":{\"details\":\"Burns a specific ERC721 token.\",\"params\":{\"tokenId\":\"uint256 id of the ERC721 token to be burned.\"}},\"getApproved(uint256)\":{\"details\":\"Gets the approved address for a token ID, or zero if no address set Reverts if the token ID does not exist.\",\"params\":{\"tokenId\":\"uint256 ID of the token to query the approval of\"},\"return\":\"address currently approved for the given token ID\"},\"isApprovedForAll(address,address)\":{\"details\":\"Tells whether an operator is approved by a given owner.\",\"params\":{\"operator\":\"operator address which you want to query the approval of\",\"owner\":\"owner address which you want to query the approval of\"},\"return\":\"bool whether the given operator is approved by the given owner\"},\"isOwner()\":{\"details\":\"Returns true if the caller is the current owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"ownerOf(uint256)\":{\"details\":\"Gets the owner of the specified token ID.\",\"params\":{\"tokenId\":\"uint256 ID of the token to query the owner of\"},\"return\":\"address currently marked as the owner of the given token ID\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner.     * NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers the ownership of a given token ID to another address If the target address is a contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer, and return the magic value `bytes4(keccak256(\\\"onERC721Received(address,address,uint256,bytes)\\\"))`; otherwise, the transfer is reverted. Requires the msg.sender to be the owner, approved, or operator\",\"params\":{\"from\":\"current owner of the token\",\"to\":\"address to receive the ownership of the given token ID\",\"tokenId\":\"uint256 ID of the token to be transferred\"}},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers the ownership of a given token ID to another address If the target address is a contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer, and return the magic value `bytes4(keccak256(\\\"onERC721Received(address,address,uint256,bytes)\\\"))`; otherwise, the transfer is reverted. Requires the _msgSender() to be the owner, approved, or operator\",\"params\":{\"_data\":\"bytes data to send along with a safe transfer check\",\"from\":\"current owner of the token\",\"to\":\"address to receive the ownership of the given token ID\",\"tokenId\":\"uint256 ID of the token to be transferred\"}},\"setApprovalForAll(address,bool)\":{\"details\":\"Sets or unsets the approval of a given operator An operator is allowed to transfer all tokens of the sender on their behalf.\",\"params\":{\"approved\":\"representing the status of the approval to be set\",\"to\":\"operator address to set the approval\"}},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.     * Time complexity O(1), guaranteed to always use less than 30 000 gas.\"},\"tokenByIndex(uint256)\":{\"details\":\"Gets the token ID at a given index of all the tokens in this contract Reverts if the index is greater or equal to the total number of tokens.\",\"params\":{\"index\":\"uint256 representing the index to be accessed of the tokens list\"},\"return\":\"uint256 token ID at the given index of the tokens list\"},\"tokenOfOwnerByIndex(address,uint256)\":{\"details\":\"Gets the token ID at a given index of the tokens list of the requested owner.\",\"params\":{\"index\":\"uint256 representing the index to be accessed of the requested tokens list\",\"owner\":\"address owning the tokens list to be accessed\"},\"return\":\"uint256 token ID at the given index of the tokens list owned by the requested address\"},\"tokenURI(uint256)\":{\"details\":\"Returns an URI for a given token ID. Throws if the token ID does not exist. May return an empty string.\",\"params\":{\"tokenId\":\"uint256 ID of the token to query\"}},\"totalSupply()\":{\"details\":\"Gets the total amount of tokens stored by the contract.\",\"return\":\"uint256 representing the total amount of tokens\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers the ownership of a given token ID to another address. Usage of this method is discouraged, use {safeTransferFrom} whenever possible. Requires the msg.sender to be the owner, approved, or operator.\",\"params\":{\"from\":\"current owner of the token\",\"to\":\"address to receive the ownership of the given token ID\",\"tokenId\":\"uint256 ID of the token to be transferred\"}},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"title\":\"MintableToken\"},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"/home/quadro/Projects/tokenplace/tokenplace-contracts/contracts/MintableToken.sol\":\"MintableToken\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"/home/quadro/Projects/tokenplace/tokenplace-contracts/contracts/ERC721Base.sol\":{\"keccak256\":\"0x217c687f65745aff8a0c88149882efc0ddf0f1c4917c8ca1af643aa81a44c4e8\",\"urls\":[\"bzz-raw://63344ac212f1d4b0819c11d31d27c9e9fcb392adbad19d320c8808c6554db545\",\"dweb:/ipfs/QmbMZw3jy6CRehSQ7bwvwzyYdh7Js1awMj5Zwc2gYkNCoe\"]},\"/home/quadro/Projects/tokenplace/tokenplace-contracts/contracts/HasContractURI.sol\":{\"keccak256\":\"0xae5dcb17b411a300481597c52f4d57902c86f5bfa9d308f304c68d1e345b6b4e\",\"urls\":[\"bzz-raw://e5db4262640883444bf4a6e7be9b8a9b5fe1006f195fa58cecd1a612f7a12638\",\"dweb:/ipfs/QmSt3UB9k8TZB3fupabhWWPSUTNQ7De8gJAMsRco3XoBrd\"]},\"/home/quadro/Projects/tokenplace/tokenplace-contracts/contracts/HasSecondarySaleFees.sol\":{\"keccak256\":\"0x98b7cff5b500204e4f444757cfaef04ad57ae2a34bcd76b2440050453788d258\",\"urls\":[\"bzz-raw://61577cac44572ab104745aeb4782e2447dac53190442c93db5ac42f6324f0354\",\"dweb:/ipfs/QmcneGzoKG36H3ABJkHYnu2Soa8uxRDjaan8n74GGGM6ib\"]},\"/home/quadro/Projects/tokenplace/tokenplace-contracts/contracts/HasTokenURI.sol\":{\"keccak256\":\"0xdda6686926b4d61dcccb3757f9b59d361a6e2f49010efcdfc05c628e41a903ce\",\"urls\":[\"bzz-raw://ad43395d782d5ac58afafc865e83bd27c70e3ab2686b7893c4761ebe660cf3fc\",\"dweb:/ipfs/Qmc8KU48xpFAtTqfR6N43yJK5gbyFvHCvNCVCPjRb86u2F\"]},\"/home/quadro/Projects/tokenplace/tokenplace-contracts/contracts/MintableToken.sol\":{\"keccak256\":\"0xda797fce33f6f0f566cc1b12b08378bac0e02552a1d45e29c9d92bd8d3e7394b\",\"urls\":[\"bzz-raw://b2ef7eb9fcdc172ff57c76663d2a0c35c5e0bfd6942af496a14b6689460ba1e7\",\"dweb:/ipfs/QmaU3BC7JVfaxS7Ezzok15swp3vWvgHPrNepCyDvzb8Viu\"]},\"/home/quadro/Projects/tokenplace/tokenplace-contracts/contracts/utils/StringLibrary.sol\":{\"keccak256\":\"0x74d3bfc886a4ea9679554be7c92c113f654c6a8b8c56eb687640dc69f888a838\",\"urls\":[\"bzz-raw://24dff6e0c1f3aff5191abf7740e8ef5538ff4f6f65f93e116df0729b486f299e\",\"dweb:/ipfs/QmVNjDVZHWfhYutN3CUV6Bhjq4wXdTp3wzbwkuevv15D33\"]},\"/home/quadro/Projects/tokenplace/tokenplace-contracts/contracts/utils/UintLibrary.sol\":{\"keccak256\":\"0x01b909fb8c0f47721b4c271abee6eca3afb0fd5425cc7ffa47f015014bfa24fe\",\"urls\":[\"bzz-raw://8926ce74a8008379458ca11c9d1c335f8c297940dba95abcd9745e99476866c5\",\"dweb:/ipfs/QmVYtY1dxUMjfyfvxQYoa7mTq5NC3cbJHnwF4eVRzh9Qsj\"]},\"openzeppelin-solidity/contracts/GSN/Context.sol\":{\"keccak256\":\"0x90a3995645af7562d84b9d69363ffa5ae7217714ab61e951bf7bc450f40e4061\",\"urls\":[\"bzz-raw://216ef9d6b614db4eb46970b4e84903f2534a45572dd30a79f0041f1a5830f436\",\"dweb:/ipfs/QmNPrJ4MWKUAWzKXpUqeyKRUfosaoANZAqXgvepdrCwZAG\"]},\"openzeppelin-solidity/contracts/drafts/Counters.sol\":{\"keccak256\":\"0x5be8533c5950173dc2b77b75108fae6e6c5449aedadde3385ba457394aad2384\",\"urls\":[\"bzz-raw://d429fb04f5b31d909dc759d0f88e28055b80b4dd43e5def4dffc947fa0609229\",\"dweb:/ipfs/QmaY9idX5CwLLtjjTQAdiiaDSrncgafkatUZXTbbajpz8b\"]},\"openzeppelin-solidity/contracts/introspection/ERC165.sol\":{\"keccak256\":\"0x01aedbf24e121a744262e04c7815b2a4c8ce604dee4829c5cff00943a594ccf3\",\"urls\":[\"bzz-raw://999ab32a6498d8ad8db61d47c3774aae2ff919acceebe2aeb50879bef62642c3\",\"dweb:/ipfs/QmephAYF5hoymu9qCFK6mURM2kZJCxU4ntUb4KTf1miVPT\"]},\"openzeppelin-solidity/contracts/introspection/IERC165.sol\":{\"keccak256\":\"0xe0ed10f53955c35eecb02724538650a155aa940be3f0a54cd3bde6c6b0c6e48c\",\"urls\":[\"bzz-raw://7dcfda88e3225987245908c3296f3559752647036804325ebfaa9fd1545161c3\",\"dweb:/ipfs/QmXxx5rHfLL57zdgyyyG9MMv4XGN7bpVSc2MuDcaCgto6u\"]},\"openzeppelin-solidity/contracts/math/SafeMath.sol\":{\"keccak256\":\"0x640b6dee7a4b830bdfd52b5031a07fc2b12209f5b2e29e5d364a7d37f69d8076\",\"urls\":[\"bzz-raw://31113152e1ddb78fe7a4197f247591ca894e93f916867beb708d8e747b6cc74f\",\"dweb:/ipfs/QmbZaJyXdpsYGykVhHH9qpVGQg9DGCxE2QufbCUy3daTgq\"]},\"openzeppelin-solidity/contracts/ownership/Ownable.sol\":{\"keccak256\":\"0x6fb9d7889769d7cc161225f9ef7a90e468ba9788b253816f8d8b6894d3472c24\",\"urls\":[\"bzz-raw://cf4c00fc3c37cc5acf0c82ec6fd97bab67d72c2567fdc0ebf023d9c09b30a08e\",\"dweb:/ipfs/Qmb7TChG6DsEDX7LooJ4vmxot19f7VXX8S1zUGPeJTWbwZ\"]},\"openzeppelin-solidity/contracts/token/ERC721/ERC721.sol\":{\"keccak256\":\"0x1a1c02bc2487c763ad240f6b6440ec9dcb84870879aea3ed2a6b9cd300b637c7\",\"urls\":[\"bzz-raw://e6351696020fecf1c1b09437a2961cbdc3e1579238a9573b8577b58af463eeb6\",\"dweb:/ipfs/QmTg7UxUcuENko38JL2Pb2aqXkWgqW1xPDbJwmfo3RVrrV\"]},\"openzeppelin-solidity/contracts/token/ERC721/ERC721Burnable.sol\":{\"keccak256\":\"0xa9a5f3d09b6258e143a6f697b640b4d05e602ee4b6ea9b92e504c02f3e7d927a\",\"urls\":[\"bzz-raw://0055925bef49cb5ac496fdfb40dbd6d411e1c9ba7196542869ac90d9d6b979c6\",\"dweb:/ipfs/QmaYWc8vErzMW387m3xYAErqeBcanXTvSny8PTjgqiB8hj\"]},\"openzeppelin-solidity/contracts/token/ERC721/ERC721Enumerable.sol\":{\"keccak256\":\"0x28f4e41b86db783cd8daf9fdec839ce5930332b60f6dc9ac4992dfb584997e79\",\"urls\":[\"bzz-raw://6f1b545ec9e1f0284e86ddd4ffff353e1ab5e026bbbfaa2a5d2d791c39d7afd7\",\"dweb:/ipfs/Qmf9rVfj6LreiE7NHkkT1S7eLbSQDDY1gKd9XWERx2AN7W\"]},\"openzeppelin-solidity/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x680c11bc8173eef7d5db843baaf64ce499476de2c172f6aea631dbee54bcd2e6\",\"urls\":[\"bzz-raw://0f314963ab26fb65c6f364d57900f0f1aa8f6aeb4396e327e5e5c646815f060e\",\"dweb:/ipfs/Qmf6eSUtRUF4YDxGyhQq7TVDYzuHcYEvk9Us3RVy5iZQVH\"]},\"openzeppelin-solidity/contracts/token/ERC721/IERC721Enumerable.sol\":{\"keccak256\":\"0x5c573acd6c7b98d71f3c1c44d63dc17400b0fd7b26a52c9fded43b8b533dc4ec\",\"urls\":[\"bzz-raw://e23af54444d2dbfae58895339eb7b189e1ba5d0b7abde63716e7ef7da23b2fde\",\"dweb:/ipfs/QmZva7dE1SMd1yyizzc6ivSoBXXwpNveLV7iFNATNpq68Y\"]},\"openzeppelin-solidity/contracts/token/ERC721/IERC721Metadata.sol\":{\"keccak256\":\"0x2b2b99dc7fe8fcd1f9427d00822b99cbc683dc21f5dd7532bd7e2281fd2c2ca2\",\"urls\":[\"bzz-raw://a8024c00e34efaf328f9592e76823c79f25fa0f6006bdf4a1e7fea204afd4773\",\"dweb:/ipfs/QmZns9jTr7843njq3J2iL2LLoWXK5mdzN1bDGd9GL3ahhD\"]},\"openzeppelin-solidity/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0x042048c375daca04b31e31c91bbae912b84b5eb818c4e31b2deb530fd2305342\",\"urls\":[\"bzz-raw://d877a87c5e29b9ffca3e334378058c051a4e012fd3635039681003a9376baf1f\",\"dweb:/ipfs/QmR45snf93cFXtB71TZcmoGy9DbcMha8CqgkDKaLvhjXZK\"]},\"openzeppelin-solidity/contracts/utils/Address.sol\":{\"keccak256\":\"0x1a8e5072509c5ea7365eb1d48030b9be865140c8fb779968da0a459a0e174a11\",\"urls\":[\"bzz-raw://03335b7b07c7c8c8d613cfdd8ec39a0b5ec133ee510bf2fe6cc5a496767bef4b\",\"dweb:/ipfs/Qmebp4nzPja645c9yXSdJkGq96oU3am3LUnG2K3R7XxyKf\"]}},\"version\":1}",
  "bytecode": "0x60806040523480156200001157600080fd5b506040516200355f3803806200355f833981016040819052620000349162000431565b84848383808260006200004f6001600160e01b03620001d216565b600080546001600160a01b0319166001600160a01b0383169081178255604051929350916000805160206200353f833981519152908290a350620000a36301ffc9a760e01b6001600160e01b03620001d716565b620000be632dde656160e21b6001600160e01b03620001d716565b620000d96380ac58cd60e01b6001600160e01b03620001d716565b8051620000ee90600690602084019062000320565b506200010a63e8a3d48560e01b6001600160e01b03620001d716565b5080516200012090600790602084019062000320565b506200013e905063780e9d6360e01b6001600160e01b03620001d716565b83516200015390600d90602087019062000320565b5082516200016990600e90602086019062000320565b5062000185635b5e139f60e01b6001600160e01b03620001d716565b50505050620001b36040516200019b90620005ff565b6040519081900390206001600160e01b03620001d716565b620001c7836001600160e01b036200023516565b5050505050620006fb565b335b90565b6001600160e01b031980821614156200020d5760405162461bcd60e51b815260040162000204906200061e565b60405180910390fd5b6001600160e01b0319166000908152600160208190526040909120805460ff19169091179055565b620002486001600160e01b036200027e16565b620002675760405162461bcd60e51b8152600401620002049062000630565b6200027b816001600160e01b03620002ad16565b50565b600080546001600160a01b03166200029e6001600160e01b03620001d216565b6001600160a01b031614905090565b6001600160a01b038116620002d65760405162461bcd60e51b815260040162000204906200060c565b600080546040516001600160a01b03808516939216916000805160206200353f83398151915291a3600080546001600160a01b0319166001600160a01b0392909216919091179055565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f106200036357805160ff191683800117855562000393565b8280016001018555821562000393579182015b828111156200039357825182559160200191906001019062000376565b50620003a1929150620003a5565b5090565b620001d491905b80821115620003a15760008155600101620003ac565b8051620003cf81620006e4565b92915050565b600082601f830112620003e757600080fd5b8151620003fe620003f88262000669565b62000642565b915080825260208301602083018583830111156200041b57600080fd5b62000428838284620006b1565b50505092915050565b600080600080600060a086880312156200044a57600080fd5b85516001600160401b038111156200046157600080fd5b6200046f88828901620003d5565b95505060208601516001600160401b038111156200048c57600080fd5b6200049a88828901620003d5565b9450506040620004ad88828901620003c2565b93505060608601516001600160401b03811115620004ca57600080fd5b620004d888828901620003d5565b92505060808601516001600160401b03811115620004f557600080fd5b6200050388828901620003d5565b9150509295509295909350565b60006200051f60268362000691565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206181526564647265737360d01b602082015260400192915050565b600062000569601c8362000691565b7f4552433136353a20696e76616c696420696e7465726661636520696400000000815260200192915050565b6000620005a460208362000691565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572815260200192915050565b6000620005df6011836200069a565b704d494e545f574954485f4144445245535360781b815260110192915050565b6000620003cf82620005d0565b60208082528101620003cf8162000510565b60208082528101620003cf816200055a565b60208082528101620003cf8162000595565b6040518181016001600160401b03811182821017156200066157600080fd5b604052919050565b60006001600160401b038211156200068057600080fd5b506020601f91909101601f19160190565b90815260200190565b919050565b60006001600160a01b038216620003cf565b60005b83811015620006ce578181015183820152602001620006b4565b83811115620006de576000848401525b50505050565b620006ef816200069f565b81146200027b57600080fd5b612e34806200070b6000396000f3fe608060405234801561001057600080fd5b50600436106101cf5760003560e01c806370a0823111610104578063a22cb465116100a2578063c87b56dd11610071578063c87b56dd146103c9578063e8a3d485146103dc578063e985e9c5146103e4578063f2fde38b146103f7576101cf565b8063a22cb4651461037b578063b88d4fde1461038e578063b9c4d9fb146103a1578063c0ac9983146103c1576101cf565b80638f32d59b116100de5780638f32d59b14610345578063938e3d7b1461034d57806395d89b411461036057806399e0dd7c14610368576101cf565b806370a0823114610322578063715018a6146103355780638da5cb5b1461033d576101cf565b80632f745c59116101715780634f6ccce71161014b5780634f6ccce7146102c85780636308f1cd146102db5780636352211e146102fc578063672a94001461030f576101cf565b80632f745c591461028f57806342842e0e146102a257806342966c68146102b5576101cf565b8063095ea7b3116101ad578063095ea7b3146102325780630ebd4c7f1461024757806318160ddd1461026757806323b872dd1461027c576101cf565b806301ffc9a7146101d457806306fdde03146101fd578063081812fc14610212575b600080fd5b6101e76101e2366004611fda565b61040a565b6040516101f49190612a7f565b60405180910390f35b610205610429565b6040516101f49190612acb565b61022561022036600461204b565b6104b7565b6040516101f491906129f0565b610245610240366004611faa565b610503565b005b61025a61025536600461204b565b6105e8565b6040516101f49190612a6e565b61026f6106db565b6040516101f49190612c5c565b61024561028a366004611eb4565b6106e2565b61026f61029d366004611faa565b61071f565b6102456102b0366004611eb4565b610780565b6102456102c336600461204b565b61079b565b61026f6102d636600461204b565b6107ce565b6102ee6102e9366004612069565b610815565b6040516101f4929190612a42565b61022561030a36600461204b565b610858565b61024561031d366004612088565b61088d565b61026f610330366004611e5c565b610958565b6102456109a1565b610225610a0f565b6101e7610a1e565b61024561035b366004612016565b610a42565b610205610a6f565b610245610376366004612016565b610aca565b610245610389366004611f7a565b610af7565b61024561039c366004611f01565b610bc5565b6103b46103af36600461204b565b610c04565b6040516101f49190612a5d565b610205610cfc565b6102056103d736600461204b565b610d57565b610205610d87565b6101e76103f2366004611e7a565b610de2565b610245610405366004611e5c565b610e10565b6001600160e01b03191660009081526001602052604090205460ff1690565b600d805460408051602060026001851615610100026000190190941693909304601f810184900484028201840190925281815292918301828280156104af5780601f10610484576101008083540402835291602001916104af565b820191906000526020600020905b81548152906001019060200180831161049257829003601f168201915b505050505081565b60006104c282610e3d565b6104e75760405162461bcd60e51b81526004016104de90612bac565b60405180910390fd5b506000908152600360205260409020546001600160a01b031690565b600061050e82610858565b9050806001600160a01b0316836001600160a01b031614156105425760405162461bcd60e51b81526004016104de90612bfc565b806001600160a01b0316610554610e5a565b6001600160a01b031614806105705750610570816103f2610e5a565b61058c5760405162461bcd60e51b81526004016104de90612b6c565b60008281526003602052604080822080546001600160a01b0319166001600160a01b0387811691821790925591518593918516917f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591a4505050565b6000818152600f602090815260408083208054825181850281018501909352808352606094859484015b8282101561065a576000848152602090819020604080518082019091526002850290910180546001600160a01b03168252600190810154828401529083529092019101610612565b5050505090506060815160405190808252806020026020018201604052801561068d578160200160208202803883390190505b50905060005b82518110156106d3578281815181106106a857fe5b6020026020010151602001518282815181106106c057fe5b6020908102919091010152600101610693565b509392505050565b600b545b90565b6106f36106ed610e5a565b82610e5e565b61070f5760405162461bcd60e51b81526004016104de90612c0c565b61071a838383610ee3565b505050565b600061072a83610958565b82106107485760405162461bcd60e51b81526004016104de90612aec565b6001600160a01b038316600090815260096020526040902080548390811061076c57fe5b906000526020600020015490505b92915050565b61071a83838360405180602001604052806000815250610bc5565b6107a66106ed610e5a565b6107c25760405162461bcd60e51b81526004016104de90612c4c565b6107cb81610f02565b50565b60006107d86106db565b82106107f65760405162461bcd60e51b81526004016104de90612c1c565b600b828154811061080357fe5b90600052602060002001549050919050565b600f602052816000526040600020818154811061082e57fe5b6000918252602090912060029091020180546001909101546001600160a01b039091169250905082565b6000818152600260205260408120546001600160a01b03168061077a5760405162461bcd60e51b81526004016104de90612b8c565b600130876040516020016108a29291906129ca565b60405160208183030381529060405280519060200120868686604051600081526020016040526040516108d89493929190612a8d565b6020604051602081039080840390855afa1580156108fa573d6000803e3d6000fd5b505050602060405103516001600160a01b0316610915610a0f565b6001600160a01b03161461093b5760405162461bcd60e51b81526004016104de90612b5c565b610946338784610f14565b6109508682611139565b505050505050565b60006001600160a01b0382166109805760405162461bcd60e51b81526004016104de90612b7c565b6001600160a01b038216600090815260046020526040902061077a9061116c565b6109a9610a1e565b6109c55760405162461bcd60e51b81526004016104de90612bcc565b600080546040516001600160a01b03909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3600080546001600160a01b0319169055565b6000546001600160a01b031690565b600080546001600160a01b0316610a33610e5a565b6001600160a01b031614905090565b610a4a610a1e565b610a665760405162461bcd60e51b81526004016104de90612bcc565b6107cb81611170565b600e805460408051602060026001851615610100026000190190941693909304601f810184900484028201840190925281815292918301828280156104af5780601f10610484576101008083540402835291602001916104af565b610ad2610a1e565b610aee5760405162461bcd60e51b81526004016104de90612bcc565b6107cb81611183565b610aff610e5a565b6001600160a01b0316826001600160a01b03161415610b305760405162461bcd60e51b81526004016104de90612b3c565b8060056000610b3d610e5a565b6001600160a01b03908116825260208083019390935260409182016000908120918716808252919093529120805460ff191692151592909217909155610b81610e5a565b6001600160a01b03167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c3183604051610bb99190612a7f565b60405180910390a35050565b610bd6610bd0610e5a565b83610e5e565b610bf25760405162461bcd60e51b81526004016104de90612c0c565b610bfe84848484611196565b50505050565b6000818152600f602090815260408083208054825181850281018501909352808352606094859484015b82821015610c76576000848152602090819020604080518082019091526002850290910180546001600160a01b03168252600190810154828401529083529092019101610c2e565b50505050905060608151604051908082528060200260200182016040528015610ca9578160200160208202803883390190505b50905060005b82518110156106d357828181518110610cc457fe5b602002602001015160000151828281518110610cdc57fe5b6001600160a01b0390921660209283029190910190910152600101610caf565b6007805460408051602060026001851615610100026000190190941693909304601f810184900484028201840190925281815292918301828280156104af5780601f10610484576101008083540402835291602001916104af565b6060610d6282610e3d565b610d7e5760405162461bcd60e51b81526004016104de90612bec565b61077a826111c9565b6006805460408051602060026001851615610100026000190190941693909304601f810184900484028201840190925281815292918301828280156104af5780601f10610484576101008083540402835291602001916104af565b6001600160a01b03918216600090815260056020908152604080832093909416825291909152205460ff1690565b610e18610a1e565b610e345760405162461bcd60e51b81526004016104de90612bcc565b6107cb81611304565b6000908152600260205260409020546001600160a01b0316151590565b3390565b6000610e6982610e3d565b610e855760405162461bcd60e51b81526004016104de90612b4c565b6000610e9083610858565b9050806001600160a01b0316846001600160a01b03161480610ecb5750836001600160a01b0316610ec0846104b7565b6001600160a01b0316145b80610edb5750610edb8185610de2565b949350505050565b610eee838383611385565b610ef8838261148b565b61071a8282611579565b6107cb610f0e82610858565b826115b7565b610f1e83836115ca565b60608151604051908082528060200260200182016040528015610f4b578160200160208202803883390190505b50905060608251604051908082528060200260200182016040528015610f7b578160200160208202803883390190505b50905060005b83518110156110ee5760006001600160a01b0316848281518110610fa157fe5b6020026020010151600001516001600160a01b03161415610fd45760405162461bcd60e51b81526004016104de90612c3c565b838181518110610fe057fe5b6020026020010151602001516000141561100c5760405162461bcd60e51b81526004016104de90612adc565b6000858152600f60205260409020845185908390811061102857fe5b602090810291909101810151825460018082018555600094855293839020825160029092020180546001600160a01b0319166001600160a01b03909216919091178155910151910155835184908290811061107f57fe5b60200260200101516000015183828151811061109757fe5b60200260200101906001600160a01b031690816001600160a01b0316815250508381815181106110c357fe5b6020026020010151602001518282815181106110db57fe5b6020908102919091010152600101610f81565b50825115611132577f99aba1d63749cfd5ad1afda7c4663840924d54eb5f005bbbeadedc6ec13674b284838360405161112993929190612c6a565b60405180910390a15b5050505050565b61114282610e3d565b61115e5760405162461bcd60e51b81526004016104de90612bbc565b61116882826115e7565b5050565b5490565b8051611168906006906020840190611c07565b8051611168906007906020840190611c07565b6111a1848484610ee3565b6111ad84848484611606565b610bfe5760405162461bcd60e51b81526004016104de90612afc565b6000818152600860209081526040918290208054835160026001831615610100026000190190921691909104601f810184900484028201840190945283815260609361077a939192918301828280156112635780601f1061123857610100808354040283529160200191611263565b820191906000526020600020905b81548152906001019060200180831161124657829003601f168201915b505060078054604080516020601f60026000196101006001881615020190951694909404938401819004810282018101909252828152955091935091508301828280156112f15780601f106112c6576101008083540402835291602001916112f1565b820191906000526020600020905b8154815290600101906020018083116112d457829003601f168201915b505050505061174090919063ffffffff16565b6001600160a01b03811661132a5760405162461bcd60e51b81526004016104de90612b0c565b600080546040516001600160a01b03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a3600080546001600160a01b0319166001600160a01b0392909216919091179055565b826001600160a01b031661139882610858565b6001600160a01b0316146113be5760405162461bcd60e51b81526004016104de90612bdc565b6001600160a01b0382166113e45760405162461bcd60e51b81526004016104de90612b2c565b6113ed81611835565b6001600160a01b038316600090815260046020526040902061140e90611870565b6001600160a01b038216600090815260046020526040902061142f90611887565b60008181526002602052604080822080546001600160a01b0319166001600160a01b0386811691821790925591518493918716917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91a4505050565b6001600160a01b0382166000908152600960205260408120546114b590600163ffffffff61189016565b6000838152600a6020526040902054909150808214611550576001600160a01b03841660009081526009602052604081208054849081106114f257fe5b906000526020600020015490508060096000876001600160a01b03166001600160a01b03168152602001908152602001600020838154811061153057fe5b6000918252602080832090910192909255918252600a9052604090208190555b6001600160a01b0384166000908152600960205260409020805490611132906000198301611c85565b6001600160a01b0390911660009081526009602081815260408084208054868652600a84529185208290559282526001810183559183529091200155565b6115c182826118d9565b61116881611905565b6115d48282611943565b6115de8282611579565b61116881611a0a565b6000828152600860209081526040909120825161071a92840190611c07565b600061161a846001600160a01b0316611a4e565b61162657506001610edb565b600060606001600160a01b038616630a85bd0160e11b611644610e5a565b89888860405160240161165a94939291906129fe565b60408051601f198184030181529181526020820180516001600160e01b03166001600160e01b031990941693909317909252905161169891906129be565b6000604051808303816000865af19150503d80600081146116d5576040519150601f19603f3d011682016040523d82523d6000602084013e6116da565b606091505b50915091508161170c578051156116f45780518082602001fd5b60405162461bcd60e51b81526004016104de90612afc565b6000818060200190516117229190810190611ff8565b6001600160e01b031916630a85bd0160e11b149350610edb92505050565b6060808390506060839050606081518351016040519080825280601f01601f19166020018201604052801561177c576020820181803883390190505b5090506000805b84518110156117d45784818151811061179857fe5b602001015160f81c60f81b8383806001019450815181106117b557fe5b60200101906001600160f81b031916908160001a905350600101611783565b5060005b8351811015611829578381815181106117ed57fe5b602001015160f81c60f81b83838060010194508151811061180a57fe5b60200101906001600160f81b031916908160001a9053506001016117d8565b50909695505050505050565b6000818152600360205260409020546001600160a01b0316156107cb57600090815260036020526040902080546001600160a01b0319169055565b805461188390600163ffffffff61189016565b9055565b80546001019055565b60006118d283836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f770000815250611a87565b9392505050565b6118e38282611ab3565b6118ed828261148b565b6000818152600a602052604081205561116881611b6b565b60008181526008602052604090205460026000196101006001841615020190911604156107cb5760008181526008602052604081206107cb91611ca9565b6001600160a01b0382166119695760405162461bcd60e51b81526004016104de90612b9c565b61197281610e3d565b1561198f5760405162461bcd60e51b81526004016104de90612b1c565b600081815260026020908152604080832080546001600160a01b0319166001600160a01b0387169081179091558352600490915290206119ce90611887565b60405181906001600160a01b038416906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908290a45050565b600b80546000838152600c60205260408120829055600182018355919091527f0175b7a638427703f0dbe7bb9bbf987a2551717b34e79f33b5b1008d1fa01db90155565b6000813f7fc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470818114801590610edb575050151592915050565b60008184841115611aab5760405162461bcd60e51b81526004016104de9190612acb565b505050900390565b816001600160a01b0316611ac682610858565b6001600160a01b031614611aec5760405162461bcd60e51b81526004016104de90612c2c565b611af581611835565b6001600160a01b0382166000908152600460205260409020611b1690611870565b60008181526002602052604080822080546001600160a01b0319169055518291906001600160a01b038516907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908390a45050565b600b54600090611b8290600163ffffffff61189016565b6000838152600c6020526040812054600b8054939450909284908110611ba457fe5b9060005260206000200154905080600b8381548110611bbf57fe5b6000918252602080832090910192909255828152600c90915260409020829055600b805490611bf2906000198301611c85565b505050600091825250600c6020526040812055565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f10611c4857805160ff1916838001178555611c75565b82800160010185558215611c75579182015b82811115611c75578251825591602001919060010190611c5a565b50611c81929150611ce9565b5090565b81548183558181111561071a5760008381526020902061071a918101908301611ce9565b50805460018160011615610100020316600290046000825580601f10611ccf57506107cb565b601f0160209004906000526020600020908101906107cb91905b6106df91905b80821115611c815760008155600101611cef565b803561077a81612db9565b600082601f830112611d1f57600080fd5b8135611d32611d2d82612cc5565b612c9e565b91508181835260208401935060208101905083856040840282011115611d5757600080fd5b60005b83811015611d855781611d6d8882611e0a565b84525060209092019160409190910190600101611d5a565b5050505092915050565b803561077a81612dcd565b803561077a81612dd6565b803561077a81612ddf565b805161077a81612ddf565b600082601f830112611dcc57600080fd5b8135611dda611d2d82612ce6565b91508082526020830160208301858383011115611df657600080fd5b611e01838284612d60565b50505092915050565b600060408284031215611e1c57600080fd5b611e266040612c9e565b90506000611e348484611d03565b8252506020611e4584848301611d9a565b60208301525092915050565b803561077a81612de8565b600060208284031215611e6e57600080fd5b6000610edb8484611d03565b60008060408385031215611e8d57600080fd5b6000611e998585611d03565b9250506020611eaa85828601611d03565b9150509250929050565b600080600060608486031215611ec957600080fd5b6000611ed58686611d03565b9350506020611ee686828701611d03565b9250506040611ef786828701611d9a565b9150509250925092565b60008060008060808587031215611f1757600080fd5b6000611f238787611d03565b9450506020611f3487828801611d03565b9350506040611f4587828801611d9a565b925050606085013567ffffffffffffffff811115611f6257600080fd5b611f6e87828801611dbb565b91505092959194509250565b60008060408385031215611f8d57600080fd5b6000611f998585611d03565b9250506020611eaa85828601611d8f565b60008060408385031215611fbd57600080fd5b6000611fc98585611d03565b9250506020611eaa85828601611d9a565b600060208284031215611fec57600080fd5b6000610edb8484611da5565b60006020828403121561200a57600080fd5b6000610edb8484611db0565b60006020828403121561202857600080fd5b813567ffffffffffffffff81111561203f57600080fd5b610edb84828501611dbb565b60006020828403121561205d57600080fd5b6000610edb8484611d9a565b6000806040838503121561207c57600080fd5b6000611fc98585611d9a565b60008060008060008060c087890312156120a157600080fd5b60006120ad8989611d9a565b96505060206120be89828a01611e51565b95505060406120cf89828a01611d9a565b94505060606120e089828a01611d9a565b935050608087013567ffffffffffffffff8111156120fd57600080fd5b61210989828a01611d0e565b92505060a087013567ffffffffffffffff81111561212657600080fd5b61213289828a01611dbb565b9150509295509295509295565b600061214b838361215f565b505060200190565b600061214b838361226c565b61216881612d26565b82525050565b600061217982612d14565b6121838185612d18565b935061218e83612d0e565b8060005b838110156121bc5781516121a6888261213f565b97506121b183612d0e565b925050600101612192565b509495945050505050565b60006121d282612d14565b6121dc8185612d18565b93506121e783612d0e565b8060005b838110156121bc5781516121ff888261213f565b975061220a83612d0e565b9250506001016121eb565b600061222082612d14565b61222a8185612d18565b935061223583612d0e565b8060005b838110156121bc57815161224d8882612153565b975061225883612d0e565b925050600101612239565b61216881612d31565b612168816106df565b600061228082612d14565b61228a8185612d18565b935061229a818560208601612d6c565b6122a381612da9565b9093019392505050565b60006122b882612d14565b6122c28185612d21565b93506122d2818560208601612d6c565b9290920192915050565b6121686122e882612d55565b612d98565b60006122fa601c83612d18565b7f4665652076616c75652073686f756c6420626520706f73697469766500000000815260200192915050565b6000612333602b83612d18565b7f455243373231456e756d657261626c653a206f776e657220696e646578206f7581526a74206f6620626f756e647360a81b602082015260400192915050565b6000612380603283612d18565b7f4552433732313a207472616e7366657220746f206e6f6e20455243373231526581527131b2b4bb32b91034b6b83632b6b2b73a32b960711b602082015260400192915050565b60006123d4602683612d18565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206181526564647265737360d01b602082015260400192915050565b600061241c601c83612d18565b7f4552433732313a20746f6b656e20616c7265616479206d696e74656400000000815260200192915050565b6000612455602483612d18565b7f4552433732313a207472616e7366657220746f20746865207a65726f206164648152637265737360e01b602082015260400192915050565b600061249b601983612d18565b7f4552433732313a20617070726f766520746f2063616c6c657200000000000000815260200192915050565b60006124d4602c83612d18565b7f4552433732313a206f70657261746f7220717565727920666f72206e6f6e657881526b34b9ba32b73a103a37b5b2b760a11b602082015260400192915050565b6000612522601983612d18565b7f6f776e65722073686f756c64207369676e20746f6b656e496400000000000000815260200192915050565b600061255b603883612d18565b7f4552433732313a20617070726f76652063616c6c6572206973206e6f74206f7781527f6e6572206e6f7220617070726f76656420666f7220616c6c0000000000000000602082015260400192915050565b60006125ba602a83612d18565b7f4552433732313a2062616c616e636520717565727920666f7220746865207a65815269726f206164647265737360b01b602082015260400192915050565b6000612606602983612d18565b7f4552433732313a206f776e657220717565727920666f72206e6f6e657869737481526832b73a103a37b5b2b760b91b602082015260400192915050565b6000612651602083612d18565b7f4552433732313a206d696e7420746f20746865207a65726f2061646472657373815260200192915050565b600061268a602c83612d18565b7f4552433732313a20617070726f76656420717565727920666f72206e6f6e657881526b34b9ba32b73a103a37b5b2b760a11b602082015260400192915050565b60006126d8602c83612d18565b7f4552433732314d657461646174613a2055524920736574206f66206e6f6e657881526b34b9ba32b73a103a37b5b2b760a11b602082015260400192915050565b6000612726602083612d18565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572815260200192915050565b600061275f602983612d18565b7f4552433732313a207472616e73666572206f6620746f6b656e2074686174206981526839903737ba1037bbb760b91b602082015260400192915050565b60006127aa602f83612d18565b7f4552433732314d657461646174613a2055524920717565727920666f72206e6f81526e3732bc34b9ba32b73a103a37b5b2b760891b602082015260400192915050565b60006127fb602183612d18565b7f4552433732313a20617070726f76616c20746f2063757272656e74206f776e658152603960f91b602082015260400192915050565b600061283e603183612d18565b7f4552433732313a207472616e736665722063616c6c6572206973206e6f74206f8152701ddb995c881b9bdc88185c1c1c9bdd9959607a1b602082015260400192915050565b6000612891602c83612d18565b7f455243373231456e756d657261626c653a20676c6f62616c20696e646578206f81526b7574206f6620626f756e647360a01b602082015260400192915050565b60006128df602583612d18565b7f4552433732313a206275726e206f6620746f6b656e2074686174206973206e6f8152643a1037bbb760d91b602082015260400192915050565b6000612926601b83612d18565b7f526563697069656e742073686f756c642062652070726573656e740000000000815260200192915050565b600061295f603083612d18565b7f4552433732314275726e61626c653a2063616c6c6572206973206e6f74206f7781526f1b995c881b9bdc88185c1c1c9bdd995960821b602082015260400192915050565b6121686129b0826106df565b6106df565b61216881612d4f565b60006118d282846122ad565b60006129d682856122dc565b6014820191506129e682846129a4565b5060200192915050565b6020810161077a828461215f565b60808101612a0c828761215f565b612a19602083018661215f565b612a26604083018561226c565b8181036060830152612a388184612275565b9695505050505050565b60408101612a50828561215f565b6118d2602083018461226c565b602080825281016118d281846121c7565b602080825281016118d28184612215565b6020810161077a8284612263565b60808101612a9b828761226c565b612aa860208301866129b5565b612ab5604083018561226c565b612ac2606083018461226c565b95945050505050565b602080825281016118d28184612275565b6020808252810161077a816122ed565b6020808252810161077a81612326565b6020808252810161077a81612373565b6020808252810161077a816123c7565b6020808252810161077a8161240f565b6020808252810161077a81612448565b6020808252810161077a8161248e565b6020808252810161077a816124c7565b6020808252810161077a81612515565b6020808252810161077a8161254e565b6020808252810161077a816125ad565b6020808252810161077a816125f9565b6020808252810161077a81612644565b6020808252810161077a8161267d565b6020808252810161077a816126cb565b6020808252810161077a81612719565b6020808252810161077a81612752565b6020808252810161077a8161279d565b6020808252810161077a816127ee565b6020808252810161077a81612831565b6020808252810161077a81612884565b6020808252810161077a816128d2565b6020808252810161077a81612919565b6020808252810161077a81612952565b6020810161077a828461226c565b60608101612c78828661226c565b8181036020830152612c8a818561216e565b90508181036040830152612ac28184612215565b60405181810167ffffffffffffffff81118282101715612cbd57600080fd5b604052919050565b600067ffffffffffffffff821115612cdc57600080fd5b5060209081020190565b600067ffffffffffffffff821115612cfd57600080fd5b506020601f91909101601f19160190565b60200190565b5190565b90815260200190565b919050565b600061077a82612d43565b151590565b6001600160e01b03191690565b6001600160a01b031690565b60ff1690565b600061077a82612d26565b82818337506000910152565b60005b83811015612d87578181015183820152602001612d6f565b83811115610bfe5750506000910152565b600061077a82600061077a82612db3565b601f01601f191690565b60601b90565b612dc281612d26565b81146107cb57600080fd5b612dc281612d31565b612dc2816106df565b612dc281612d36565b612dc281612d4f56fea365627a7a72315820201c77075700435b8055570069128b2f78068fa97620d263c3a15d9d6a5370796c6578706572696d656e74616cf564736f6c634300051100408be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106101cf5760003560e01c806370a0823111610104578063a22cb465116100a2578063c87b56dd11610071578063c87b56dd146103c9578063e8a3d485146103dc578063e985e9c5146103e4578063f2fde38b146103f7576101cf565b8063a22cb4651461037b578063b88d4fde1461038e578063b9c4d9fb146103a1578063c0ac9983146103c1576101cf565b80638f32d59b116100de5780638f32d59b14610345578063938e3d7b1461034d57806395d89b411461036057806399e0dd7c14610368576101cf565b806370a0823114610322578063715018a6146103355780638da5cb5b1461033d576101cf565b80632f745c59116101715780634f6ccce71161014b5780634f6ccce7146102c85780636308f1cd146102db5780636352211e146102fc578063672a94001461030f576101cf565b80632f745c591461028f57806342842e0e146102a257806342966c68146102b5576101cf565b8063095ea7b3116101ad578063095ea7b3146102325780630ebd4c7f1461024757806318160ddd1461026757806323b872dd1461027c576101cf565b806301ffc9a7146101d457806306fdde03146101fd578063081812fc14610212575b600080fd5b6101e76101e2366004611fda565b61040a565b6040516101f49190612a7f565b60405180910390f35b610205610429565b6040516101f49190612acb565b61022561022036600461204b565b6104b7565b6040516101f491906129f0565b610245610240366004611faa565b610503565b005b61025a61025536600461204b565b6105e8565b6040516101f49190612a6e565b61026f6106db565b6040516101f49190612c5c565b61024561028a366004611eb4565b6106e2565b61026f61029d366004611faa565b61071f565b6102456102b0366004611eb4565b610780565b6102456102c336600461204b565b61079b565b61026f6102d636600461204b565b6107ce565b6102ee6102e9366004612069565b610815565b6040516101f4929190612a42565b61022561030a36600461204b565b610858565b61024561031d366004612088565b61088d565b61026f610330366004611e5c565b610958565b6102456109a1565b610225610a0f565b6101e7610a1e565b61024561035b366004612016565b610a42565b610205610a6f565b610245610376366004612016565b610aca565b610245610389366004611f7a565b610af7565b61024561039c366004611f01565b610bc5565b6103b46103af36600461204b565b610c04565b6040516101f49190612a5d565b610205610cfc565b6102056103d736600461204b565b610d57565b610205610d87565b6101e76103f2366004611e7a565b610de2565b610245610405366004611e5c565b610e10565b6001600160e01b03191660009081526001602052604090205460ff1690565b600d805460408051602060026001851615610100026000190190941693909304601f810184900484028201840190925281815292918301828280156104af5780601f10610484576101008083540402835291602001916104af565b820191906000526020600020905b81548152906001019060200180831161049257829003601f168201915b505050505081565b60006104c282610e3d565b6104e75760405162461bcd60e51b81526004016104de90612bac565b60405180910390fd5b506000908152600360205260409020546001600160a01b031690565b600061050e82610858565b9050806001600160a01b0316836001600160a01b031614156105425760405162461bcd60e51b81526004016104de90612bfc565b806001600160a01b0316610554610e5a565b6001600160a01b031614806105705750610570816103f2610e5a565b61058c5760405162461bcd60e51b81526004016104de90612b6c565b60008281526003602052604080822080546001600160a01b0319166001600160a01b0387811691821790925591518593918516917f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591a4505050565b6000818152600f602090815260408083208054825181850281018501909352808352606094859484015b8282101561065a576000848152602090819020604080518082019091526002850290910180546001600160a01b03168252600190810154828401529083529092019101610612565b5050505090506060815160405190808252806020026020018201604052801561068d578160200160208202803883390190505b50905060005b82518110156106d3578281815181106106a857fe5b6020026020010151602001518282815181106106c057fe5b6020908102919091010152600101610693565b509392505050565b600b545b90565b6106f36106ed610e5a565b82610e5e565b61070f5760405162461bcd60e51b81526004016104de90612c0c565b61071a838383610ee3565b505050565b600061072a83610958565b82106107485760405162461bcd60e51b81526004016104de90612aec565b6001600160a01b038316600090815260096020526040902080548390811061076c57fe5b906000526020600020015490505b92915050565b61071a83838360405180602001604052806000815250610bc5565b6107a66106ed610e5a565b6107c25760405162461bcd60e51b81526004016104de90612c4c565b6107cb81610f02565b50565b60006107d86106db565b82106107f65760405162461bcd60e51b81526004016104de90612c1c565b600b828154811061080357fe5b90600052602060002001549050919050565b600f602052816000526040600020818154811061082e57fe5b6000918252602090912060029091020180546001909101546001600160a01b039091169250905082565b6000818152600260205260408120546001600160a01b03168061077a5760405162461bcd60e51b81526004016104de90612b8c565b600130876040516020016108a29291906129ca565b60405160208183030381529060405280519060200120868686604051600081526020016040526040516108d89493929190612a8d565b6020604051602081039080840390855afa1580156108fa573d6000803e3d6000fd5b505050602060405103516001600160a01b0316610915610a0f565b6001600160a01b03161461093b5760405162461bcd60e51b81526004016104de90612b5c565b610946338784610f14565b6109508682611139565b505050505050565b60006001600160a01b0382166109805760405162461bcd60e51b81526004016104de90612b7c565b6001600160a01b038216600090815260046020526040902061077a9061116c565b6109a9610a1e565b6109c55760405162461bcd60e51b81526004016104de90612bcc565b600080546040516001600160a01b03909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3600080546001600160a01b0319169055565b6000546001600160a01b031690565b600080546001600160a01b0316610a33610e5a565b6001600160a01b031614905090565b610a4a610a1e565b610a665760405162461bcd60e51b81526004016104de90612bcc565b6107cb81611170565b600e805460408051602060026001851615610100026000190190941693909304601f810184900484028201840190925281815292918301828280156104af5780601f10610484576101008083540402835291602001916104af565b610ad2610a1e565b610aee5760405162461bcd60e51b81526004016104de90612bcc565b6107cb81611183565b610aff610e5a565b6001600160a01b0316826001600160a01b03161415610b305760405162461bcd60e51b81526004016104de90612b3c565b8060056000610b3d610e5a565b6001600160a01b03908116825260208083019390935260409182016000908120918716808252919093529120805460ff191692151592909217909155610b81610e5a565b6001600160a01b03167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c3183604051610bb99190612a7f565b60405180910390a35050565b610bd6610bd0610e5a565b83610e5e565b610bf25760405162461bcd60e51b81526004016104de90612c0c565b610bfe84848484611196565b50505050565b6000818152600f602090815260408083208054825181850281018501909352808352606094859484015b82821015610c76576000848152602090819020604080518082019091526002850290910180546001600160a01b03168252600190810154828401529083529092019101610c2e565b50505050905060608151604051908082528060200260200182016040528015610ca9578160200160208202803883390190505b50905060005b82518110156106d357828181518110610cc457fe5b602002602001015160000151828281518110610cdc57fe5b6001600160a01b0390921660209283029190910190910152600101610caf565b6007805460408051602060026001851615610100026000190190941693909304601f810184900484028201840190925281815292918301828280156104af5780601f10610484576101008083540402835291602001916104af565b6060610d6282610e3d565b610d7e5760405162461bcd60e51b81526004016104de90612bec565b61077a826111c9565b6006805460408051602060026001851615610100026000190190941693909304601f810184900484028201840190925281815292918301828280156104af5780601f10610484576101008083540402835291602001916104af565b6001600160a01b03918216600090815260056020908152604080832093909416825291909152205460ff1690565b610e18610a1e565b610e345760405162461bcd60e51b81526004016104de90612bcc565b6107cb81611304565b6000908152600260205260409020546001600160a01b0316151590565b3390565b6000610e6982610e3d565b610e855760405162461bcd60e51b81526004016104de90612b4c565b6000610e9083610858565b9050806001600160a01b0316846001600160a01b03161480610ecb5750836001600160a01b0316610ec0846104b7565b6001600160a01b0316145b80610edb5750610edb8185610de2565b949350505050565b610eee838383611385565b610ef8838261148b565b61071a8282611579565b6107cb610f0e82610858565b826115b7565b610f1e83836115ca565b60608151604051908082528060200260200182016040528015610f4b578160200160208202803883390190505b50905060608251604051908082528060200260200182016040528015610f7b578160200160208202803883390190505b50905060005b83518110156110ee5760006001600160a01b0316848281518110610fa157fe5b6020026020010151600001516001600160a01b03161415610fd45760405162461bcd60e51b81526004016104de90612c3c565b838181518110610fe057fe5b6020026020010151602001516000141561100c5760405162461bcd60e51b81526004016104de90612adc565b6000858152600f60205260409020845185908390811061102857fe5b602090810291909101810151825460018082018555600094855293839020825160029092020180546001600160a01b0319166001600160a01b03909216919091178155910151910155835184908290811061107f57fe5b60200260200101516000015183828151811061109757fe5b60200260200101906001600160a01b031690816001600160a01b0316815250508381815181106110c357fe5b6020026020010151602001518282815181106110db57fe5b6020908102919091010152600101610f81565b50825115611132577f99aba1d63749cfd5ad1afda7c4663840924d54eb5f005bbbeadedc6ec13674b284838360405161112993929190612c6a565b60405180910390a15b5050505050565b61114282610e3d565b61115e5760405162461bcd60e51b81526004016104de90612bbc565b61116882826115e7565b5050565b5490565b8051611168906006906020840190611c07565b8051611168906007906020840190611c07565b6111a1848484610ee3565b6111ad84848484611606565b610bfe5760405162461bcd60e51b81526004016104de90612afc565b6000818152600860209081526040918290208054835160026001831615610100026000190190921691909104601f810184900484028201840190945283815260609361077a939192918301828280156112635780601f1061123857610100808354040283529160200191611263565b820191906000526020600020905b81548152906001019060200180831161124657829003601f168201915b505060078054604080516020601f60026000196101006001881615020190951694909404938401819004810282018101909252828152955091935091508301828280156112f15780601f106112c6576101008083540402835291602001916112f1565b820191906000526020600020905b8154815290600101906020018083116112d457829003601f168201915b505050505061174090919063ffffffff16565b6001600160a01b03811661132a5760405162461bcd60e51b81526004016104de90612b0c565b600080546040516001600160a01b03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a3600080546001600160a01b0319166001600160a01b0392909216919091179055565b826001600160a01b031661139882610858565b6001600160a01b0316146113be5760405162461bcd60e51b81526004016104de90612bdc565b6001600160a01b0382166113e45760405162461bcd60e51b81526004016104de90612b2c565b6113ed81611835565b6001600160a01b038316600090815260046020526040902061140e90611870565b6001600160a01b038216600090815260046020526040902061142f90611887565b60008181526002602052604080822080546001600160a01b0319166001600160a01b0386811691821790925591518493918716917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91a4505050565b6001600160a01b0382166000908152600960205260408120546114b590600163ffffffff61189016565b6000838152600a6020526040902054909150808214611550576001600160a01b03841660009081526009602052604081208054849081106114f257fe5b906000526020600020015490508060096000876001600160a01b03166001600160a01b03168152602001908152602001600020838154811061153057fe5b6000918252602080832090910192909255918252600a9052604090208190555b6001600160a01b0384166000908152600960205260409020805490611132906000198301611c85565b6001600160a01b0390911660009081526009602081815260408084208054868652600a84529185208290559282526001810183559183529091200155565b6115c182826118d9565b61116881611905565b6115d48282611943565b6115de8282611579565b61116881611a0a565b6000828152600860209081526040909120825161071a92840190611c07565b600061161a846001600160a01b0316611a4e565b61162657506001610edb565b600060606001600160a01b038616630a85bd0160e11b611644610e5a565b89888860405160240161165a94939291906129fe565b60408051601f198184030181529181526020820180516001600160e01b03166001600160e01b031990941693909317909252905161169891906129be565b6000604051808303816000865af19150503d80600081146116d5576040519150601f19603f3d011682016040523d82523d6000602084013e6116da565b606091505b50915091508161170c578051156116f45780518082602001fd5b60405162461bcd60e51b81526004016104de90612afc565b6000818060200190516117229190810190611ff8565b6001600160e01b031916630a85bd0160e11b149350610edb92505050565b6060808390506060839050606081518351016040519080825280601f01601f19166020018201604052801561177c576020820181803883390190505b5090506000805b84518110156117d45784818151811061179857fe5b602001015160f81c60f81b8383806001019450815181106117b557fe5b60200101906001600160f81b031916908160001a905350600101611783565b5060005b8351811015611829578381815181106117ed57fe5b602001015160f81c60f81b83838060010194508151811061180a57fe5b60200101906001600160f81b031916908160001a9053506001016117d8565b50909695505050505050565b6000818152600360205260409020546001600160a01b0316156107cb57600090815260036020526040902080546001600160a01b0319169055565b805461188390600163ffffffff61189016565b9055565b80546001019055565b60006118d283836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f770000815250611a87565b9392505050565b6118e38282611ab3565b6118ed828261148b565b6000818152600a602052604081205561116881611b6b565b60008181526008602052604090205460026000196101006001841615020190911604156107cb5760008181526008602052604081206107cb91611ca9565b6001600160a01b0382166119695760405162461bcd60e51b81526004016104de90612b9c565b61197281610e3d565b1561198f5760405162461bcd60e51b81526004016104de90612b1c565b600081815260026020908152604080832080546001600160a01b0319166001600160a01b0387169081179091558352600490915290206119ce90611887565b60405181906001600160a01b038416906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908290a45050565b600b80546000838152600c60205260408120829055600182018355919091527f0175b7a638427703f0dbe7bb9bbf987a2551717b34e79f33b5b1008d1fa01db90155565b6000813f7fc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470818114801590610edb575050151592915050565b60008184841115611aab5760405162461bcd60e51b81526004016104de9190612acb565b505050900390565b816001600160a01b0316611ac682610858565b6001600160a01b031614611aec5760405162461bcd60e51b81526004016104de90612c2c565b611af581611835565b6001600160a01b0382166000908152600460205260409020611b1690611870565b60008181526002602052604080822080546001600160a01b0319169055518291906001600160a01b038516907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908390a45050565b600b54600090611b8290600163ffffffff61189016565b6000838152600c6020526040812054600b8054939450909284908110611ba457fe5b9060005260206000200154905080600b8381548110611bbf57fe5b6000918252602080832090910192909255828152600c90915260409020829055600b805490611bf2906000198301611c85565b505050600091825250600c6020526040812055565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f10611c4857805160ff1916838001178555611c75565b82800160010185558215611c75579182015b82811115611c75578251825591602001919060010190611c5a565b50611c81929150611ce9565b5090565b81548183558181111561071a5760008381526020902061071a918101908301611ce9565b50805460018160011615610100020316600290046000825580601f10611ccf57506107cb565b601f0160209004906000526020600020908101906107cb91905b6106df91905b80821115611c815760008155600101611cef565b803561077a81612db9565b600082601f830112611d1f57600080fd5b8135611d32611d2d82612cc5565b612c9e565b91508181835260208401935060208101905083856040840282011115611d5757600080fd5b60005b83811015611d855781611d6d8882611e0a565b84525060209092019160409190910190600101611d5a565b5050505092915050565b803561077a81612dcd565b803561077a81612dd6565b803561077a81612ddf565b805161077a81612ddf565b600082601f830112611dcc57600080fd5b8135611dda611d2d82612ce6565b91508082526020830160208301858383011115611df657600080fd5b611e01838284612d60565b50505092915050565b600060408284031215611e1c57600080fd5b611e266040612c9e565b90506000611e348484611d03565b8252506020611e4584848301611d9a565b60208301525092915050565b803561077a81612de8565b600060208284031215611e6e57600080fd5b6000610edb8484611d03565b60008060408385031215611e8d57600080fd5b6000611e998585611d03565b9250506020611eaa85828601611d03565b9150509250929050565b600080600060608486031215611ec957600080fd5b6000611ed58686611d03565b9350506020611ee686828701611d03565b9250506040611ef786828701611d9a565b9150509250925092565b60008060008060808587031215611f1757600080fd5b6000611f238787611d03565b9450506020611f3487828801611d03565b9350506040611f4587828801611d9a565b925050606085013567ffffffffffffffff811115611f6257600080fd5b611f6e87828801611dbb565b91505092959194509250565b60008060408385031215611f8d57600080fd5b6000611f998585611d03565b9250506020611eaa85828601611d8f565b60008060408385031215611fbd57600080fd5b6000611fc98585611d03565b9250506020611eaa85828601611d9a565b600060208284031215611fec57600080fd5b6000610edb8484611da5565b60006020828403121561200a57600080fd5b6000610edb8484611db0565b60006020828403121561202857600080fd5b813567ffffffffffffffff81111561203f57600080fd5b610edb84828501611dbb565b60006020828403121561205d57600080fd5b6000610edb8484611d9a565b6000806040838503121561207c57600080fd5b6000611fc98585611d9a565b60008060008060008060c087890312156120a157600080fd5b60006120ad8989611d9a565b96505060206120be89828a01611e51565b95505060406120cf89828a01611d9a565b94505060606120e089828a01611d9a565b935050608087013567ffffffffffffffff8111156120fd57600080fd5b61210989828a01611d0e565b92505060a087013567ffffffffffffffff81111561212657600080fd5b61213289828a01611dbb565b9150509295509295509295565b600061214b838361215f565b505060200190565b600061214b838361226c565b61216881612d26565b82525050565b600061217982612d14565b6121838185612d18565b935061218e83612d0e565b8060005b838110156121bc5781516121a6888261213f565b97506121b183612d0e565b925050600101612192565b509495945050505050565b60006121d282612d14565b6121dc8185612d18565b93506121e783612d0e565b8060005b838110156121bc5781516121ff888261213f565b975061220a83612d0e565b9250506001016121eb565b600061222082612d14565b61222a8185612d18565b935061223583612d0e565b8060005b838110156121bc57815161224d8882612153565b975061225883612d0e565b925050600101612239565b61216881612d31565b612168816106df565b600061228082612d14565b61228a8185612d18565b935061229a818560208601612d6c565b6122a381612da9565b9093019392505050565b60006122b882612d14565b6122c28185612d21565b93506122d2818560208601612d6c565b9290920192915050565b6121686122e882612d55565b612d98565b60006122fa601c83612d18565b7f4665652076616c75652073686f756c6420626520706f73697469766500000000815260200192915050565b6000612333602b83612d18565b7f455243373231456e756d657261626c653a206f776e657220696e646578206f7581526a74206f6620626f756e647360a81b602082015260400192915050565b6000612380603283612d18565b7f4552433732313a207472616e7366657220746f206e6f6e20455243373231526581527131b2b4bb32b91034b6b83632b6b2b73a32b960711b602082015260400192915050565b60006123d4602683612d18565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206181526564647265737360d01b602082015260400192915050565b600061241c601c83612d18565b7f4552433732313a20746f6b656e20616c7265616479206d696e74656400000000815260200192915050565b6000612455602483612d18565b7f4552433732313a207472616e7366657220746f20746865207a65726f206164648152637265737360e01b602082015260400192915050565b600061249b601983612d18565b7f4552433732313a20617070726f766520746f2063616c6c657200000000000000815260200192915050565b60006124d4602c83612d18565b7f4552433732313a206f70657261746f7220717565727920666f72206e6f6e657881526b34b9ba32b73a103a37b5b2b760a11b602082015260400192915050565b6000612522601983612d18565b7f6f776e65722073686f756c64207369676e20746f6b656e496400000000000000815260200192915050565b600061255b603883612d18565b7f4552433732313a20617070726f76652063616c6c6572206973206e6f74206f7781527f6e6572206e6f7220617070726f76656420666f7220616c6c0000000000000000602082015260400192915050565b60006125ba602a83612d18565b7f4552433732313a2062616c616e636520717565727920666f7220746865207a65815269726f206164647265737360b01b602082015260400192915050565b6000612606602983612d18565b7f4552433732313a206f776e657220717565727920666f72206e6f6e657869737481526832b73a103a37b5b2b760b91b602082015260400192915050565b6000612651602083612d18565b7f4552433732313a206d696e7420746f20746865207a65726f2061646472657373815260200192915050565b600061268a602c83612d18565b7f4552433732313a20617070726f76656420717565727920666f72206e6f6e657881526b34b9ba32b73a103a37b5b2b760a11b602082015260400192915050565b60006126d8602c83612d18565b7f4552433732314d657461646174613a2055524920736574206f66206e6f6e657881526b34b9ba32b73a103a37b5b2b760a11b602082015260400192915050565b6000612726602083612d18565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572815260200192915050565b600061275f602983612d18565b7f4552433732313a207472616e73666572206f6620746f6b656e2074686174206981526839903737ba1037bbb760b91b602082015260400192915050565b60006127aa602f83612d18565b7f4552433732314d657461646174613a2055524920717565727920666f72206e6f81526e3732bc34b9ba32b73a103a37b5b2b760891b602082015260400192915050565b60006127fb602183612d18565b7f4552433732313a20617070726f76616c20746f2063757272656e74206f776e658152603960f91b602082015260400192915050565b600061283e603183612d18565b7f4552433732313a207472616e736665722063616c6c6572206973206e6f74206f8152701ddb995c881b9bdc88185c1c1c9bdd9959607a1b602082015260400192915050565b6000612891602c83612d18565b7f455243373231456e756d657261626c653a20676c6f62616c20696e646578206f81526b7574206f6620626f756e647360a01b602082015260400192915050565b60006128df602583612d18565b7f4552433732313a206275726e206f6620746f6b656e2074686174206973206e6f8152643a1037bbb760d91b602082015260400192915050565b6000612926601b83612d18565b7f526563697069656e742073686f756c642062652070726573656e740000000000815260200192915050565b600061295f603083612d18565b7f4552433732314275726e61626c653a2063616c6c6572206973206e6f74206f7781526f1b995c881b9bdc88185c1c1c9bdd995960821b602082015260400192915050565b6121686129b0826106df565b6106df565b61216881612d4f565b60006118d282846122ad565b60006129d682856122dc565b6014820191506129e682846129a4565b5060200192915050565b6020810161077a828461215f565b60808101612a0c828761215f565b612a19602083018661215f565b612a26604083018561226c565b8181036060830152612a388184612275565b9695505050505050565b60408101612a50828561215f565b6118d2602083018461226c565b602080825281016118d281846121c7565b602080825281016118d28184612215565b6020810161077a8284612263565b60808101612a9b828761226c565b612aa860208301866129b5565b612ab5604083018561226c565b612ac2606083018461226c565b95945050505050565b602080825281016118d28184612275565b6020808252810161077a816122ed565b6020808252810161077a81612326565b6020808252810161077a81612373565b6020808252810161077a816123c7565b6020808252810161077a8161240f565b6020808252810161077a81612448565b6020808252810161077a8161248e565b6020808252810161077a816124c7565b6020808252810161077a81612515565b6020808252810161077a8161254e565b6020808252810161077a816125ad565b6020808252810161077a816125f9565b6020808252810161077a81612644565b6020808252810161077a8161267d565b6020808252810161077a816126cb565b6020808252810161077a81612719565b6020808252810161077a81612752565b6020808252810161077a8161279d565b6020808252810161077a816127ee565b6020808252810161077a81612831565b6020808252810161077a81612884565b6020808252810161077a816128d2565b6020808252810161077a81612919565b6020808252810161077a81612952565b6020810161077a828461226c565b60608101612c78828661226c565b8181036020830152612c8a818561216e565b90508181036040830152612ac28184612215565b60405181810167ffffffffffffffff81118282101715612cbd57600080fd5b604052919050565b600067ffffffffffffffff821115612cdc57600080fd5b5060209081020190565b600067ffffffffffffffff821115612cfd57600080fd5b506020601f91909101601f19160190565b60200190565b5190565b90815260200190565b919050565b600061077a82612d43565b151590565b6001600160e01b03191690565b6001600160a01b031690565b60ff1690565b600061077a82612d26565b82818337506000910152565b60005b83811015612d87578181015183820152602001612d6f565b83811115610bfe5750506000910152565b600061077a82600061077a82612db3565b601f01601f191690565b60601b90565b612dc281612d26565b81146107cb57600080fd5b612dc281612d31565b612dc2816106df565b612dc281612d36565b612dc281612d4f56fea365627a7a72315820201c77075700435b8055570069128b2f78068fa97620d263c3a15d9d6a5370796c6578706572696d656e74616cf564736f6c63430005110040",
  "sourceMap": "430:981:15:-;;;525:303;8:9:-1;5:2;;;30:1;27;20:12;5:2;525:303:15;;;;;;;;;;;;;;;;;;;;;673:4;679:6;687:11;700:14;;687:11;698:17:43;718:12;-1:-1:-1;;;;;718:10:43;:12;:::i;:::-;740:6;:18;;-1:-1:-1;;;;;;740:18:43;-1:-1:-1;;;;;740:18:43;;;;;;;773:43;;740:18;;-1:-1:-1;740:18:43;-1:-1:-1;;;;;;;;;;;773:43:43;740:6;;773:43;-1:-1:-1;718:40:40;-1:-1:-1;;;;;;;;718:18:40;:40;:::i;:::-;513:38:8;-1:-1:-1;;;;;;;;513:18:8;:38;:::i;:::-;2262:40:47;-1:-1:-1;;;;;;;;2262:18:47;:40;:::i;:::-;400:26:7;;;;:11;;:26;;;;;:::i;:::-;-1:-1:-1;436:46:7;-1:-1:-1;;;;;;;;436:18:7;:46;:::i;:::-;-1:-1:-1;402:32:9;;;;:14;;:32;;;;;:::i;:::-;-1:-1:-1;1357:51:49;;-1:-1:-1;;;;;;;;;1357:18:49;:51;:::i;:::-;1476:12:4;;;;:4;;:12;;;;;:::i;:::-;-1:-1:-1;1498:16:4;;;;:6;;:16;;;;;:::i;:::-;-1:-1:-1;1602:49:4;-1:-1:-1;;;;;;;;1602:18:4;:49;:::i;:::-;1287:371;;;;726:58:15;752:30;;;;;;;;;;;;;;;-1:-1:-1;;;;;726:18:15;:58;:::i;:::-;794:27;812:8;-1:-1:-1;;;;;794:17:15;:27;:::i;:::-;525:303;;;;;430:981;;788:96:35;867:10;788:96;;:::o;1442:190:40:-;-1:-1:-1;;;;;;1517:25:40;;;;;1509:66;;;;-1:-1:-1;;;1509:66:40;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;1585:33:40;;;;;1621:4;1585:33;;;;;;;;:40;;-1:-1:-1;;1585:40:40;;;;;;1442:190::o;1970:107:43:-;1103:9;-1:-1:-1;;;;;1103:7:43;:9;:::i;:::-;1095:54;;;;-1:-1:-1;;;1095:54:43;;;;;;;;;2042:28;2061:8;-1:-1:-1;;;;;2042:18:43;:28;:::i;:::-;1970:107;:::o;1250:92::-;1290:4;1329:6;;-1:-1:-1;;;;;1329:6:43;1313:12;-1:-1:-1;;;;;1313:10:43;:12;:::i;:::-;-1:-1:-1;;;;;1313:22:43;;1306:29;;1250:92;:::o;2178:225::-;-1:-1:-1;;;;;2251:22:43;;2243:73;;;;-1:-1:-1;;;2243:73:43;;;;;;;;;2352:6;;;2331:38;;-1:-1:-1;;;;;2331:38:43;;;;2352:6;;;-1:-1:-1;;;;;;;;;;;2331:38:43;;2379:6;:17;;-1:-1:-1;;;;;;2379:17:43;-1:-1:-1;;;;;2379:17:43;;;;;;;;;;2178:225::o;430:981:15:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;430:981:15;;;-1:-1:-1;430:981:15;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;5:134:-1;83:13;;101:33;83:13;101:33;;;68:71;;;;;147:444;;260:3;253:4;245:6;241:17;237:27;227:2;;278:1;275;268:12;227:2;308:6;302:13;330:65;345:49;387:6;345:49;;;330:65;;;321:74;;415:6;408:5;401:21;451:4;443:6;439:17;484:4;477:5;473:16;519:3;510:6;505:3;501:16;498:25;495:2;;;536:1;533;526:12;495:2;546:39;578:6;573:3;568;546:39;;;220:371;;;;;;;;599:1205;;;;;;822:3;810:9;801:7;797:23;793:33;790:2;;;839:1;836;829:12;790:2;874:24;;-1:-1;;;;;907:30;;904:2;;;950:1;947;940:12;904:2;970:74;1036:7;1027:6;1016:9;1012:22;970:74;;;960:84;;853:197;1102:2;1091:9;1087:18;1081:25;-1:-1;;;;;1118:6;1115:30;1112:2;;;1158:1;1155;1148:12;1112:2;1178:74;1244:7;1235:6;1224:9;1220:22;1178:74;;;1168:84;;1060:198;1289:2;1307:64;1363:7;1354:6;1343:9;1339:22;1307:64;;;1297:74;;1268:109;1429:2;1418:9;1414:18;1408:25;-1:-1;;;;;1445:6;1442:30;1439:2;;;1485:1;1482;1475:12;1439:2;1505:74;1571:7;1562:6;1551:9;1547:22;1505:74;;;1495:84;;1387:198;1637:3;1626:9;1622:19;1616:26;-1:-1;;;;;1654:6;1651:30;1648:2;;;1694:1;1691;1684:12;1648:2;1714:74;1780:7;1771:6;1760:9;1756:22;1714:74;;;1704:84;;1595:199;784:1020;;;;;;;;;1812:375;;1972:67;2036:2;2031:3;1972:67;;;2072:34;2052:55;;-1:-1;;;2136:2;2127:12;;2120:30;2178:2;2169:12;;1958:229;-1:-1;;1958:229;2196:328;;2356:67;2420:2;2415:3;2356:67;;;2456:30;2436:51;;2515:2;2506:12;;2342:182;-1:-1;;2342:182;2533:332;;2693:67;2757:2;2752:3;2693:67;;;2793:34;2773:55;;2856:2;2847:12;;2679:186;-1:-1;;2679:186;2874:353;;3052:85;3134:2;3129:3;3052:85;;;-1:-1;;;3150:40;;3218:2;3209:12;;3038:189;-1:-1;;3038:189;3235:372;;3434:148;3578:3;3434:148;;3614:407;3805:2;3819:47;;;3790:18;;3880:131;3790:18;3880:131;;4028:407;4219:2;4233:47;;;4204:18;;4294:131;4204:18;4294:131;;4442:407;4633:2;4647:47;;;4618:18;;4708:131;4618:18;4708:131;;4856:256;4918:2;4912:9;4944:17;;;-1:-1;;;;;5004:34;;5040:22;;;5001:62;4998:2;;;5076:1;5073;5066:12;4998:2;5092;5085:22;4896:216;;-1:-1;4896:216;5119:322;;-1:-1;;;;;5255:6;5252:30;5249:2;;;5295:1;5292;5285:12;5249:2;-1:-1;5426:4;5362;5339:17;;;;-1:-1;;5335:33;5416:15;;5186:255;5449:163;5552:19;;;5601:4;5592:14;;5545:67;5621:145;5757:3;5735:31;-1:-1;5735:31;5774:91;;-1:-1;;;;;5934:54;;5836:24;5917:76;6001:268;6066:1;6073:101;6087:6;6084:1;6081:13;6073:101;;;6154:11;;;6148:18;6135:11;;;6128:39;6109:2;6102:10;6073:101;;;6189:6;6186:1;6183:13;6180:2;;;6254:1;6245:6;6240:3;6236:16;6229:27;6180:2;6050:219;;;;;6277:117;6346:24;6364:5;6346:24;;;6339:5;6336:35;6326:2;;6385:1;6382;6375:12;6320:74;430:981:15;;;;;;",
  "deployedSourceMap": "430:981:15:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;430:981:15;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;915:133:40;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;689:18:4;;;:::i;:::-;;;;;;;;4283:200:47;;;;;;;;;:::i;:::-;;;;;;;;3583:415;;;;;;;;;:::i;:::-;;2007:293:4;;;;;;;;;:::i;:::-;;;;;;;;2171:94:49;;;:::i;:::-;;;;;;;;5929:287:47;;;;;;;;;:::i;1789:229:49:-;;;;;;;;;:::i;6865:132:47:-;;;;;;;;;:::i;362:233:48:-;;;;;;;;;:::i;2603:196:49:-;;;;;;;;;:::i;861:38:4:-;;;;;;;;;:::i;:::-;;;;;;;;;2939:223:47;;;;;;;;;:::i;834:325:15:-;;;;;;;;;:::i;2513:207:47:-;;;;;;;;;:::i;1684:137:43:-;;;:::i;899:77::-;;;:::i;1250:92::-;;;:::i;1296:113:15:-;;;;;;;;;:::i;734:20:4:-;;;:::i;1165:125:15:-;;;;;;;;;:::i;4776:249:47:-;;;;;;;;;:::i;7720:269::-;;;;;;;;;:::i;1664:337:4:-;;;;;;;;;:::i;:::-;;;;;;;;216:28:9;;;:::i;3188:207:4:-;;;;;;;;;:::i;170:25:7:-;;;:::i;5347:145:47:-;;;;;;;;;:::i;1970:107:43:-;;;;;;;;;:::i;915:133:40:-;-1:-1:-1;;;;;;1008:33:40;985:4;1008:33;;;:20;:33;;;;;;;;;915:133::o;689:18:4:-;;;;;;;;;;;;;;;-1:-1:-1;;689:18:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;4283:200:47:-;4342:7;4369:16;4377:7;4369;:16::i;:::-;4361:73;;;;-1:-1:-1;;;4361:73:47;;;;;;;;;;;;;;;;;-1:-1:-1;4452:24:47;;;;:15;:24;;;;;;-1:-1:-1;;;;;4452:24:47;;4283:200::o;3583:415::-;3646:13;3662:16;3670:7;3662;:16::i;:::-;3646:32;;3702:5;-1:-1:-1;;;;;3696:11:47;:2;-1:-1:-1;;;;;3696:11:47;;;3688:57;;;;-1:-1:-1;;;3688:57:47;;;;;;;;;3780:5;-1:-1:-1;;;;;3764:21:47;:12;:10;:12::i;:::-;-1:-1:-1;;;;;3764:21:47;;:62;;;;3789:37;3806:5;3813:12;:10;:12::i;3789:37::-;3756:152;;;;-1:-1:-1;;;3756:152:47;;;;;;;;;3919:24;;;;:15;:24;;;;;;:29;;-1:-1:-1;;;;;;3919:29:47;-1:-1:-1;;;;;3919:29:47;;;;;;;;;3963:28;;3919:24;;3963:28;;;;;;;3583:415;;;:::o;2007:293:4:-;2105:8;;;;:4;:8;;;;;;;;2084:29;;;;;;;;;;;;;;;;;2059:13;;;;2084:29;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2084:29:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2123:20;2157:5;:12;2146:24;;;;;;;;;;;;;;;;;;;;;;29:2:-1;21:6;17:15;117:4;105:10;97:6;88:34;136:17;;-1:-1;2146:24:4;-1:-1:-1;2123:47:4;-1:-1:-1;2185:6:4;2180:91;2201:5;:12;2197:1;:16;2180:91;;;2246:5;2252:1;2246:8;;;;;;;;;;;;;;:14;;;2234:6;2241:1;2234:9;;;;;;;;;;;;;;;;;:26;2215:3;;2180:91;;;-1:-1:-1;2287:6:4;2007:293;-1:-1:-1;;;2007:293:4:o;2171:94:49:-;2241:10;:17;2171:94;;:::o;5929:287:47:-;6071:41;6090:12;:10;:12::i;:::-;6104:7;6071:18;:41::i;:::-;6063:103;;;;-1:-1:-1;;;6063:103:47;;;;;;;;;6177:32;6191:4;6197:2;6201:7;6177:13;:32::i;:::-;5929:287;;;:::o;1789:229:49:-;1869:7;1904:16;1914:5;1904:9;:16::i;:::-;1896:5;:24;1888:80;;;;-1:-1:-1;;;1888:80:49;;;;;;;;;-1:-1:-1;;;;;1985:19:49;;;;;;:12;:19;;;;;:26;;2005:5;;1985:26;;;;;;;;;;;;;;1978:33;;1789:229;;;;;:::o;6865:132:47:-;6951:39;6968:4;6974:2;6978:7;6951:39;;;;;;;;;;;;:16;:39::i;362:233:48:-;470:41;489:12;:10;:12::i;470:41::-;462:102;;;;-1:-1:-1;;;462:102:48;;;;;;;;;574:14;580:7;574:5;:14::i;:::-;362:233;:::o;2603:196:49:-;2661:7;2696:13;:11;:13::i;:::-;2688:5;:21;2680:78;;;;-1:-1:-1;;;2680:78:49;;;;;;;;;2775:10;2786:5;2775:17;;;;;;;;;;;;;;;;2768:24;;2603:196;;;:::o;861:38:4:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;861:38:4;;;;-1:-1:-1;861:38:4;-1:-1:-1;861:38:4;:::o;2939:223:47:-;2994:7;3029:20;;;:11;:20;;;;;;-1:-1:-1;;;;;3029:20:47;3067:19;3059:73;;;;-1:-1:-1;;;3059:73:47;;;;;;;;834:325:15;976:62;1013:4;1019:7;996:31;;;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;996:31:15;;;986:42;;;;;;1030:1;1033;1036;976:62;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;976:62:15;;;;;;;;-1:-1:-1;;;;;965:73:15;:7;:5;:7::i;:::-;-1:-1:-1;;;;;965:73:15;;957:111;;;;-1:-1:-1;;;957:111:15;;;;;;;;;1078:33;1084:10;1096:7;1105:5;1078;:33::i;:::-;1121:31;1134:7;1143:8;1121:12;:31::i;:::-;834:325;;;;;;:::o;2513:207:47:-;2568:7;-1:-1:-1;;;;;2595:19:47;;2587:74;;;;-1:-1:-1;;;2587:74:47;;;;;;;;;-1:-1:-1;;;;;2679:24:47;;;;;;:17;:24;;;;;:34;;:32;:34::i;1684:137:43:-;1103:9;:7;:9::i;:::-;1095:54;;;;-1:-1:-1;;;1095:54:43;;;;;;;;;1782:1;1766:6;;1745:40;;-1:-1:-1;;;;;1766:6:43;;;;1745:40;;1782:1;;1745:40;1812:1;1795:19;;-1:-1:-1;;;;;;1795:19:43;;;1684:137::o;899:77::-;937:7;963:6;-1:-1:-1;;;;;963:6:43;899:77;:::o;1250:92::-;1290:4;1329:6;;-1:-1:-1;;;;;1329:6:43;1313:12;:10;:12::i;:::-;-1:-1:-1;;;;;1313:22:43;;1306:29;;1250:92;:::o;1296:113:15:-;1103:9:43;:7;:9::i;:::-;1095:54;;;;-1:-1:-1;;;1095:54:43;;;;;;;;;1374:28:15;1390:11;1374:15;:28::i;734:20:4:-;;;;;;;;;;;;;;;-1:-1:-1;;734:20:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1165:125:15;1103:9:43;:7;:9::i;:::-;1095:54;;;;-1:-1:-1;;;1095:54:43;;;;;;;;;1249:34:15;1268:14;1249:18;:34::i;4776:249:47:-;4861:12;:10;:12::i;:::-;-1:-1:-1;;;;;4855:18:47;:2;-1:-1:-1;;;;;4855:18:47;;;4847:56;;;;-1:-1:-1;;;4847:56:47;;;;;;;;;4953:8;4914:18;:32;4933:12;:10;:12::i;:::-;-1:-1:-1;;;;;4914:32:47;;;;;;;;;;;;;;;;;-1:-1:-1;4914:32:47;;;:36;;;;;;;;;;;;:47;;-1:-1:-1;;4914:47:47;;;;;;;;;;;4991:12;:10;:12::i;:::-;-1:-1:-1;;;;;4976:42:47;;5009:8;4976:42;;;;;;;;;;;;;;;4776:249;;:::o;7720:269::-;7834:41;7853:12;:10;:12::i;:::-;7867:7;7834:18;:41::i;:::-;7826:103;;;;-1:-1:-1;;;7826:103:47;;;;;;;;;7939:43;7957:4;7963:2;7967:7;7976:5;7939:17;:43::i;:::-;7720:269;;;;:::o;1664:337:4:-;1780:8;;;;:4;:8;;;;;;;;1759:29;;;;;;;;;;;;;;;;;1723:24;;;;1759:29;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1759:29:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1798:31;1854:5;:12;1832:35;;;;;;;;;;;;;;;;;;;;;;29:2:-1;21:6;17:15;117:4;105:10;97:6;88:34;136:17;;-1:-1;1832:35:4;-1:-1:-1;1798:69:4;-1:-1:-1;1882:6:4;1877:95;1898:5;:12;1894:1;:16;1877:95;;;1943:5;1949:1;1943:8;;;;;;;;;;;;;;:18;;;1931:6;1938:1;1931:9;;;;;;;;-1:-1:-1;;;;;1931:30:4;;;:9;;;;;;;;;;;:30;1912:3;;1877:95;;216:28:9;;;;;;;;;;;;;;;-1:-1:-1;;216:28:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3188:207:4;3246:13;3279:16;3287:7;3279;:16::i;:::-;3271:76;;;;-1:-1:-1;;;3271:76:4;;;;;;;;;3364:24;3380:7;3364:15;:24::i;170:25:7:-;;;;;;;;;;;;;;;-1:-1:-1;;170:25:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5347:145:47;-1:-1:-1;;;;;5450:25:47;;;5427:4;5450:25;;;:18;:25;;;;;;;;:35;;;;;;;;;;;;;;;5347:145::o;1970:107:43:-;1103:9;:7;:9::i;:::-;1095:54;;;;-1:-1:-1;;;1095:54:43;;;;;;;;;2042:28;2061:8;2042:18;:28::i;9158:152:47:-;9215:4;9247:20;;;:11;:20;;;;;;-1:-1:-1;;;;;9247:20:47;9284:19;;;9158:152::o;788:96:35:-;867:10;788:96;:::o;9671:329:47:-;9756:4;9780:16;9788:7;9780;:16::i;:::-;9772:73;;;;-1:-1:-1;;;9772:73:47;;;;;;;;;9855:13;9871:16;9879:7;9871;:16::i;:::-;9855:32;;9916:5;-1:-1:-1;;;;;9905:16:47;:7;-1:-1:-1;;;;;9905:16:47;;:51;;;;9949:7;-1:-1:-1;;;;;9925:31:47;:20;9937:7;9925:11;:20::i;:::-;-1:-1:-1;;;;;9925:31:47;;9905:51;:87;;;;9960:32;9977:5;9984:7;9960:16;:32::i;:::-;9897:96;9671:329;-1:-1:-1;;;;9671:329:47:o;3174:239:49:-;3259:38;3279:4;3285:2;3289:7;3259:19;:38::i;:::-;3308:47;3341:4;3347:7;3308:32;:47::i;:::-;3366:40;3394:2;3398:7;3366:27;:40::i;12814:90:47:-;12865:32;12871:16;12879:7;12871;:16::i;:::-;12889:7;12865:5;:32::i;2306:682:4:-;2389:18;2395:2;2399:7;2389:5;:18::i;:::-;2417:27;2461:5;:12;2447:27;;;;;;;;;;;;;;;;;;;;;;29:2:-1;21:6;17:15;117:4;105:10;97:6;88:34;136:17;;-1:-1;2447:27:4;;2417:57;;2484:17;2515:5;:12;2504:24;;;;;;;;;;;;;;;;;;;;;;29:2:-1;21:6;17:15;117:4;105:10;97:6;88:34;136:17;;-1:-1;2504:24:4;-1:-1:-1;2484:44:4;-1:-1:-1;2543:6:4;2538:340;2559:5;:12;2555:1;:16;2538:340;;;2630:3;-1:-1:-1;;;;;2600:34:4;:5;2606:1;2600:8;;;;;;;;;;;;;;:18;;;-1:-1:-1;;;;;2600:34:4;;;2592:74;;;;-1:-1:-1;;;2592:74:4;;;;;;;;;2688:5;2694:1;2688:8;;;;;;;;;;;;;;:14;;;2706:1;2688:19;;2680:60;;;;-1:-1:-1;;;2680:60:4;;;;;;;;;2754:13;;;;:4;:13;;;;;2773:8;;:5;;2779:1;;2773:8;;;;;;;;;;;;;;;;;27:10:-1;;39:1;23:18;;;45:23;;-1:-1;2754:28:4;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;2754:28:4;-1:-1:-1;;;;;2754:28:4;;;;;;;;;;;;;;;2812:8;;;;2818:1;;2812:8;;;;;;;;;;;;:18;;;2796:10;2807:1;2796:13;;;;;;;;;;;;;:34;-1:-1:-1;;;;;2796:34:4;;;-1:-1:-1;;;;;2796:34:4;;;;;2853:5;2859:1;2853:8;;;;;;;;;;;;;;:14;;;2844:3;2848:1;2844:6;;;;;;;;;;;;;;;;;:23;2573:3;;2538:340;;;-1:-1:-1;2891:12:4;;:16;2887:95;;2928:43;2946:7;2955:10;2967:3;2928:43;;;;;;;;;;;;;;;;;2887:95;2306:682;;;;;:::o;3634:199::-;3719:16;3727:7;3719;:16::i;:::-;3711:73;;;;-1:-1:-1;;;3711:73:4;;;;;;;;;3794:32;3813:7;3822:3;3794:18;:32::i;:::-;3634:199;;:::o;1065:112:39:-;1156:14;;1065:112::o;620:105:7:-;692:26;;;;:11;;:26;;;;;:::i;1268:117:9:-;1346:32;;;;:14;;:32;;;;;:::i;8694:269:47:-;8803:32;8817:4;8823:2;8827:7;8803:13;:32::i;:::-;8853:48;8876:4;8882:2;8886:7;8895:5;8853:22;:48::i;:::-;8845:111;;;;-1:-1:-1;;;8845:111:47;;;;;;;;641:140:9;754:19;;;;:10;:19;;;;;;;;;732:42;;;;;;;;;;;-1:-1:-1;;732:42:9;;;;;;;;;;;;;;;;;;;;;;;;;;700:13;;732:42;;;;754:19;732:42;;754:19;732:42;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;732:14:9;:21;;;;;;;;-1:-1:-1;;732:21:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;732:14:9;;-1:-1:-1;732:21:9;-1:-1:-1;732:21:9;;:14;:21;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:42;;;;:::i;2178:225:43:-;-1:-1:-1;;;;;2251:22:43;;2243:73;;;;-1:-1:-1;;;2243:73:43;;;;;;;;;2352:6;;;2331:38;;-1:-1:-1;;;;;2331:38:43;;;;2352:6;;;2331:38;;;2379:6;:17;;-1:-1:-1;;;;;;2379:17:43;-1:-1:-1;;;;;2379:17:43;;;;;;;;;;2178:225::o;13281:447:47:-;13394:4;-1:-1:-1;;;;;13374:24:47;:16;13382:7;13374;:16::i;:::-;-1:-1:-1;;;;;13374:24:47;;13366:78;;;;-1:-1:-1;;;13366:78:47;;;;;;;;;-1:-1:-1;;;;;13462:16:47;;13454:65;;;;-1:-1:-1;;;13454:65:47;;;;;;;;;13530:23;13545:7;13530:14;:23::i;:::-;-1:-1:-1;;;;;13564:23:47;;;;;;:17;:23;;;;;:35;;:33;:35::i;:::-;-1:-1:-1;;;;;13609:21:47;;;;;;:17;:21;;;;;:33;;:31;:33::i;:::-;13653:20;;;;:11;:20;;;;;;:25;;-1:-1:-1;;;;;;13653:25:47;-1:-1:-1;;;;;13653:25:47;;;;;;;;;13694:27;;13653:20;;13694:27;;;;;;;13281:447;;;:::o;6284:1128:49:-;-1:-1:-1;;;;;6571:18:49;;6546:22;6571:18;;;:12;:18;;;;;:25;:32;;6601:1;6571:32;:29;:32;:::i;:::-;6613:18;6634:26;;;:17;:26;;;;;;6546:57;;-1:-1:-1;6764:28:49;;;6760:323;;-1:-1:-1;;;;;6830:18:49;;6808:19;6830:18;;;:12;:18;;;;;:34;;6849:14;;6830:34;;;;;;;;;;;;;;6808:56;;6912:11;6879:12;:18;6892:4;-1:-1:-1;;;;;6879:18:49;-1:-1:-1;;;;;6879:18:49;;;;;;;;;;;;6898:10;6879:30;;;;;;;;;;;;;;;;;;;:44;;;;6995:30;;;:17;:30;;;;;:43;;;6760:323;-1:-1:-1;;;;;7169:18:49;;;;;;:12;:18;;;;;:27;;;;;-1:-1:-1;;7169:27:49;;;:::i;5128:183::-;-1:-1:-1;;;;;5241:16:49;;;;;;;:12;:16;;;;;;;;:23;;5212:26;;;:17;:26;;;;;:52;;;5274:16;;;39:1:-1;23:18;;45:23;;5274:30:49;;;;;;;;5128:183::o;4126:133:4:-;4192:27;4204:5;4211:7;4192:11;:27::i;:::-;4229:23;4244:7;4229:14;:23::i;3670:196:49:-;3733:24;3745:2;3749:7;3733:11;:24::i;:::-;3768:40;3796:2;3800:7;3768:27;:40::i;:::-;3819;3851:7;3819:31;:40::i;1020:109:9:-;1097:19;;;;:10;:19;;;;;;;;:25;;;;;;;;:::i;14367:1051:47:-;14488:4;14513:15;:2;-1:-1:-1;;;;;14513:13:47;;:15::i;:::-;14508:58;;-1:-1:-1;14551:4:47;14544:11;;14508:58;14635:12;14649:23;-1:-1:-1;;;;;14676:7:47;;-1:-1:-1;;;14779:12:47;:10;:12::i;:::-;14805:4;14823:7;14844:5;14684:175;;;;;;;;;;;;;;;;-1:-1:-1;;26:21;;;22:32;6:49;;14684:175:47;;;49:4:-1;25:18;;61:17;;-1:-1;;;;;182:15;-1:-1;;;;;;14684:175:47;;;179:29:-1;;;;160:49;;;14676:184:47;;;;14684:175;14676:184;;;;;;;;;;;;;;;;;;14:1:-1;21;16:31;;;;75:4;69:11;64:16;;144:4;140:9;133:4;115:16;111:27;107:43;104:1;100:51;94:4;87:65;169:16;166:1;159:27;225:16;222:1;215:4;212:1;208:12;193:49;7:242;;16:31;36:4;31:9;;7:242;;14634:226:47;;;;14875:7;14870:542;;14902:17;;:21;14898:376;;15067:10;15061:17;15127:15;15114:10;15110:2;15106:19;15099:44;15016:145;15199:60;;-1:-1:-1;;;15199:60:47;;;;;;;;14870:542;15304:13;15331:10;15320:32;;;;;;;;;;;;;;-1:-1:-1;;;;;;15374:26:47;-1:-1:-1;;;15374:26:47;;-1:-1:-1;15366:35:47;;-1:-1:-1;;;15366:35:47;118:414:33;193:13;218:16;243:2;218:28;;256:16;281:2;256:28;;294:16;336:3;:10;323:3;:10;:23;313:34;;;;;;;;;;;;;;;;;;;;;;;;;21:6:-1;;104:10;313:34:33;87::-1;135:17;;-1:-1;313:34:33;-1:-1:-1;294:53:33;-1:-1:-1;357:6:33;;377:55;398:3;:10;394:1;:14;377:55;;;426:3;430:1;426:6;;;;;;;;;;;;;;;;415:3;419;;;;;;415:8;;;;;;;;;;;:17;-1:-1:-1;;;;;415:17:33;;;;;;;;-1:-1:-1;410:3:33;;377:55;;;-1:-1:-1;447:6:33;442:55;463:3;:10;459:1;:14;442:55;;;491:3;495:1;491:6;;;;;;;;;;;;;;;;480:3;484;;;;;;480:8;;;;;;;;;;;:17;-1:-1:-1;;;;;480:17:33;;;;;;;;-1:-1:-1;475:3:33;;442:55;;;-1:-1:-1;521:3:33;;118:414;-1:-1:-1;;;;;;118:414:33:o;15580:171:47:-;15679:1;15643:24;;;:15;:24;;;;;;-1:-1:-1;;;;;15643:24:47;:38;15639:106;;15732:1;15697:24;;;:15;:24;;;;;:37;;-1:-1:-1;;;;;;15697:37:47;;;15580:171::o;1367:108:39:-;1447:14;;:21;;1466:1;1447:21;:18;:21;:::i;:::-;1430:38;;1367:108::o;1183:178::-;1335:19;;1353:1;1335:19;;;1183:178::o;1274:134:42:-;1332:7;1358:43;1362:1;1365;1358:43;;;;;;;;;;;;;;;;;:3;:43::i;:::-;1351:50;1274:134;-1:-1:-1;;;1274:134:42:o;4141:364:49:-;4207:27;4219:5;4226:7;4207:11;:27::i;:::-;4245:48;4278:5;4285:7;4245:32;:48::i;:::-;4441:1;4412:26;;;:17;:26;;;;;:30;4453:45;4430:7;4453:36;:45::i;1391:161:9:-;1461:19;;;;:10;:19;;;;;1455:33;;-1:-1:-1;;1455:33:9;;;;;;;;;;;:38;1451:95;;1516:19;;;;:10;:19;;;;;1509:26;;;:::i;11714:327:47:-;-1:-1:-1;;;;;11785:16:47;;11777:61;;;;-1:-1:-1;;;11777:61:47;;;;;;;;;11857:16;11865:7;11857;:16::i;:::-;11856:17;11848:58;;;;-1:-1:-1;;;11848:58:47;;;;;;;;;11917:20;;;;:11;:20;;;;;;;;:25;;-1:-1:-1;;;;;;11917:25:47;-1:-1:-1;;;;;11917:25:47;;;;;;;;11952:21;;:17;:21;;;;;:33;;:31;:33::i;:::-;12001;;12026:7;;-1:-1:-1;;;;;12001:33:47;;;12018:1;;12001:33;;12018:1;;12001:33;11714:327;;:::o;5506:161:49:-;5609:10;:17;;5582:24;;;;:15;:24;;;;;:44;;;39:1:-1;23:18;;45:23;;5636:24:49;;;;;;;5506:161::o;686:610:54:-;746:4;1207:20;;1052:66;1246:23;;;;;;:42;;-1:-1:-1;;1273:15:54;;;1238:51;-1:-1:-1;;686:610:54:o;1732:187:42:-;1818:7;1853:12;1845:6;;;;1837:29;;;;-1:-1:-1;;;1837:29:42;;;;;;;;;;-1:-1:-1;;;1888:5:42;;;1732:187::o;12309:324:47:-;12403:5;-1:-1:-1;;;;;12383:25:47;:16;12391:7;12383;:16::i;:::-;-1:-1:-1;;;;;12383:25:47;;12375:75;;;;-1:-1:-1;;;12375:75:47;;;;;;;;;12461:23;12476:7;12461:14;:23::i;:::-;-1:-1:-1;;;;;12495:24:47;;;;;;:17;:24;;;;;:36;;:34;:36::i;:::-;12572:1;12541:20;;;:11;:20;;;;;;:33;;-1:-1:-1;;;;;;12541:33:47;;;12590:36;12553:7;;12572:1;-1:-1:-1;;;;;12590:36:47;;;;;12572:1;;12590:36;12309:324;;:::o;7700:1064:49:-;7974:10;:17;7949:22;;7974:24;;7996:1;7974:24;:21;:24;:::i;:::-;8008:18;8029:24;;;:15;:24;;;;;;8397:10;:26;;7949:49;;-1:-1:-1;8029:24:49;;7949:49;;8397:26;;;;;;;;;;;;;;8375:48;;8459:11;8434:10;8445;8434:22;;;;;;;;;;;;;;;;;;;:36;;;;8538:28;;;:15;:28;;;;;;:41;;;8700:10;:19;;;;;-1:-1:-1;;8700:19:49;;;:::i;:::-;-1:-1:-1;;;8756:1:49;8729:24;;;-1:-1:-1;8729:15:49;:24;;;;;:28;7700:1064::o;430:981:15:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;430:981:15;;;-1:-1:-1;430:981:15;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5:130:-1;72:20;;97:33;72:20;97:33;;327:758;;461:3;454:4;446:6;442:17;438:27;428:2;;479:1;476;469:12;428:2;516:6;503:20;538:97;553:81;627:6;553:81;;;538:97;;;529:106;;652:5;677:6;670:5;663:21;707:4;699:6;695:17;685:27;;729:4;724:3;720:14;713:21;;782:6;829:3;821:4;813:6;809:17;804:3;800:27;797:36;794:2;;;846:1;843;836:12;794:2;871:1;856:223;881:6;878:1;875:13;856:223;;;939:3;961:54;1011:3;999:10;961:54;;;949:67;;-1:-1;1039:4;1030:14;;;;1067:4;1058:14;;;;;903:1;896:9;856:223;;;860:14;421:664;;;;;;;;1093:124;1157:20;;1182:30;1157:20;1182:30;;1224:130;1291:20;;1316:33;1291:20;1316:33;;1361:128;1427:20;;1452:32;1427:20;1452:32;;1496:132;1573:13;;1591:32;1573:13;1591:32;;1636:440;;1737:3;1730:4;1722:6;1718:17;1714:27;1704:2;;1755:1;1752;1745:12;1704:2;1792:6;1779:20;1814:64;1829:48;1870:6;1829:48;;1814:64;1805:73;;1898:6;1891:5;1884:21;1934:4;1926:6;1922:17;1967:4;1960:5;1956:16;2002:3;1993:6;1988:3;1984:16;1981:25;1978:2;;;2019:1;2016;2009:12;1978:2;2029:41;2063:6;2058:3;2053;2029:41;;;1697:379;;;;;;;;2563:473;;2669:4;2657:9;2652:3;2648:19;2644:30;2641:2;;;2687:1;2684;2677:12;2641:2;2705:20;2720:4;2705:20;;;2696:29;-1:-1;2780:1;2812:57;2865:3;2845:9;2812:57;;;2787:83;;-1:-1;2932:2;2965:49;3010:3;2986:22;;;2965:49;;;2958:4;2951:5;2947:16;2940:75;2891:135;2635:401;;;;;3180:126;3245:20;;3270:31;3245:20;3270:31;;3313:241;;3417:2;3405:9;3396:7;3392:23;3388:32;3385:2;;;3433:1;3430;3423:12;3385:2;3468:1;3485:53;3530:7;3510:9;3485:53;;3561:366;;;3682:2;3670:9;3661:7;3657:23;3653:32;3650:2;;;3698:1;3695;3688:12;3650:2;3733:1;3750:53;3795:7;3775:9;3750:53;;;3740:63;;3712:97;3840:2;3858:53;3903:7;3894:6;3883:9;3879:22;3858:53;;;3848:63;;3819:98;3644:283;;;;;;3934:491;;;;4072:2;4060:9;4051:7;4047:23;4043:32;4040:2;;;4088:1;4085;4078:12;4040:2;4123:1;4140:53;4185:7;4165:9;4140:53;;;4130:63;;4102:97;4230:2;4248:53;4293:7;4284:6;4273:9;4269:22;4248:53;;;4238:63;;4209:98;4338:2;4356:53;4401:7;4392:6;4381:9;4377:22;4356:53;;;4346:63;;4317:98;4034:391;;;;;;4432:721;;;;;4596:3;4584:9;4575:7;4571:23;4567:33;4564:2;;;4613:1;4610;4603:12;4564:2;4648:1;4665:53;4710:7;4690:9;4665:53;;;4655:63;;4627:97;4755:2;4773:53;4818:7;4809:6;4798:9;4794:22;4773:53;;;4763:63;;4734:98;4863:2;4881:53;4926:7;4917:6;4906:9;4902:22;4881:53;;;4871:63;;4842:98;4999:2;4988:9;4984:18;4971:32;5023:18;5015:6;5012:30;5009:2;;;5055:1;5052;5045:12;5009:2;5075:62;5129:7;5120:6;5109:9;5105:22;5075:62;;;5065:72;;4950:193;4558:595;;;;;;;;5160:360;;;5278:2;5266:9;5257:7;5253:23;5249:32;5246:2;;;5294:1;5291;5284:12;5246:2;5329:1;5346:53;5391:7;5371:9;5346:53;;;5336:63;;5308:97;5436:2;5454:50;5496:7;5487:6;5476:9;5472:22;5454:50;;5527:366;;;5648:2;5636:9;5627:7;5623:23;5619:32;5616:2;;;5664:1;5661;5654:12;5616:2;5699:1;5716:53;5761:7;5741:9;5716:53;;;5706:63;;5678:97;5806:2;5824:53;5869:7;5860:6;5849:9;5845:22;5824:53;;5900:239;;6003:2;5991:9;5982:7;5978:23;5974:32;5971:2;;;6019:1;6016;6009:12;5971:2;6054:1;6071:52;6115:7;6095:9;6071:52;;6146:261;;6260:2;6248:9;6239:7;6235:23;6231:32;6228:2;;;6276:1;6273;6266:12;6228:2;6311:1;6328:63;6383:7;6363:9;6328:63;;6414:347;;6528:2;6516:9;6507:7;6503:23;6499:32;6496:2;;;6544:1;6541;6534:12;6496:2;6579:31;;6630:18;6619:30;;6616:2;;;6662:1;6659;6652:12;6616:2;6682:63;6737:7;6728:6;6717:9;6713:22;6682:63;;6768:241;;6872:2;6860:9;6851:7;6847:23;6843:32;6840:2;;;6888:1;6885;6878:12;6840:2;6923:1;6940:53;6985:7;6965:9;6940:53;;7016:366;;;7137:2;7125:9;7116:7;7112:23;7108:32;7105:2;;;7153:1;7150;7143:12;7105:2;7188:1;7205:53;7250:7;7230:9;7205:53;;7389:1141;;;;;;;7628:3;7616:9;7607:7;7603:23;7599:33;7596:2;;;7645:1;7642;7635:12;7596:2;7680:1;7697:53;7742:7;7722:9;7697:53;;;7687:63;;7659:97;7787:2;7805:51;7848:7;7839:6;7828:9;7824:22;7805:51;;;7795:61;;7766:96;7893:2;7911:53;7956:7;7947:6;7936:9;7932:22;7911:53;;;7901:63;;7872:98;8001:2;8019:53;8064:7;8055:6;8044:9;8040:22;8019:53;;;8009:63;;7980:98;8137:3;8126:9;8122:19;8109:33;8162:18;8154:6;8151:30;8148:2;;;8194:1;8191;8184:12;8148:2;8214:95;8301:7;8292:6;8281:9;8277:22;8214:95;;;8204:105;;8088:227;8374:3;8363:9;8359:19;8346:33;8399:18;8391:6;8388:30;8385:2;;;8431:1;8428;8421:12;8385:2;8451:63;8506:7;8497:6;8486:9;8482:22;8451:63;;;8441:73;;8325:195;7590:940;;;;;;;;;8538:205;;8641:62;8699:3;8691:6;8641:62;;;-1:-1;;8732:4;8723:14;;8634:109;8934:173;;9021:46;9063:3;9055:6;9021:46;;9115:127;9204:32;9230:5;9204:32;;;9199:3;9192:45;9186:56;;;9654:690;;9799:54;9847:5;9799:54;;;9866:86;9945:6;9940:3;9866:86;;;9859:93;;9973:56;10023:5;9973:56;;;10049:7;10077:1;10062:260;10087:6;10084:1;10081:13;10062:260;;;10154:6;10148:13;10175:63;10234:3;10219:13;10175:63;;;10168:70;;10255:60;10308:6;10255:60;;;10245:70;-1:-1;;10109:1;10102:9;10062:260;;;-1:-1;10335:3;;9778:566;-1:-1;;;;;9778:566;10399:754;;10560:62;10616:5;10560:62;;;10635:94;10722:6;10717:3;10635:94;;;10628:101;;10750:64;10808:5;10750:64;;;10834:7;10862:1;10847:284;10872:6;10869:1;10866:13;10847:284;;;10939:6;10933:13;10960:79;11035:3;11020:13;10960:79;;;10953:86;;11056:68;11117:6;11056:68;;;11046:78;-1:-1;;10894:1;10887:9;10847:284;;11192:690;;11337:54;11385:5;11337:54;;;11404:86;11483:6;11478:3;11404:86;;;11397:93;;11511:56;11561:5;11511:56;;;11587:7;11615:1;11600:260;11625:6;11622:1;11619:13;11600:260;;;11692:6;11686:13;11713:63;11772:3;11757:13;11713:63;;;11706:70;;11793:60;11846:6;11793:60;;;11783:70;-1:-1;;11647:1;11640:9;11600:260;;11890:104;11967:21;11982:5;11967:21;;12001:113;12084:24;12102:5;12084:24;;12121:343;;12231:38;12263:5;12231:38;;;12281:70;12344:6;12339:3;12281:70;;;12274:77;;12356:52;12401:6;12396:3;12389:4;12382:5;12378:16;12356:52;;;12429:29;12451:6;12429:29;;;12420:39;;;;12211:253;-1:-1;;;12211:253;12471:356;;12599:38;12631:5;12599:38;;;12649:88;12730:6;12725:3;12649:88;;;12642:95;;12742:52;12787:6;12782:3;12775:4;12768:5;12764:16;12742:52;;;12806:16;;;;;12579:248;-1:-1;;12579:248;12834:209;12957:80;12977:59;13030:5;12977:59;;;12957:80;;13751:328;;13911:67;13975:2;13970:3;13911:67;;;14011:30;13991:51;;14070:2;14061:12;;13897:182;-1:-1;;13897:182;14088:380;;14248:67;14312:2;14307:3;14248:67;;;14348:34;14328:55;;-1:-1;;;14412:2;14403:12;;14396:35;14459:2;14450:12;;14234:234;-1:-1;;14234:234;14477:387;;14637:67;14701:2;14696:3;14637:67;;;14737:34;14717:55;;-1:-1;;;14801:2;14792:12;;14785:42;14855:2;14846:12;;14623:241;-1:-1;;14623:241;14873:375;;15033:67;15097:2;15092:3;15033:67;;;15133:34;15113:55;;-1:-1;;;15197:2;15188:12;;15181:30;15239:2;15230:12;;15019:229;-1:-1;;15019:229;15257:328;;15417:67;15481:2;15476:3;15417:67;;;15517:30;15497:51;;15576:2;15567:12;;15403:182;-1:-1;;15403:182;15594:373;;15754:67;15818:2;15813:3;15754:67;;;15854:34;15834:55;;-1:-1;;;15918:2;15909:12;;15902:28;15958:2;15949:12;;15740:227;-1:-1;;15740:227;15976:325;;16136:67;16200:2;16195:3;16136:67;;;16236:27;16216:48;;16292:2;16283:12;;16122:179;-1:-1;;16122:179;16310:381;;16470:67;16534:2;16529:3;16470:67;;;16570:34;16550:55;;-1:-1;;;16634:2;16625:12;;16618:36;16682:2;16673:12;;16456:235;-1:-1;;16456:235;16700:325;;16860:67;16924:2;16919:3;16860:67;;;16960:27;16940:48;;17016:2;17007:12;;16846:179;-1:-1;;16846:179;17034:393;;17194:67;17258:2;17253:3;17194:67;;;17294:34;17274:55;;17363:26;17358:2;17349:12;;17342:48;17418:2;17409:12;;17180:247;-1:-1;;17180:247;17436:379;;17596:67;17660:2;17655:3;17596:67;;;17696:34;17676:55;;-1:-1;;;17760:2;17751:12;;17744:34;17806:2;17797:12;;17582:233;-1:-1;;17582:233;17824:378;;17984:67;18048:2;18043:3;17984:67;;;18084:34;18064:55;;-1:-1;;;18148:2;18139:12;;18132:33;18193:2;18184:12;;17970:232;-1:-1;;17970:232;18211:332;;18371:67;18435:2;18430:3;18371:67;;;18471:34;18451:55;;18534:2;18525:12;;18357:186;-1:-1;;18357:186;18552:381;;18712:67;18776:2;18771:3;18712:67;;;18812:34;18792:55;;-1:-1;;;18876:2;18867:12;;18860:36;18924:2;18915:12;;18698:235;-1:-1;;18698:235;18942:381;;19102:67;19166:2;19161:3;19102:67;;;19202:34;19182:55;;-1:-1;;;19266:2;19257:12;;19250:36;19314:2;19305:12;;19088:235;-1:-1;;19088:235;19332:332;;19492:67;19556:2;19551:3;19492:67;;;19592:34;19572:55;;19655:2;19646:12;;19478:186;-1:-1;;19478:186;19673:378;;19833:67;19897:2;19892:3;19833:67;;;19933:34;19913:55;;-1:-1;;;19997:2;19988:12;;19981:33;20042:2;20033:12;;19819:232;-1:-1;;19819:232;20060:384;;20220:67;20284:2;20279:3;20220:67;;;20320:34;20300:55;;-1:-1;;;20384:2;20375:12;;20368:39;20435:2;20426:12;;20206:238;-1:-1;;20206:238;20453:370;;20613:67;20677:2;20672:3;20613:67;;;20713:34;20693:55;;-1:-1;;;20777:2;20768:12;;20761:25;20814:2;20805:12;;20599:224;-1:-1;;20599:224;20832:386;;20992:67;21056:2;21051:3;20992:67;;;21092:34;21072:55;;-1:-1;;;21156:2;21147:12;;21140:41;21209:2;21200:12;;20978:240;-1:-1;;20978:240;21227:381;;21387:67;21451:2;21446:3;21387:67;;;21487:34;21467:55;;-1:-1;;;21551:2;21542:12;;21535:36;21599:2;21590:12;;21373:235;-1:-1;;21373:235;21617:374;;21777:67;21841:2;21836:3;21777:67;;;21877:34;21857:55;;-1:-1;;;21941:2;21932:12;;21925:29;21982:2;21973:12;;21763:228;-1:-1;;21763:228;22000:327;;22160:67;22224:2;22219:3;22160:67;;;22260:29;22240:50;;22318:2;22309:12;;22146:181;-1:-1;;22146:181;22336:385;;22496:67;22560:2;22555:3;22496:67;;;22596:34;22576:55;;-1:-1;;;22660:2;22651:12;;22644:40;22712:2;22703:12;;22482:239;-1:-1;;22482:239;22959:152;23060:45;23080:24;23098:5;23080:24;;;23060:45;;23118:107;23197:22;23213:5;23197:22;;23232:262;;23376:93;23465:3;23456:6;23376:93;;23501:427;;23670:97;23763:3;23754:6;23670:97;;;23789:2;23784:3;23780:12;23773:19;;23803:75;23874:3;23865:6;23803:75;;;-1:-1;23900:2;23891:12;;23658:270;-1:-1;;23658:270;23935:213;24053:2;24038:18;;24067:71;24042:9;24111:6;24067:71;;24155:663;24391:3;24376:19;;24406:87;24380:9;24466:6;24406:87;;;24504:72;24572:2;24561:9;24557:18;24548:6;24504:72;;;24587;24655:2;24644:9;24640:18;24631:6;24587:72;;;24707:9;24701:4;24697:20;24692:2;24681:9;24677:18;24670:48;24732:76;24803:4;24794:6;24732:76;;;24724:84;24362:456;-1:-1;;;;;;24362:456;24825:356;24987:2;24972:18;;25001:87;24976:9;25061:6;25001:87;;;25099:72;25167:2;25156:9;25152:18;25143:6;25099:72;;25188:393;25372:2;25386:47;;;25357:18;;25447:124;25357:18;25557:6;25447:124;;25588:361;25756:2;25770:47;;;25741:18;;25831:108;25741:18;25925:6;25831:108;;25956:201;26068:2;26053:18;;26082:65;26057:9;26120:6;26082:65;;26164:539;26362:3;26347:19;;26377:71;26351:9;26421:6;26377:71;;;26459:68;26523:2;26512:9;26508:18;26499:6;26459:68;;;26538:72;26606:2;26595:9;26591:18;26582:6;26538:72;;;26621;26689:2;26678:9;26674:18;26665:6;26621:72;;;26333:370;;;;;;;;26710:293;26844:2;26858:47;;;26829:18;;26919:74;26829:18;26979:6;26919:74;;27318:407;27509:2;27523:47;;;27494:18;;27584:131;27494:18;27584:131;;27732:407;27923:2;27937:47;;;27908:18;;27998:131;27908:18;27998:131;;28146:407;28337:2;28351:47;;;28322:18;;28412:131;28322:18;28412:131;;28560:407;28751:2;28765:47;;;28736:18;;28826:131;28736:18;28826:131;;28974:407;29165:2;29179:47;;;29150:18;;29240:131;29150:18;29240:131;;29388:407;29579:2;29593:47;;;29564:18;;29654:131;29564:18;29654:131;;29802:407;29993:2;30007:47;;;29978:18;;30068:131;29978:18;30068:131;;30216:407;30407:2;30421:47;;;30392:18;;30482:131;30392:18;30482:131;;30630:407;30821:2;30835:47;;;30806:18;;30896:131;30806:18;30896:131;;31044:407;31235:2;31249:47;;;31220:18;;31310:131;31220:18;31310:131;;31458:407;31649:2;31663:47;;;31634:18;;31724:131;31634:18;31724:131;;31872:407;32063:2;32077:47;;;32048:18;;32138:131;32048:18;32138:131;;32286:407;32477:2;32491:47;;;32462:18;;32552:131;32462:18;32552:131;;32700:407;32891:2;32905:47;;;32876:18;;32966:131;32876:18;32966:131;;33114:407;33305:2;33319:47;;;33290:18;;33380:131;33290:18;33380:131;;33528:407;33719:2;33733:47;;;33704:18;;33794:131;33704:18;33794:131;;33942:407;34133:2;34147:47;;;34118:18;;34208:131;34118:18;34208:131;;34356:407;34547:2;34561:47;;;34532:18;;34622:131;34532:18;34622:131;;34770:407;34961:2;34975:47;;;34946:18;;35036:131;34946:18;35036:131;;35184:407;35375:2;35389:47;;;35360:18;;35450:131;35360:18;35450:131;;35598:407;35789:2;35803:47;;;35774:18;;35864:131;35774:18;35864:131;;36012:407;36203:2;36217:47;;;36188:18;;36278:131;36188:18;36278:131;;36426:407;36617:2;36631:47;;;36602:18;;36692:131;36602:18;36692:131;;36840:407;37031:2;37045:47;;;37016:18;;37106:131;37016:18;37106:131;;37254:213;37372:2;37357:18;;37386:71;37361:9;37430:6;37386:71;;37474:731;37748:2;37733:18;;37762:71;37737:9;37806:6;37762:71;;;37881:9;37875:4;37871:20;37866:2;37855:9;37851:18;37844:48;37906:108;38009:4;38000:6;37906:108;;;37898:116;;38062:9;38056:4;38052:20;38047:2;38036:9;38032:18;38025:48;38087:108;38190:4;38181:6;38087:108;;38212:256;38274:2;38268:9;38300:17;;;38375:18;38360:34;;38396:22;;;38357:62;38354:2;;;38432:1;38429;38422:12;38354:2;38448;38441:22;38252:216;;-1:-1;38252:216;38475:321;;38651:18;38643:6;38640:30;38637:2;;;38683:1;38680;38673:12;38637:2;-1:-1;38718:4;38706:17;;;38771:15;;38574:222;38803:321;;38946:18;38938:6;38935:30;38932:2;;;38978:1;38975;38968:12;38932:2;-1:-1;39109:4;39045;39022:17;;;;-1:-1;;39018:33;39099:15;;38869:255;39460:151;39584:4;39575:14;;39532:79;39942:137;40045:12;;40016:63;41118:178;41236:19;;;41285:4;41276:14;;41229:67;41858:144;41993:3;41971:31;-1:-1;41971:31;42182:91;;42244:24;42262:5;42244:24;;42386:85;42452:13;42445:21;;42428:43;42557:144;-1:-1;;;;;;42618:78;;42601:100;42708:121;-1:-1;;;;;42770:54;;42753:76;42915:81;42986:4;42975:16;;42958:38;43003:165;;43104:59;43157:5;43104:59;;43313:145;43394:6;43389:3;43384;43371:30;-1:-1;43450:1;43432:16;;43425:27;43364:94;43467:268;43532:1;43539:101;43553:6;43550:1;43547:13;43539:101;;;43620:11;;;43614:18;43601:11;;;43594:39;43575:2;43568:10;43539:101;;;43655:6;43652:1;43649:13;43646:2;;;-1:-1;;43720:1;43702:16;;43695:27;43516:219;43743:95;;43807:26;43827:5;43845:89;43909:20;43923:5;43909:20;;44022:97;44110:2;44090:14;-1:-1;;44086:28;;44070:49;44127:94;44201:2;44197:14;;44169:52;44229:117;44298:24;44316:5;44298:24;;;44291:5;44288:35;44278:2;;44337:1;44334;44327:12;44493:111;44559:21;44574:5;44559:21;;44611:117;44680:24;44698:5;44680:24;;44735:115;44803:23;44820:5;44803:23;;44981:113;45048:22;45064:5;45048:22;",
  "source": "pragma solidity ^0.5.0;\npragma experimental ABIEncoderV2;\n\nimport \"openzeppelin-solidity/contracts/ownership/Ownable.sol\";\nimport \"openzeppelin-solidity/contracts/token/ERC721/IERC721.sol\";\nimport \"openzeppelin-solidity/contracts/token/ERC721/IERC721Metadata.sol\";\nimport \"openzeppelin-solidity/contracts/token/ERC721/ERC721Burnable.sol\";\nimport \"./ERC721Base.sol\";\n\n/**\n * @title MintableToken\n * @dev anyone can mint token.\n */\ncontract MintableToken is Ownable, IERC721, IERC721Metadata, ERC721Burnable, ERC721Base {\n\n    constructor (string memory name, string memory symbol, address newOwner, string memory contractURI, string memory tokenURIPrefix) public ERC721Base(name, symbol, contractURI, tokenURIPrefix) {\n        _registerInterface(bytes4(keccak256('MINT_WITH_ADDRESS')));\n        transferOwnership(newOwner);\n    }\n\n    function mint(uint256 tokenId, uint8 v, bytes32 r, bytes32 s, Fee[] memory _fees, string memory tokenURI) public {\n        require(owner() == ecrecover(keccak256(abi.encodePacked(this, tokenId)), v, r, s), \"owner should sign tokenId\");\n        _mint(msg.sender, tokenId, _fees);\n        _setTokenURI(tokenId, tokenURI);\n    }\n\n    function setTokenURIPrefix(string memory tokenURIPrefix) public onlyOwner {\n        _setTokenURIPrefix(tokenURIPrefix);\n    }\n\n    function setContractURI(string memory contractURI) public onlyOwner {\n        _setContractURI(contractURI);\n    }\n}\n",
  "sourcePath": "/home/quadro/Projects/tokenplace/tokenplace-contracts/contracts/MintableToken.sol",
  "ast": {
    "absolutePath": "/home/quadro/Projects/tokenplace/tokenplace-contracts/contracts/MintableToken.sol",
    "exportedSymbols": {
      "MintableToken": [
        2903
      ]
    },
    "id": 2904,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 2782,
        "literals": [
          "solidity",
          "^",
          "0.5",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:15"
      },
      {
        "id": 2783,
        "literals": [
          "experimental",
          "ABIEncoderV2"
        ],
        "nodeType": "PragmaDirective",
        "src": "24:33:15"
      },
      {
        "absolutePath": "openzeppelin-solidity/contracts/ownership/Ownable.sol",
        "file": "openzeppelin-solidity/contracts/ownership/Ownable.sol",
        "id": 2784,
        "nodeType": "ImportDirective",
        "scope": 2904,
        "sourceUnit": 6392,
        "src": "59:63:15",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "openzeppelin-solidity/contracts/token/ERC721/IERC721.sol",
        "file": "openzeppelin-solidity/contracts/token/ERC721/IERC721.sol",
        "id": 2785,
        "nodeType": "ImportDirective",
        "scope": 2904,
        "sourceUnit": 8036,
        "src": "123:66:15",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "openzeppelin-solidity/contracts/token/ERC721/IERC721Metadata.sol",
        "file": "openzeppelin-solidity/contracts/token/ERC721/IERC721Metadata.sol",
        "id": 2786,
        "nodeType": "ImportDirective",
        "scope": 2904,
        "sourceUnit": 8086,
        "src": "190:74:15",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "openzeppelin-solidity/contracts/token/ERC721/ERC721Burnable.sol",
        "file": "openzeppelin-solidity/contracts/token/ERC721/ERC721Burnable.sol",
        "id": 2787,
        "nodeType": "ImportDirective",
        "scope": 2904,
        "sourceUnit": 7593,
        "src": "265:73:15",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/quadro/Projects/tokenplace/tokenplace-contracts/contracts/ERC721Base.sol",
        "file": "./ERC721Base.sol",
        "id": 2788,
        "nodeType": "ImportDirective",
        "scope": 2904,
        "sourceUnit": 1622,
        "src": "339:26:15",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 2789,
              "name": "Ownable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 6391,
              "src": "456:7:15",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Ownable_$6391",
                "typeString": "contract Ownable"
              }
            },
            "id": 2790,
            "nodeType": "InheritanceSpecifier",
            "src": "456:7:15"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 2791,
              "name": "IERC721",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 8035,
              "src": "465:7:15",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IERC721_$8035",
                "typeString": "contract IERC721"
              }
            },
            "id": 2792,
            "nodeType": "InheritanceSpecifier",
            "src": "465:7:15"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 2793,
              "name": "IERC721Metadata",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 8085,
              "src": "474:15:15",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IERC721Metadata_$8085",
                "typeString": "contract IERC721Metadata"
              }
            },
            "id": 2794,
            "nodeType": "InheritanceSpecifier",
            "src": "474:15:15"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 2795,
              "name": "ERC721Burnable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 7592,
              "src": "491:14:15",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC721Burnable_$7592",
                "typeString": "contract ERC721Burnable"
              }
            },
            "id": 2796,
            "nodeType": "InheritanceSpecifier",
            "src": "491:14:15"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 2797,
              "name": "ERC721Base",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1621,
              "src": "507:10:15",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC721Base_$1621",
                "typeString": "contract ERC721Base"
              }
            },
            "id": 2798,
            "nodeType": "InheritanceSpecifier",
            "src": "507:10:15"
          }
        ],
        "contractDependencies": [
          1621,
          1994,
          2037,
          2121,
          5680,
          6076,
          6086,
          6391,
          7564,
          7592,
          7932,
          8035,
          8062,
          8085
        ],
        "contractKind": "contract",
        "documentation": "@title MintableToken\n@dev anyone can mint token.",
        "fullyImplemented": true,
        "id": 2903,
        "linearizedBaseContracts": [
          2903,
          1621,
          7932,
          8062,
          2121,
          1994,
          7592,
          7564,
          8085,
          8035,
          2037,
          6076,
          6086,
          6391,
          5680
        ],
        "name": "MintableToken",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 2829,
              "nodeType": "Block",
              "src": "716:112:15",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "hexValue": "4d494e545f574954485f41444452455353",
                                "id": 2820,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "string",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "762:19:15",
                                "subdenomination": null,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_stringliteral_e37243f27916e395706434720b54132b80ef5cc8c56f39b0df6485e8dfb697cf",
                                  "typeString": "literal_string \"MINT_WITH_ADDRESS\""
                                },
                                "value": "MINT_WITH_ADDRESS"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_stringliteral_e37243f27916e395706434720b54132b80ef5cc8c56f39b0df6485e8dfb697cf",
                                  "typeString": "literal_string \"MINT_WITH_ADDRESS\""
                                }
                              ],
                              "id": 2819,
                              "name": "keccak256",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 8185,
                              "src": "752:9:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                                "typeString": "function (bytes memory) pure returns (bytes32)"
                              }
                            },
                            "id": 2821,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "752:30:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          ],
                          "id": 2818,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "745:6:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_bytes4_$",
                            "typeString": "type(bytes4)"
                          },
                          "typeName": "bytes4"
                        },
                        "id": 2822,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "745:38:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        }
                      ],
                      "id": 2817,
                      "name": "_registerInterface",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6075,
                      "src": "726:18:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bytes4_$returns$__$",
                        "typeString": "function (bytes4)"
                      }
                    },
                    "id": 2823,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "726:58:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2824,
                  "nodeType": "ExpressionStatement",
                  "src": "726:58:15"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 2826,
                        "name": "newOwner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2804,
                        "src": "812:8:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 2825,
                      "name": "transferOwnership",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6366,
                      "src": "794:17:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 2827,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "794:27:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2828,
                  "nodeType": "ExpressionStatement",
                  "src": "794:27:15"
                }
              ]
            },
            "documentation": null,
            "id": 2830,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 2811,
                    "name": "name",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 2800,
                    "src": "673:4:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 2812,
                    "name": "symbol",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 2802,
                    "src": "679:6:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 2813,
                    "name": "contractURI",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 2806,
                    "src": "687:11:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 2814,
                    "name": "tokenURIPrefix",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 2808,
                    "src": "700:14:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  }
                ],
                "id": 2815,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 2810,
                  "name": "ERC721Base",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 1621,
                  "src": "662:10:15",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_ERC721Base_$1621_$",
                    "typeString": "type(contract ERC721Base)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "662:53:15"
              }
            ],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2809,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2800,
                  "name": "name",
                  "nodeType": "VariableDeclaration",
                  "scope": 2830,
                  "src": "538:18:15",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 2799,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "538:6:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2802,
                  "name": "symbol",
                  "nodeType": "VariableDeclaration",
                  "scope": 2830,
                  "src": "558:20:15",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 2801,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "558:6:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2804,
                  "name": "newOwner",
                  "nodeType": "VariableDeclaration",
                  "scope": 2830,
                  "src": "580:16:15",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2803,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "580:7:15",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2806,
                  "name": "contractURI",
                  "nodeType": "VariableDeclaration",
                  "scope": 2830,
                  "src": "598:25:15",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 2805,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "598:6:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2808,
                  "name": "tokenURIPrefix",
                  "nodeType": "VariableDeclaration",
                  "scope": 2830,
                  "src": "625:28:15",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 2807,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "625:6:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "537:117:15"
            },
            "returnParameters": {
              "id": 2816,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "716:0:15"
            },
            "scope": 2903,
            "src": "525:303:15",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 2877,
              "nodeType": "Block",
              "src": "947:212:15",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 2861,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 2847,
                            "name": "owner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 6314,
                            "src": "965:5:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                              "typeString": "function () view returns (address)"
                            }
                          },
                          "id": 2848,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "965:7:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "arguments": [
                                {
                                  "argumentTypes": null,
                                  "arguments": [
                                    {
                                      "argumentTypes": null,
                                      "id": 2853,
                                      "name": "this",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 8277,
                                      "src": "1013:4:15",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_contract$_MintableToken_$2903",
                                        "typeString": "contract MintableToken"
                                      }
                                    },
                                    {
                                      "argumentTypes": null,
                                      "id": 2854,
                                      "name": "tokenId",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 2832,
                                      "src": "1019:7:15",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_contract$_MintableToken_$2903",
                                        "typeString": "contract MintableToken"
                                      },
                                      {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": null,
                                      "id": 2851,
                                      "name": "abi",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 8178,
                                      "src": "996:3:15",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_magic_abi",
                                        "typeString": "abi"
                                      }
                                    },
                                    "id": 2852,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "memberName": "encodePacked",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": null,
                                    "src": "996:16:15",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                                      "typeString": "function () pure returns (bytes memory)"
                                    }
                                  },
                                  "id": 2855,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "996:31:15",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes_memory_ptr",
                                    "typeString": "bytes memory"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_bytes_memory_ptr",
                                    "typeString": "bytes memory"
                                  }
                                ],
                                "id": 2850,
                                "name": "keccak256",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 8185,
                                "src": "986:9:15",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                                  "typeString": "function (bytes memory) pure returns (bytes32)"
                                }
                              },
                              "id": 2856,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "986:42:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "id": 2857,
                              "name": "v",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2834,
                              "src": "1030:1:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint8",
                                "typeString": "uint8"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "id": 2858,
                              "name": "r",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2836,
                              "src": "1033:1:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "id": 2859,
                              "name": "s",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2838,
                              "src": "1036:1:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              },
                              {
                                "typeIdentifier": "t_uint8",
                                "typeString": "uint8"
                              },
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              },
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            ],
                            "id": 2849,
                            "name": "ecrecover",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 8183,
                            "src": "976:9:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_ecrecover_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$",
                              "typeString": "function (bytes32,uint8,bytes32,bytes32) pure returns (address)"
                            }
                          },
                          "id": 2860,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "976:62:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "965:73:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "6f776e65722073686f756c64207369676e20746f6b656e4964",
                        "id": 2862,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1040:27:15",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_6d18537e1ea0e06778bbeb75e3ff436a0ff7887d1472fe2fe1cc084dee8c7fe4",
                          "typeString": "literal_string \"owner should sign tokenId\""
                        },
                        "value": "owner should sign tokenId"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_6d18537e1ea0e06778bbeb75e3ff436a0ff7887d1472fe2fe1cc084dee8c7fe4",
                          "typeString": "literal_string \"owner should sign tokenId\""
                        }
                      ],
                      "id": 2846,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        8194,
                        8195
                      ],
                      "referencedDeclaration": 8195,
                      "src": "957:7:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2863,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "957:111:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2864,
                  "nodeType": "ExpressionStatement",
                  "src": "957:111:15"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 2866,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 8191,
                          "src": "1084:3:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 2867,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "1084:10:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 2868,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2832,
                        "src": "1096:7:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 2869,
                        "name": "_fees",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2841,
                        "src": "1105:5:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_Fee_$1306_memory_$dyn_memory_ptr",
                          "typeString": "struct ERC721Base.Fee memory[] memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_array$_t_struct$_Fee_$1306_memory_$dyn_memory_ptr",
                          "typeString": "struct ERC721Base.Fee memory[] memory"
                        }
                      ],
                      "id": 2865,
                      "name": "_mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        1559,
                        7739
                      ],
                      "referencedDeclaration": 1559,
                      "src": "1078:5:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_array$_t_struct$_Fee_$1306_memory_$dyn_memory_ptr_$returns$__$",
                        "typeString": "function (address,uint256,struct ERC721Base.Fee memory[] memory)"
                      }
                    },
                    "id": 2870,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1078:33:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2871,
                  "nodeType": "ExpressionStatement",
                  "src": "1078:33:15"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 2873,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2832,
                        "src": "1134:7:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 2874,
                        "name": "tokenURI",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2843,
                        "src": "1143:8:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      ],
                      "id": 2872,
                      "name": "_setTokenURI",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        1601
                      ],
                      "referencedDeclaration": 1601,
                      "src": "1121:12:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,string memory)"
                      }
                    },
                    "id": 2875,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1121:31:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2876,
                  "nodeType": "ExpressionStatement",
                  "src": "1121:31:15"
                }
              ]
            },
            "documentation": null,
            "id": 2878,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "mint",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2844,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2832,
                  "name": "tokenId",
                  "nodeType": "VariableDeclaration",
                  "scope": 2878,
                  "src": "848:15:15",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2831,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "848:7:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2834,
                  "name": "v",
                  "nodeType": "VariableDeclaration",
                  "scope": 2878,
                  "src": "865:7:15",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 2833,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "865:5:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2836,
                  "name": "r",
                  "nodeType": "VariableDeclaration",
                  "scope": 2878,
                  "src": "874:9:15",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 2835,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "874:7:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2838,
                  "name": "s",
                  "nodeType": "VariableDeclaration",
                  "scope": 2878,
                  "src": "885:9:15",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 2837,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "885:7:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2841,
                  "name": "_fees",
                  "nodeType": "VariableDeclaration",
                  "scope": 2878,
                  "src": "896:18:15",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_struct$_Fee_$1306_memory_$dyn_memory_ptr",
                    "typeString": "struct ERC721Base.Fee[]"
                  },
                  "typeName": {
                    "baseType": {
                      "contractScope": null,
                      "id": 2839,
                      "name": "Fee",
                      "nodeType": "UserDefinedTypeName",
                      "referencedDeclaration": 1306,
                      "src": "896:3:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Fee_$1306_storage_ptr",
                        "typeString": "struct ERC721Base.Fee"
                      }
                    },
                    "id": 2840,
                    "length": null,
                    "nodeType": "ArrayTypeName",
                    "src": "896:5:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_Fee_$1306_storage_$dyn_storage_ptr",
                      "typeString": "struct ERC721Base.Fee[]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2843,
                  "name": "tokenURI",
                  "nodeType": "VariableDeclaration",
                  "scope": 2878,
                  "src": "916:22:15",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 2842,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "916:6:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "847:92:15"
            },
            "returnParameters": {
              "id": 2845,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "947:0:15"
            },
            "scope": 2903,
            "src": "834:325:15",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 2889,
              "nodeType": "Block",
              "src": "1239:51:15",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 2886,
                        "name": "tokenURIPrefix",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2880,
                        "src": "1268:14:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      ],
                      "id": 2885,
                      "name": "_setTokenURIPrefix",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2099,
                      "src": "1249:18:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (string memory)"
                      }
                    },
                    "id": 2887,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1249:34:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2888,
                  "nodeType": "ExpressionStatement",
                  "src": "1249:34:15"
                }
              ]
            },
            "documentation": null,
            "id": 2890,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 2883,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 2882,
                  "name": "onlyOwner",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 6324,
                  "src": "1229:9:15",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1229:9:15"
              }
            ],
            "name": "setTokenURIPrefix",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2881,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2880,
                  "name": "tokenURIPrefix",
                  "nodeType": "VariableDeclaration",
                  "scope": 2890,
                  "src": "1192:28:15",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 2879,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1192:6:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1191:30:15"
            },
            "returnParameters": {
              "id": 2884,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1239:0:15"
            },
            "scope": 2903,
            "src": "1165:125:15",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 2901,
              "nodeType": "Block",
              "src": "1364:45:15",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 2898,
                        "name": "contractURI",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2892,
                        "src": "1390:11:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      ],
                      "id": 2897,
                      "name": "_setContractURI",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1993,
                      "src": "1374:15:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (string memory)"
                      }
                    },
                    "id": 2899,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1374:28:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2900,
                  "nodeType": "ExpressionStatement",
                  "src": "1374:28:15"
                }
              ]
            },
            "documentation": null,
            "id": 2902,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 2895,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 2894,
                  "name": "onlyOwner",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 6324,
                  "src": "1354:9:15",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1354:9:15"
              }
            ],
            "name": "setContractURI",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2893,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2892,
                  "name": "contractURI",
                  "nodeType": "VariableDeclaration",
                  "scope": 2902,
                  "src": "1320:25:15",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 2891,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1320:6:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1319:27:15"
            },
            "returnParameters": {
              "id": 2896,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1364:0:15"
            },
            "scope": 2903,
            "src": "1296:113:15",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 2904,
        "src": "430:981:15"
      }
    ],
    "src": "0:1412:15"
  },
  "legacyAST": {
    "absolutePath": "/home/quadro/Projects/tokenplace/tokenplace-contracts/contracts/MintableToken.sol",
    "exportedSymbols": {
      "MintableToken": [
        2903
      ]
    },
    "id": 2904,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 2782,
        "literals": [
          "solidity",
          "^",
          "0.5",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:15"
      },
      {
        "id": 2783,
        "literals": [
          "experimental",
          "ABIEncoderV2"
        ],
        "nodeType": "PragmaDirective",
        "src": "24:33:15"
      },
      {
        "absolutePath": "openzeppelin-solidity/contracts/ownership/Ownable.sol",
        "file": "openzeppelin-solidity/contracts/ownership/Ownable.sol",
        "id": 2784,
        "nodeType": "ImportDirective",
        "scope": 2904,
        "sourceUnit": 6392,
        "src": "59:63:15",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "openzeppelin-solidity/contracts/token/ERC721/IERC721.sol",
        "file": "openzeppelin-solidity/contracts/token/ERC721/IERC721.sol",
        "id": 2785,
        "nodeType": "ImportDirective",
        "scope": 2904,
        "sourceUnit": 8036,
        "src": "123:66:15",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "openzeppelin-solidity/contracts/token/ERC721/IERC721Metadata.sol",
        "file": "openzeppelin-solidity/contracts/token/ERC721/IERC721Metadata.sol",
        "id": 2786,
        "nodeType": "ImportDirective",
        "scope": 2904,
        "sourceUnit": 8086,
        "src": "190:74:15",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "openzeppelin-solidity/contracts/token/ERC721/ERC721Burnable.sol",
        "file": "openzeppelin-solidity/contracts/token/ERC721/ERC721Burnable.sol",
        "id": 2787,
        "nodeType": "ImportDirective",
        "scope": 2904,
        "sourceUnit": 7593,
        "src": "265:73:15",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/quadro/Projects/tokenplace/tokenplace-contracts/contracts/ERC721Base.sol",
        "file": "./ERC721Base.sol",
        "id": 2788,
        "nodeType": "ImportDirective",
        "scope": 2904,
        "sourceUnit": 1622,
        "src": "339:26:15",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 2789,
              "name": "Ownable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 6391,
              "src": "456:7:15",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Ownable_$6391",
                "typeString": "contract Ownable"
              }
            },
            "id": 2790,
            "nodeType": "InheritanceSpecifier",
            "src": "456:7:15"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 2791,
              "name": "IERC721",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 8035,
              "src": "465:7:15",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IERC721_$8035",
                "typeString": "contract IERC721"
              }
            },
            "id": 2792,
            "nodeType": "InheritanceSpecifier",
            "src": "465:7:15"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 2793,
              "name": "IERC721Metadata",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 8085,
              "src": "474:15:15",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IERC721Metadata_$8085",
                "typeString": "contract IERC721Metadata"
              }
            },
            "id": 2794,
            "nodeType": "InheritanceSpecifier",
            "src": "474:15:15"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 2795,
              "name": "ERC721Burnable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 7592,
              "src": "491:14:15",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC721Burnable_$7592",
                "typeString": "contract ERC721Burnable"
              }
            },
            "id": 2796,
            "nodeType": "InheritanceSpecifier",
            "src": "491:14:15"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 2797,
              "name": "ERC721Base",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1621,
              "src": "507:10:15",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC721Base_$1621",
                "typeString": "contract ERC721Base"
              }
            },
            "id": 2798,
            "nodeType": "InheritanceSpecifier",
            "src": "507:10:15"
          }
        ],
        "contractDependencies": [
          1621,
          1994,
          2037,
          2121,
          5680,
          6076,
          6086,
          6391,
          7564,
          7592,
          7932,
          8035,
          8062,
          8085
        ],
        "contractKind": "contract",
        "documentation": "@title MintableToken\n@dev anyone can mint token.",
        "fullyImplemented": true,
        "id": 2903,
        "linearizedBaseContracts": [
          2903,
          1621,
          7932,
          8062,
          2121,
          1994,
          7592,
          7564,
          8085,
          8035,
          2037,
          6076,
          6086,
          6391,
          5680
        ],
        "name": "MintableToken",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 2829,
              "nodeType": "Block",
              "src": "716:112:15",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "hexValue": "4d494e545f574954485f41444452455353",
                                "id": 2820,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "string",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "762:19:15",
                                "subdenomination": null,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_stringliteral_e37243f27916e395706434720b54132b80ef5cc8c56f39b0df6485e8dfb697cf",
                                  "typeString": "literal_string \"MINT_WITH_ADDRESS\""
                                },
                                "value": "MINT_WITH_ADDRESS"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_stringliteral_e37243f27916e395706434720b54132b80ef5cc8c56f39b0df6485e8dfb697cf",
                                  "typeString": "literal_string \"MINT_WITH_ADDRESS\""
                                }
                              ],
                              "id": 2819,
                              "name": "keccak256",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 8185,
                              "src": "752:9:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                                "typeString": "function (bytes memory) pure returns (bytes32)"
                              }
                            },
                            "id": 2821,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "752:30:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          ],
                          "id": 2818,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "745:6:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_bytes4_$",
                            "typeString": "type(bytes4)"
                          },
                          "typeName": "bytes4"
                        },
                        "id": 2822,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "745:38:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        }
                      ],
                      "id": 2817,
                      "name": "_registerInterface",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6075,
                      "src": "726:18:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bytes4_$returns$__$",
                        "typeString": "function (bytes4)"
                      }
                    },
                    "id": 2823,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "726:58:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2824,
                  "nodeType": "ExpressionStatement",
                  "src": "726:58:15"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 2826,
                        "name": "newOwner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2804,
                        "src": "812:8:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 2825,
                      "name": "transferOwnership",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6366,
                      "src": "794:17:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 2827,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "794:27:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2828,
                  "nodeType": "ExpressionStatement",
                  "src": "794:27:15"
                }
              ]
            },
            "documentation": null,
            "id": 2830,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 2811,
                    "name": "name",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 2800,
                    "src": "673:4:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 2812,
                    "name": "symbol",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 2802,
                    "src": "679:6:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 2813,
                    "name": "contractURI",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 2806,
                    "src": "687:11:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 2814,
                    "name": "tokenURIPrefix",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 2808,
                    "src": "700:14:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  }
                ],
                "id": 2815,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 2810,
                  "name": "ERC721Base",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 1621,
                  "src": "662:10:15",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_ERC721Base_$1621_$",
                    "typeString": "type(contract ERC721Base)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "662:53:15"
              }
            ],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2809,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2800,
                  "name": "name",
                  "nodeType": "VariableDeclaration",
                  "scope": 2830,
                  "src": "538:18:15",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 2799,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "538:6:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2802,
                  "name": "symbol",
                  "nodeType": "VariableDeclaration",
                  "scope": 2830,
                  "src": "558:20:15",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 2801,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "558:6:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2804,
                  "name": "newOwner",
                  "nodeType": "VariableDeclaration",
                  "scope": 2830,
                  "src": "580:16:15",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2803,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "580:7:15",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2806,
                  "name": "contractURI",
                  "nodeType": "VariableDeclaration",
                  "scope": 2830,
                  "src": "598:25:15",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 2805,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "598:6:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2808,
                  "name": "tokenURIPrefix",
                  "nodeType": "VariableDeclaration",
                  "scope": 2830,
                  "src": "625:28:15",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 2807,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "625:6:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "537:117:15"
            },
            "returnParameters": {
              "id": 2816,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "716:0:15"
            },
            "scope": 2903,
            "src": "525:303:15",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 2877,
              "nodeType": "Block",
              "src": "947:212:15",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 2861,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 2847,
                            "name": "owner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 6314,
                            "src": "965:5:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                              "typeString": "function () view returns (address)"
                            }
                          },
                          "id": 2848,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "965:7:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "arguments": [
                                {
                                  "argumentTypes": null,
                                  "arguments": [
                                    {
                                      "argumentTypes": null,
                                      "id": 2853,
                                      "name": "this",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 8277,
                                      "src": "1013:4:15",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_contract$_MintableToken_$2903",
                                        "typeString": "contract MintableToken"
                                      }
                                    },
                                    {
                                      "argumentTypes": null,
                                      "id": 2854,
                                      "name": "tokenId",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 2832,
                                      "src": "1019:7:15",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_contract$_MintableToken_$2903",
                                        "typeString": "contract MintableToken"
                                      },
                                      {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": null,
                                      "id": 2851,
                                      "name": "abi",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 8178,
                                      "src": "996:3:15",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_magic_abi",
                                        "typeString": "abi"
                                      }
                                    },
                                    "id": 2852,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "memberName": "encodePacked",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": null,
                                    "src": "996:16:15",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                                      "typeString": "function () pure returns (bytes memory)"
                                    }
                                  },
                                  "id": 2855,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "996:31:15",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes_memory_ptr",
                                    "typeString": "bytes memory"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_bytes_memory_ptr",
                                    "typeString": "bytes memory"
                                  }
                                ],
                                "id": 2850,
                                "name": "keccak256",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 8185,
                                "src": "986:9:15",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                                  "typeString": "function (bytes memory) pure returns (bytes32)"
                                }
                              },
                              "id": 2856,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "986:42:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "id": 2857,
                              "name": "v",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2834,
                              "src": "1030:1:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint8",
                                "typeString": "uint8"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "id": 2858,
                              "name": "r",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2836,
                              "src": "1033:1:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "id": 2859,
                              "name": "s",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2838,
                              "src": "1036:1:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              },
                              {
                                "typeIdentifier": "t_uint8",
                                "typeString": "uint8"
                              },
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              },
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            ],
                            "id": 2849,
                            "name": "ecrecover",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 8183,
                            "src": "976:9:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_ecrecover_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$",
                              "typeString": "function (bytes32,uint8,bytes32,bytes32) pure returns (address)"
                            }
                          },
                          "id": 2860,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "976:62:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "965:73:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "6f776e65722073686f756c64207369676e20746f6b656e4964",
                        "id": 2862,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1040:27:15",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_6d18537e1ea0e06778bbeb75e3ff436a0ff7887d1472fe2fe1cc084dee8c7fe4",
                          "typeString": "literal_string \"owner should sign tokenId\""
                        },
                        "value": "owner should sign tokenId"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_6d18537e1ea0e06778bbeb75e3ff436a0ff7887d1472fe2fe1cc084dee8c7fe4",
                          "typeString": "literal_string \"owner should sign tokenId\""
                        }
                      ],
                      "id": 2846,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        8194,
                        8195
                      ],
                      "referencedDeclaration": 8195,
                      "src": "957:7:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2863,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "957:111:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2864,
                  "nodeType": "ExpressionStatement",
                  "src": "957:111:15"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 2866,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 8191,
                          "src": "1084:3:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 2867,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "1084:10:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 2868,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2832,
                        "src": "1096:7:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 2869,
                        "name": "_fees",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2841,
                        "src": "1105:5:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_Fee_$1306_memory_$dyn_memory_ptr",
                          "typeString": "struct ERC721Base.Fee memory[] memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_array$_t_struct$_Fee_$1306_memory_$dyn_memory_ptr",
                          "typeString": "struct ERC721Base.Fee memory[] memory"
                        }
                      ],
                      "id": 2865,
                      "name": "_mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        1559,
                        7739
                      ],
                      "referencedDeclaration": 1559,
                      "src": "1078:5:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_array$_t_struct$_Fee_$1306_memory_$dyn_memory_ptr_$returns$__$",
                        "typeString": "function (address,uint256,struct ERC721Base.Fee memory[] memory)"
                      }
                    },
                    "id": 2870,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1078:33:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2871,
                  "nodeType": "ExpressionStatement",
                  "src": "1078:33:15"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 2873,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2832,
                        "src": "1134:7:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 2874,
                        "name": "tokenURI",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2843,
                        "src": "1143:8:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      ],
                      "id": 2872,
                      "name": "_setTokenURI",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        1601
                      ],
                      "referencedDeclaration": 1601,
                      "src": "1121:12:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,string memory)"
                      }
                    },
                    "id": 2875,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1121:31:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2876,
                  "nodeType": "ExpressionStatement",
                  "src": "1121:31:15"
                }
              ]
            },
            "documentation": null,
            "id": 2878,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "mint",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2844,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2832,
                  "name": "tokenId",
                  "nodeType": "VariableDeclaration",
                  "scope": 2878,
                  "src": "848:15:15",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2831,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "848:7:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2834,
                  "name": "v",
                  "nodeType": "VariableDeclaration",
                  "scope": 2878,
                  "src": "865:7:15",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 2833,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "865:5:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2836,
                  "name": "r",
                  "nodeType": "VariableDeclaration",
                  "scope": 2878,
                  "src": "874:9:15",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 2835,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "874:7:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2838,
                  "name": "s",
                  "nodeType": "VariableDeclaration",
                  "scope": 2878,
                  "src": "885:9:15",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 2837,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "885:7:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2841,
                  "name": "_fees",
                  "nodeType": "VariableDeclaration",
                  "scope": 2878,
                  "src": "896:18:15",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_struct$_Fee_$1306_memory_$dyn_memory_ptr",
                    "typeString": "struct ERC721Base.Fee[]"
                  },
                  "typeName": {
                    "baseType": {
                      "contractScope": null,
                      "id": 2839,
                      "name": "Fee",
                      "nodeType": "UserDefinedTypeName",
                      "referencedDeclaration": 1306,
                      "src": "896:3:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Fee_$1306_storage_ptr",
                        "typeString": "struct ERC721Base.Fee"
                      }
                    },
                    "id": 2840,
                    "length": null,
                    "nodeType": "ArrayTypeName",
                    "src": "896:5:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_Fee_$1306_storage_$dyn_storage_ptr",
                      "typeString": "struct ERC721Base.Fee[]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2843,
                  "name": "tokenURI",
                  "nodeType": "VariableDeclaration",
                  "scope": 2878,
                  "src": "916:22:15",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 2842,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "916:6:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "847:92:15"
            },
            "returnParameters": {
              "id": 2845,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "947:0:15"
            },
            "scope": 2903,
            "src": "834:325:15",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 2889,
              "nodeType": "Block",
              "src": "1239:51:15",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 2886,
                        "name": "tokenURIPrefix",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2880,
                        "src": "1268:14:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      ],
                      "id": 2885,
                      "name": "_setTokenURIPrefix",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2099,
                      "src": "1249:18:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (string memory)"
                      }
                    },
                    "id": 2887,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1249:34:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2888,
                  "nodeType": "ExpressionStatement",
                  "src": "1249:34:15"
                }
              ]
            },
            "documentation": null,
            "id": 2890,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 2883,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 2882,
                  "name": "onlyOwner",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 6324,
                  "src": "1229:9:15",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1229:9:15"
              }
            ],
            "name": "setTokenURIPrefix",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2881,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2880,
                  "name": "tokenURIPrefix",
                  "nodeType": "VariableDeclaration",
                  "scope": 2890,
                  "src": "1192:28:15",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 2879,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1192:6:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1191:30:15"
            },
            "returnParameters": {
              "id": 2884,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1239:0:15"
            },
            "scope": 2903,
            "src": "1165:125:15",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 2901,
              "nodeType": "Block",
              "src": "1364:45:15",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 2898,
                        "name": "contractURI",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2892,
                        "src": "1390:11:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      ],
                      "id": 2897,
                      "name": "_setContractURI",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1993,
                      "src": "1374:15:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (string memory)"
                      }
                    },
                    "id": 2899,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1374:28:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2900,
                  "nodeType": "ExpressionStatement",
                  "src": "1374:28:15"
                }
              ]
            },
            "documentation": null,
            "id": 2902,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 2895,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 2894,
                  "name": "onlyOwner",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 6324,
                  "src": "1354:9:15",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1354:9:15"
              }
            ],
            "name": "setContractURI",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2893,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2892,
                  "name": "contractURI",
                  "nodeType": "VariableDeclaration",
                  "scope": 2902,
                  "src": "1320:25:15",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 2891,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1320:6:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1319:27:15"
            },
            "returnParameters": {
              "id": 2896,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1364:0:15"
            },
            "scope": 2903,
            "src": "1296:113:15",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 2904,
        "src": "430:981:15"
      }
    ],
    "src": "0:1412:15"
  },
  "compiler": {
    "name": "solc",
    "version": "0.5.17+commit.d19bba13.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.0.6",
  "updatedAt": "2020-05-27T11:30:37.248Z",
  "devdoc": {
    "details": "anyone can mint token.",
    "methods": {
      "approve(address,uint256)": {
        "details": "Approves another address to transfer the given token ID The zero address indicates there is no approved address. There can only be one approved address per token at a given time. Can only be called by the token owner or an approved operator.",
        "params": {
          "to": "address to be approved for the given token ID",
          "tokenId": "uint256 ID of the token to be approved"
        }
      },
      "balanceOf(address)": {
        "details": "Gets the balance of the specified address.",
        "params": {
          "owner": "address to query the balance of"
        },
        "return": "uint256 representing the amount owned by the passed address"
      },
      "burn(uint256)": {
        "details": "Burns a specific ERC721 token.",
        "params": {
          "tokenId": "uint256 id of the ERC721 token to be burned."
        }
      },
      "getApproved(uint256)": {
        "details": "Gets the approved address for a token ID, or zero if no address set Reverts if the token ID does not exist.",
        "params": {
          "tokenId": "uint256 ID of the token to query the approval of"
        },
        "return": "address currently approved for the given token ID"
      },
      "isApprovedForAll(address,address)": {
        "details": "Tells whether an operator is approved by a given owner.",
        "params": {
          "operator": "operator address which you want to query the approval of",
          "owner": "owner address which you want to query the approval of"
        },
        "return": "bool whether the given operator is approved by the given owner"
      },
      "isOwner()": {
        "details": "Returns true if the caller is the current owner."
      },
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "ownerOf(uint256)": {
        "details": "Gets the owner of the specified token ID.",
        "params": {
          "tokenId": "uint256 ID of the token to query the owner of"
        },
        "return": "address currently marked as the owner of the given token ID"
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner.     * NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "safeTransferFrom(address,address,uint256)": {
        "details": "Safely transfers the ownership of a given token ID to another address If the target address is a contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer, and return the magic value `bytes4(keccak256(\"onERC721Received(address,address,uint256,bytes)\"))`; otherwise, the transfer is reverted. Requires the msg.sender to be the owner, approved, or operator",
        "params": {
          "from": "current owner of the token",
          "to": "address to receive the ownership of the given token ID",
          "tokenId": "uint256 ID of the token to be transferred"
        }
      },
      "safeTransferFrom(address,address,uint256,bytes)": {
        "details": "Safely transfers the ownership of a given token ID to another address If the target address is a contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer, and return the magic value `bytes4(keccak256(\"onERC721Received(address,address,uint256,bytes)\"))`; otherwise, the transfer is reverted. Requires the _msgSender() to be the owner, approved, or operator",
        "params": {
          "_data": "bytes data to send along with a safe transfer check",
          "from": "current owner of the token",
          "to": "address to receive the ownership of the given token ID",
          "tokenId": "uint256 ID of the token to be transferred"
        }
      },
      "setApprovalForAll(address,bool)": {
        "details": "Sets or unsets the approval of a given operator An operator is allowed to transfer all tokens of the sender on their behalf.",
        "params": {
          "approved": "representing the status of the approval to be set",
          "to": "operator address to set the approval"
        }
      },
      "supportsInterface(bytes4)": {
        "details": "See {IERC165-supportsInterface}.     * Time complexity O(1), guaranteed to always use less than 30 000 gas."
      },
      "tokenByIndex(uint256)": {
        "details": "Gets the token ID at a given index of all the tokens in this contract Reverts if the index is greater or equal to the total number of tokens.",
        "params": {
          "index": "uint256 representing the index to be accessed of the tokens list"
        },
        "return": "uint256 token ID at the given index of the tokens list"
      },
      "tokenOfOwnerByIndex(address,uint256)": {
        "details": "Gets the token ID at a given index of the tokens list of the requested owner.",
        "params": {
          "index": "uint256 representing the index to be accessed of the requested tokens list",
          "owner": "address owning the tokens list to be accessed"
        },
        "return": "uint256 token ID at the given index of the tokens list owned by the requested address"
      },
      "tokenURI(uint256)": {
        "details": "Returns an URI for a given token ID. Throws if the token ID does not exist. May return an empty string.",
        "params": {
          "tokenId": "uint256 ID of the token to query"
        }
      },
      "totalSupply()": {
        "details": "Gets the total amount of tokens stored by the contract.",
        "return": "uint256 representing the total amount of tokens"
      },
      "transferFrom(address,address,uint256)": {
        "details": "Transfers the ownership of a given token ID to another address. Usage of this method is discouraged, use {safeTransferFrom} whenever possible. Requires the msg.sender to be the owner, approved, or operator.",
        "params": {
          "from": "current owner of the token",
          "to": "address to receive the ownership of the given token ID",
          "tokenId": "uint256 ID of the token to be transferred"
        }
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      }
    },
    "title": "MintableToken"
  },
  "userdoc": {
    "methods": {}
  }
}