{
  "contractName": "IOwnable",
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "prevOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnerUpdated",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_newOwner",
          "type": "address"
        }
      ],
      "name": "setOwner",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.7.6+commit.7338295f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"prevOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnerUpdated\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_newOwner\",\"type\":\"address\"}],\"name\":\"setOwner\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"OwnerUpdated(address,address)\":{\"details\":\"Emitted when a new Owner is set.\"}},\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the owner of the contract.\"},\"setOwner(address)\":{\"details\":\"Lets a module admin set a new owner for the contract. The new owner must be a module admin.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"Thirdweb's `Ownable` is a contract extension to be used with any base contract. It exposes functions for setting and reading  who the 'owner' of the inheriting smart contract is, and lets the inheriting contract perform conditional logic that uses  information about who the contract's owner is.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"project:/contracts/dependencies/IOwnable.sol\":\"IOwnable\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"project:/contracts/dependencies/IOwnable.sol\":{\"keccak256\":\"0x184e7052615812c1830b0a0d1eef084d6a5251dc1ed9231ed544012ecb2d7b56\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://8e5b6f260319a623e3b986ded8023e7b546d9b2ee309cfa44d9e6746fb97cff5\",\"dweb:/ipfs/QmeR7zzx6FRwv2x1sRacP6ARwSTxUyLmHN5gKr2KHUj19f\"]}},\"version\":1}",
  "bytecode": "0x",
  "deployedBytecode": "0x",
  "immutableReferences": {},
  "generatedSources": [],
  "deployedGeneratedSources": [],
  "sourceMap": "",
  "deployedSourceMap": "",
  "source": "// SPDX-License-Identifier: Apache-2.0\npragma solidity ^0.7.6;\n\n/// @author thirdweb\n\n/**\n *  Thirdweb's `Ownable` is a contract extension to be used with any base contract. It exposes functions for setting and reading\n *  who the 'owner' of the inheriting smart contract is, and lets the inheriting contract perform conditional logic that uses\n *  information about who the contract's owner is.\n */\n\ninterface IOwnable {\n    /// @dev Returns the owner of the contract.\n    function owner() external view returns (address);\n\n    /// @dev Lets a module admin set a new owner for the contract. The new owner must be a module admin.\n    function setOwner(address _newOwner) external;\n\n    /// @dev Emitted when a new Owner is set.\n    event OwnerUpdated(address indexed prevOwner, address indexed newOwner);\n}",
  "sourcePath": "/Users/dmitry/workspaces/workspace-rarible/protocol-contracts/projects/tokens-test/contracts/dependencies/IOwnable.sol",
  "ast": {
    "absolutePath": "project:/contracts/dependencies/IOwnable.sol",
    "exportedSymbols": {
      "IOwnable": [
        3209
      ]
    },
    "id": 3210,
    "license": "Apache-2.0",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 3188,
        "literals": [
          "solidity",
          "^",
          "0.7",
          ".6"
        ],
        "nodeType": "PragmaDirective",
        "src": "39:23:15"
      },
      {
        "abstract": false,
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "interface",
        "documentation": {
          "id": 3189,
          "nodeType": "StructuredDocumentation",
          "src": "86:313:15",
          "text": "  Thirdweb's `Ownable` is a contract extension to be used with any base contract. It exposes functions for setting and reading\n  who the 'owner' of the inheriting smart contract is, and lets the inheriting contract perform conditional logic that uses\n  information about who the contract's owner is."
        },
        "fullyImplemented": false,
        "id": 3209,
        "linearizedBaseContracts": [
          3209
        ],
        "name": "IOwnable",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "documentation": {
              "id": 3190,
              "nodeType": "StructuredDocumentation",
              "src": "426:43:15",
              "text": "@dev Returns the owner of the contract."
            },
            "functionSelector": "8da5cb5b",
            "id": 3195,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "owner",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3191,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "488:2:15"
            },
            "returnParameters": {
              "id": 3194,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3193,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 3195,
                  "src": "514:7:15",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3192,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "514:7:15",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "513:9:15"
            },
            "scope": 3209,
            "src": "474:49:15",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 3196,
              "nodeType": "StructuredDocumentation",
              "src": "529:100:15",
              "text": "@dev Lets a module admin set a new owner for the contract. The new owner must be a module admin."
            },
            "functionSelector": "13af4035",
            "id": 3201,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "setOwner",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3199,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3198,
                  "mutability": "mutable",
                  "name": "_newOwner",
                  "nodeType": "VariableDeclaration",
                  "scope": 3201,
                  "src": "652:17:15",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3197,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "652:7:15",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "651:19:15"
            },
            "returnParameters": {
              "id": 3200,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "679:0:15"
            },
            "scope": 3209,
            "src": "634:46:15",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "anonymous": false,
            "documentation": {
              "id": 3202,
              "nodeType": "StructuredDocumentation",
              "src": "686:41:15",
              "text": "@dev Emitted when a new Owner is set."
            },
            "id": 3208,
            "name": "OwnerUpdated",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 3207,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3204,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "prevOwner",
                  "nodeType": "VariableDeclaration",
                  "scope": 3208,
                  "src": "751:25:15",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3203,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "751:7:15",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3206,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "newOwner",
                  "nodeType": "VariableDeclaration",
                  "scope": 3208,
                  "src": "778:24:15",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3205,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "778:7:15",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "750:53:15"
            },
            "src": "732:72:15"
          }
        ],
        "scope": 3210,
        "src": "401:405:15"
      }
    ],
    "src": "39:767:15"
  },
  "legacyAST": {
    "attributes": {
      "absolutePath": "project:/contracts/dependencies/IOwnable.sol",
      "exportedSymbols": {
        "IOwnable": [
          3209
        ]
      },
      "license": "Apache-2.0"
    },
    "children": [
      {
        "attributes": {
          "literals": [
            "solidity",
            "^",
            "0.7",
            ".6"
          ]
        },
        "id": 3188,
        "name": "PragmaDirective",
        "src": "39:23:15"
      },
      {
        "attributes": {
          "abstract": false,
          "baseContracts": [
            null
          ],
          "contractDependencies": [
            null
          ],
          "contractKind": "interface",
          "fullyImplemented": false,
          "linearizedBaseContracts": [
            3209
          ],
          "name": "IOwnable",
          "scope": 3210
        },
        "children": [
          {
            "attributes": {
              "text": "  Thirdweb's `Ownable` is a contract extension to be used with any base contract. It exposes functions for setting and reading\n  who the 'owner' of the inheriting smart contract is, and lets the inheriting contract perform conditional logic that uses\n  information about who the contract's owner is."
            },
            "id": 3189,
            "name": "StructuredDocumentation",
            "src": "86:313:15"
          },
          {
            "attributes": {
              "functionSelector": "8da5cb5b",
              "implemented": false,
              "isConstructor": false,
              "kind": "function",
              "modifiers": [
                null
              ],
              "name": "owner",
              "scope": 3209,
              "stateMutability": "view",
              "virtual": false,
              "visibility": "external"
            },
            "children": [
              {
                "attributes": {
                  "text": "@dev Returns the owner of the contract."
                },
                "id": 3190,
                "name": "StructuredDocumentation",
                "src": "426:43:15"
              },
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 3191,
                "name": "ParameterList",
                "src": "488:2:15"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "",
                      "scope": 3195,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "address",
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "address",
                          "stateMutability": "nonpayable",
                          "type": "address"
                        },
                        "id": 3192,
                        "name": "ElementaryTypeName",
                        "src": "514:7:15"
                      }
                    ],
                    "id": 3193,
                    "name": "VariableDeclaration",
                    "src": "514:7:15"
                  }
                ],
                "id": 3194,
                "name": "ParameterList",
                "src": "513:9:15"
              }
            ],
            "id": 3195,
            "name": "FunctionDefinition",
            "src": "474:49:15"
          },
          {
            "attributes": {
              "functionSelector": "13af4035",
              "implemented": false,
              "isConstructor": false,
              "kind": "function",
              "modifiers": [
                null
              ],
              "name": "setOwner",
              "scope": 3209,
              "stateMutability": "nonpayable",
              "virtual": false,
              "visibility": "external"
            },
            "children": [
              {
                "attributes": {
                  "text": "@dev Lets a module admin set a new owner for the contract. The new owner must be a module admin."
                },
                "id": 3196,
                "name": "StructuredDocumentation",
                "src": "529:100:15"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "_newOwner",
                      "scope": 3201,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "address",
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "address",
                          "stateMutability": "nonpayable",
                          "type": "address"
                        },
                        "id": 3197,
                        "name": "ElementaryTypeName",
                        "src": "652:7:15"
                      }
                    ],
                    "id": 3198,
                    "name": "VariableDeclaration",
                    "src": "652:17:15"
                  }
                ],
                "id": 3199,
                "name": "ParameterList",
                "src": "651:19:15"
              },
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 3200,
                "name": "ParameterList",
                "src": "679:0:15"
              }
            ],
            "id": 3201,
            "name": "FunctionDefinition",
            "src": "634:46:15"
          },
          {
            "attributes": {
              "anonymous": false,
              "name": "OwnerUpdated"
            },
            "children": [
              {
                "attributes": {
                  "text": "@dev Emitted when a new Owner is set."
                },
                "id": 3202,
                "name": "StructuredDocumentation",
                "src": "686:41:15"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "indexed": true,
                      "mutability": "mutable",
                      "name": "prevOwner",
                      "scope": 3208,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "address",
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "address",
                          "stateMutability": "nonpayable",
                          "type": "address"
                        },
                        "id": 3203,
                        "name": "ElementaryTypeName",
                        "src": "751:7:15"
                      }
                    ],
                    "id": 3204,
                    "name": "VariableDeclaration",
                    "src": "751:25:15"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "indexed": true,
                      "mutability": "mutable",
                      "name": "newOwner",
                      "scope": 3208,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "address",
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "address",
                          "stateMutability": "nonpayable",
                          "type": "address"
                        },
                        "id": 3205,
                        "name": "ElementaryTypeName",
                        "src": "778:7:15"
                      }
                    ],
                    "id": 3206,
                    "name": "VariableDeclaration",
                    "src": "778:24:15"
                  }
                ],
                "id": 3207,
                "name": "ParameterList",
                "src": "750:53:15"
              }
            ],
            "id": 3208,
            "name": "EventDefinition",
            "src": "732:72:15"
          }
        ],
        "id": 3209,
        "name": "ContractDefinition",
        "src": "401:405:15"
      }
    ],
    "id": 3210,
    "name": "SourceUnit",
    "src": "39:767:15"
  },
  "compiler": {
    "name": "solc",
    "version": "0.7.6+commit.7338295f.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.4.16",
  "updatedAt": "2024-05-03T06:53:43.431Z",
  "devdoc": {
    "events": {
      "OwnerUpdated(address,address)": {
        "details": "Emitted when a new Owner is set."
      }
    },
    "kind": "dev",
    "methods": {
      "owner()": {
        "details": "Returns the owner of the contract."
      },
      "setOwner(address)": {
        "details": "Lets a module admin set a new owner for the contract. The new owner must be a module admin."
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "notice": "Thirdweb's `Ownable` is a contract extension to be used with any base contract. It exposes functions for setting and reading  who the 'owner' of the inheriting smart contract is, and lets the inheriting contract perform conditional logic that uses  information about who the contract's owner is.",
    "version": 1
  }
}